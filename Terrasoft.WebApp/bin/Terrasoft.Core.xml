<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Terrasoft.Core</name>
    </assembly>
    <members>
        <member name="T:Terrasoft.Core.FileDesignModeSection">
            <summary>
            FileDesignModeSection serializer
            </summary>
        </member>
        <member name="P:Terrasoft.Core.FileDesignModeSection.Enabled">
            <summary>
            FileDesignMode switching
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConfigurationSectionGroup.FileDesignModeSection">
            <summary>
            FileDesignMode settings section
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.DesignModeFactory">
            <summary>
            Design mode factory used to create configuration assembly loader.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.IsDemoMode">
            <summary>
            Indicates whether demo mode is enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.FileDesignModeSettings">
            <summary>
            Returns the property that indicates current settings of design mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.UseCompiledProcessParamsSerialization">
            <summary>
            Flag indicates whether source code generator can write methods for parameter values serialization.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.UseClientUnitInstanceCache">
            <summary>
            Flag indicates whether system can use cached mechanism for client unit schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.MaxEntityRowCount">
            <summary>
            The maximum number of entries in EntityCollection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AppConnection.WorkspaceId">
            <summary>
            Current workspace Id
            </summary>
        </member>
        <member name="F:Terrasoft.Core.AppConnection._partnerIdP">
            <summary>
            Single sign on partner identity provider name.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.AppConnection._samlNameFieldName">
            <summary>
            The name of the parameter "name".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.AppConnection._samlRoleFieldName">
            <summary>
            The name of the parameter "role".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.AppConnection._defUserType">
            <summary>
            Default user type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.AppConnection.UpdateUseOffsetFetchSettingState">
            <summary>
            Updates "UseOffsetFetch" setting state using server version.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.AppConnection.GetEntitiesWithDateColumn">
            <summary>
            Returns the key-value collection of schema names and their Date columns names lists.
            </summary>
            <returns>Dictionary of schema names and their Date columns names lists.</returns>
        </member>
        <member name="T:Terrasoft.Core.AssemblyResolver">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.AssemblyResolver.#ctor(System.Func{System.String,System.Reflection.Assembly})">
            <summary>
            Initializes a new instance of <see cref="T:Terrasoft.Core.AssemblyResolver"/> class.
            </summary>
            <param name="customResolver">Custom resolve method. Will be used first if defined.</param>
        </member>
        <member name="M:Terrasoft.Core.AssemblyResolver.#ctor(System.Func{System.String,System.Reflection.Assembly},System.Func{System.Reflection.Assembly[]},Terrasoft.Core.IAssemblyResolveListenerInstaller)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.AssemblyResolver"/> class.
            </summary>
            <param name="customResolver">Custom resolve method. Will be used first if defined.</param>
            <param name="currentDomainAssembliesProvider">Function, returns current loaded assemblies.</param>
            <param name="listenerInstaller">Custom resolve event listener installer.</param>
        </member>
        <member name="M:Terrasoft.Core.AssemblyResolver.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.AssemblyResolver"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.AssemblyResolver.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.AssemblyResolver.Install">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.AsyncOperations.Interfaces.IAsyncOperation">
            <summary>
            Base interface for async operations.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.AsyncOperations.Interfaces.IUserContextAsyncOperation`1">
            <summary>
            Describes async operation.
            </summary>
            <typeparam name="TArguments">Async operation arguments type.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.AsyncOperations.Interfaces.IUserContextAsyncOperation`1.Execute(Terrasoft.Core.UserConnection,`0)">
            <summary>
            Execute async user context operation.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="arguments">Operation arguments.</param>
        </member>
        <member name="T:Terrasoft.Core.Attributes.OrderAttribute">
            <summary>
            Attribute defines an order of the same interface methods execution in case of multiple implementations.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Attributes.OrderAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Attributes.OrderAttribute"/> class.
            </summary>
            <param name="order">Method's order. Less values first.</param>
        </member>
        <member name="F:Terrasoft.Core.Attributes.OrderAttribute._order">
            <summary>
            Method's order. Less values first.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Attributes.RefAssemblyMarker">
            <summary>
            Assembly marker. Specifies possible options for using the assembly.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Attributes.RefAssemblyMarker.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Attributes.RefAssemblyMarker.ServiceRoutes">
            <summary>
            Assembly contains service routes.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Attributes.RefAssemblyMarker.EntityEvents">
            <summary>
            Assembly contains entity events.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Attributes.RefAssemblyMarker.DIBindings">
            <summary>
            Assembly contains DI bindings.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Attributes.RefAssemblyMarker.All">
            <summary>
            Assembly contains all markers.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Attributes.PackageReferenceAssemblyAttribute">
            <summary>
            Attribute defines an assembly extended information.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Attributes.PackageReferenceAssemblyAttribute.#ctor(Terrasoft.Core.Attributes.RefAssemblyMarker)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Attributes.PackageReferenceAssemblyAttribute"/> class.
            </summary>
            <param name="markers">Assembly markers <see cref="T:Terrasoft.Core.Attributes.RefAssemblyMarker"/>.</param>
        </member>
        <member name="P:Terrasoft.Core.Attributes.PackageReferenceAssemblyAttribute.RefAssemblyMarkers">
            <summary>
            Assembly marker flags.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Attributes.UtcConversionAttribute">
            <summary>
            Attribute that indicates that the DateTime property should be converted to Utc before saving
            and converted to local time after reading from database.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AuthData.ClaimList">
            <summary>
            Claim attributes list.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.AuthData.ExternalAccessId">
            <summary>
            Gets or sets the external access identifier.
            </summary>
            <value>
            The external access identifier.
            </value>
        </member>
        <member name="T:Terrasoft.Core.BackgroundUserConnection">
            <summary>
            Base class for implementing connection for background tasks with an ability to mutate current user.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BackgroundUserConnection.#ctor(Terrasoft.Core.AppConnection,System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.BackgroundUserConnection"/>.
            </summary>
            <param name="appConnection"><see cref="T:Terrasoft.Core.AppConnection"/> instance to initialize from.</param>
            <param name="isSystemUser">Flag, that indicates need to use of system user.</param>
        </member>
        <member name="M:Terrasoft.Core.BackgroundUserConnection.#ctor(Terrasoft.Core.AppConnection,System.Boolean,System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.BackgroundUserConnection"/>.
            </summary>
            <param name="appConnection"><see cref="T:Terrasoft.Core.AppConnection"/> instance to initialize from.</param>
            <param name="isSystemUser">Flag, that indicates need to use of system user.</param>
            <param name="useCurrentUserInfo">Sign of using current user info.</param>
        </member>
        <member name="M:Terrasoft.Core.BackgroundUserConnection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.BackgroundUserConnection"/>.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance.</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> instance.</param>
        </member>
        <member name="P:Terrasoft.Core.BackgroundUserConnection.RequestData">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.BackgroundUserConnection.SessionCache">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.BackgroundUserConnection.SessionData">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.BackgroundUserConnection.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.BackgroundUserConnection.InitializeCurrentUser(System.String,System.TimeZoneInfo,System.String,System.String,System.Boolean)">
            <summary>
            Initializes current user.
            </summary>
            <param name="userName">User name to initialize.</param>
            <param name="timeZone">Time zone to apply to current user.</param>
            <param name="clientIP">Current client's IP, if available.</param>
            <param name="agent">Current client's UserAgent string, if available.</param>
            <param name="logSessionStart"><c>true</c> to use logging, <c>false</c> otherwise.</param>
        </member>
        <member name="M:Terrasoft.Core.BackgroundUserConnection.InitializeDBSecurityEngine">
            <summary>
            Initializes security engine base on <see cref="P:Terrasoft.Core.BackgroundUserConnection.IsSystemUser"/> value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BaseExtraPropertyCollection`1">
            <summary>
            Base collection for extra property items.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <seealso cref="T:System.Collections.ObjectModel.Collection`1" />
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.FindByName(System.String)">
            <summary>
            Finds the item of the given name.
            </summary>
            <param name="name">The name.</param>
            <returns>The found item or <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.GetByName(System.String)">
            <summary>
            Gets the item the given name.
            </summary>
            <param name="name">The name.</param>
            <returns>The found item.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">The given name is empty.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">The item was not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.GetValueByName``1(System.String,``0)">
            <summary>
            Gets the item's value by it's name with default value in case the value is <c>null</c>.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="extraPropertyName">Name of the extra property.</param>
            <param name="defValue">The default value.</param>
            <returns>The value or the given defValue if the value is <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.FindValueByName``1(System.String,``0)">
            <summary>
            Finds the item's value by it's name with default value in case the value is <c>null</c> or it is not found.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="extraPropertyName">Name of the extra property.</param>
            <param name="defValue">The default value.</param>
            <returns>The value or the given defValue if the value is <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.TryFindValueByName``1(System.String,``0@)">
            <summary>
            Finds the value of the property with given name.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">Result value.</param>
            <returns><c>true</c> if value found; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.GetValueByName``1(System.String)">
            <summary>
            Gets the item's value by it's name.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="extraPropertyName">Name of the extra property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.GetValueByName(System.String)">
            <summary>
            Gets the item's value by it's name.
            </summary>
            <param name="extraPropertyName">Name of the extra property.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.SetValueByName(System.String,System.Object)">
            <summary>
            Sets the value for the item with the given name.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.SetValues``1(System.Collections.Generic.IDictionary{System.String,``0})">
            <summary>
            Sets the values for the items related with the given dictionary.
            </summary>
            <typeparam name="T">The type of the values.</typeparam>
            <param name="values">The values. The keys are related to the property names and values are related to the
            property values.</param>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.ParseObject(System.Object)">
            <summary>
            Parses the object.
            </summary>
            <param name="parsingObject">The parsing object.</param>
            <exception cref="T:System.ArgumentNullException">parsingObject</exception>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.SafeGetExtraPropertyValue``1(System.String)">
            <summary>
            Safely gets the extra property value.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="name">The name.</param>
            <returns>
            The value of the extra property or the type default value if it is absent.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.SafeGetExtraPropertyValue``1(System.String,``0)">
            <summary>
            Safely gets the property value.
            </summary>
            <typeparam name="T">The value type.</typeparam>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The value of the extra property or <c>defaultValue</c> if it is absent.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.BaseExtraPropertyCollection`1.Contains(System.String)">
            <summary>
            Returns <c>true</c> if collection contains item with specified <paramref name="name"/>, otherwise
            <c>false</c>
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="T:Terrasoft.Core.BasePropertyResolver`1">
            <summary>
            The base type for <see cref="T:Terrasoft.Core.ExtraProperty"/> resolution.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.BasePropertyResolver`1.CreateProperty(Terrasoft.Core.ExtraPropertyInfo)">
            <summary>
            Creates the property of <typeparamref name="TProperty"/>"> type.
            </summary>
            <param name="info">Instace of <see cref="T:System.Reflection.PropertyInfo"/> item.</param>
            <returns>Created property.</returns>
        </member>
        <member name="M:Terrasoft.Core.BasePropertyResolver`1.ResolveProperties(System.Type,System.Collections.ObjectModel.Collection{`0})">
            <summary>
            Resolves the properties.
            </summary>
            <param name="sourceType">Type of the source.</param>
            <param name="extraProperties">The extra properties.</param>
        </member>
        <member name="T:Terrasoft.Core.UserLevelResource">
            <summary>
            ############ ### ######### ######## ######### ###### # ##### ## ##### ############, 
            ######## #### ### ####### ###### </summary>
        </member>
        <member name="M:Terrasoft.Core.EntityResource.#ctor(Terrasoft.Core.UserConnection,System.String,System.Guid,System.Guid)">
            <summary>
            </summary>
            <param name="resourceSchemaIdentity"> ######## #### ### #####, #### UId #####</param>
            <param name="resourceColumnUId"></param>
            <param name="resourceId"></param>
            <param name="userConnection"></param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Actions.IBusinessRuleAction">
            <summary>
            IBusinessRuleAction interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Actions.IBusinessRuleAction.Enabled">
            <summary>
            Is action enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Actions.IBusinessRuleAction.Description">
            <summary>
            Action description.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Actions.IDefaultValueBusinessRuleAction`1">
            <summary>
            IDefaultValueBusinessRuleAction interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Actions.IDefaultValueBusinessRuleAction`1.Column">
            <summary>
            Entity schema column.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Actions.IDefaultValueBusinessRuleAction`1.Value">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Cases.IBusinessRuleCase`2">
            <summary>
            IBusinessRuleCase interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Cases.IBusinessRuleCase`2.Condition">
            <summary>
            Business rule case condition.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Cases.IBusinessRuleCase`2.Executable">
            <summary>
            Business rule case execute.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IBusinessRuleCondition">
            <summary>
            BusinessRuleCondition interface.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IBusinessRuleConditionGroup`1">
            <summary>
            BusinessRuleComparisonCondition interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IBusinessRuleConditionGroup`1.LogicalOperation">
            <summary>
            Condition logical operation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IBusinessRuleConditionGroup`1.Items">
            <summary>
            Condition items.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IComparisonBusinessRuleCondition`1">
            <summary>
            BusinessRuleComparisonCondition interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IComparisonBusinessRuleCondition`1.LeftExpression">
            <summary>
            Left expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IComparisonBusinessRuleCondition`1.ComparisonType">
            <summary>
            Expression comparison type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Conditions.IComparisonBusinessRuleCondition`1.RightExpression">
            <summary>
            Right expression.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Expressions.IBusinessRuleExpression">
            <summary>
            BusinessRuleExpression interface.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Expressions.IColumnBusinessRuleExpression">
            <summary>
            ColumnBusinessRuleExpression interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Expressions.IColumnBusinessRuleExpression.ColumnMetaPath">
            <summary>
            Parent object meta path.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.Expressions.IConstantBusinessRuleExpression">
            <summary>
            ConstantBusinessRuleExpression interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Expressions.IConstantBusinessRuleExpression.DataValueType">
            <summary>
            Data value type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.Expressions.IConstantBusinessRuleExpression.Value">
            <summary>
            Constant value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2">
            <summary>
            BusinessRuleExpression interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2.Name">
            <summary>
            Business rule name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2.Description">
            <summary>
            Business rule description.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2.EntitySchemaUId">
            <summary>
            Entity schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2.Type">
            <summary>
            Business rule usage type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2.Trigger">
            <summary>
            Business rule trigger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRule`2.Executable">
            <summary>
            Business rule execution.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Abstract.IBusinessRuleExecutable">
            <summary>
            BusinessRuleExecutable interface.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.BusinessRuleUsageType">
            <summary>
            Business rule usage types.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleUsageType.Server">
            <summary>
            Use only on server side.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleUsageType.Client">
            <summary>
            Use only on client side.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleUsageType.General">
            <summary>
            Use on both side.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType">
            <summary>
            Business rule element types.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType.UndefinedType">
            <summary>
            Undefined type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType.ConstantBusinessRuleExpression">
            <summary>
            ConstantBusinessRuleExpression type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType.ColumnBusinessRuleExpression">
            <summary>
            ColumnBusinessRuleExpression type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType.ComparisonBusinessRuleCondition">
            <summary>
            ComparisonBusinessRuleCondition type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType.BusinessRuleConditionGroup">
            <summary>
            BusinessRuleConditionGroup type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType.DefaultValueBusinessRuleAction">
            <summary>
            DefaultValueBusinessRuleAction type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.BusinessRuleComparisonType">
            <summary>
            Business rule comparison type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleComparisonType.Equal">
            <summary>
            Equal comparison type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.BusinessRuleLogicalOperation">
            <summary>
            Business rule logical operation.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleLogicalOperation.And">
            <summary>
            Equal comparison.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.BusinessRules.Meta.BusinessRuleLogicalOperation.Or">
            <summary>
            One of the conditions comparison.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction">
            <summary>
            BaseBusinessRuleAction abstract class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction.#ctor">
            <summary>
            Creates an instance of BaseBusinessRuleAction class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction)">
            <summary>
            Creates an instance of BaseBusinessRuleAction class.
            </summary>
            <param name="source">BaseBusinessRuleAction item.</param>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction.Enabled">
            <summary>
            Is action enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction.Description">
            <summary>
            Action localizable description.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.BaseBusinessRuleAction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction">
            <summary>
            BaseBusinessRuleAction class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction)">
            <summary>
            Creates an instance of DefaultValueBusinessRuleAction class.
            </summary>
            <param name="source">DefaultValueBusinessRuleAction item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.#ctor">
            <summary>
            Creates an instance of DefaultValueBusinessRuleAction class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.ColumnUId">
            <summary>
            Entity schema column UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.Column">
            <summary>
            Entity schema column.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.Value">
            <summary>
            Default expression value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.Clone">
            <summary>
            Returns copy of DefaultValueBusinessRuleAction instance.
            </summary>
            <returns>DefaultValueBusinessRuleAction instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Actions.DefaultValueBusinessRuleAction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement">
            <summary>
            BaseBusinessRuleElement abstract class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement.#ctor">
            <summary>
            Creates an instance of BaseBusinessRuleElement class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement)">
            <summary>
            Creates an instance of BaseBusinessRuleElement class.
            </summary>
            <param name="source">BaseBusinessRuleElement item.</param>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement.EntitySchema">
            <summary>
            Entity schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement.WriteWrappedValue``1(Terrasoft.Common.DataWriter,``0)">
            <summary>
            Write wrapped value.
            </summary>
            <param name="writer">DataWriter item.</param>
            <param name="businessRuleElement">BaseBusinessRuleElement item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleElement.ReadWrappedValue``1(Terrasoft.Common.DataReader)">
            <summary>
            Read wrapped value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleExecutable">
            <summary>
            BaseBusinessRuleExecutable abstract class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleExecutable.#ctor">
            <summary>
            Creates an instance of BaseBusinessRuleExecutable class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleExecutable.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.BaseBusinessRuleExecutable)">
            <summary>
            Creates an instance of BaseBusinessRuleExecutable class.
            </summary>
            <param name="source">BaseBusinessRuleExecutable item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory">
            <summary>
            BusinessRuleElementFactory static class.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory.BusinessRuleElementFactorySettings">
            <summary>
            BusinessRuleElementFactorySettings private class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory.BusinessRuleElementFactorySettings.Type">
            <summary>
            Business rule element class type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory.BusinessRuleElementFactorySettings.EnumType">
            <summary>
            Business rule element type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory.FindTypeByEnumType(Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType)">
            <summary>
            Returns business rule element class type.
            </summary>
            <param name="enumType">Business rule element type.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory.FindEnumTypeByType(System.Type)">
            <summary>
            Returns business rule element type.
            </summary>
            <param name="type">Business rule element class type.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementFactory.CreateBusinessRuleElement``1(Terrasoft.Core.BusinessRules.Meta.BusinessRuleElementType,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Creates business rule element.
            </summary>
            <param name="enumType">Business rule element class type.</param>
            <param name="entitySchema">Entity schema.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1">
            <summary>
            BaseBusinessRuleElement class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper{`0})">
            <summary>
            Creates an instance of BusinessRuleElementWrapper class.
            </summary>
            <param name="source">BusinessRuleElementWrapper item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.#ctor">
            <summary>
            Creates an instance of BusinessRuleElementWrapper class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.Type">
            <summary>
            Business rule element type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.Data">
            <summary>
            Base business rule element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.Clone">
            <summary>
            Returns copy of BusinessRuleElementWrapper instance.
            </summary>
            <returns>BusinessRuleElementWrapper instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleElementWrapper`1.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema">
            <summary>
            BusinessRuleSchema class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            Creates an instance of BusinessRuleSchema class.
            </summary>
            <param name="schemaManager">SchemaManager item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.#ctor(Terrasoft.Core.Schema)">
            <summary>
            Creates an instance of BusinessRuleSchema class.
            </summary>
            <param name="source">Schema item.</param>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.Manager">
            <summary>
            Schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.ParentSchemaUId">
            <summary>
            Parent schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.ParentSchema">
            <summary>
            Business rule schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.EntitySchemaUId">
            <summary>
            Entity schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.Type">
            <summary>
            Business rule usage type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.Trigger">
            <summary>
            Business rule condition.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.Executable">
            <summary>
            Business rule execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.Clone">
            <summary>
            Returns copy of BusinessRuleSchema instance.
            </summary>
            <returns>BusinessRuleSchema instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.InitializeCreatedInSchemaUId">
            <summary>
            Sets schema UId for created columns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.InitializeModifiedInSchemaUId">
            <summary>
            Sets schema UId for modified columns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema.AssignParentSchema(Terrasoft.Core.BusinessRules.Meta.Concrete.BusinessRuleSchema)">
            <summary>
            Sets patent schema for current schema.
            </summary>
            <param name="parentSchema">BusinessRuleSchema item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase">
            <summary>
            BusinessRuleCase abstract class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase)">
            <summary>
            Creates an instance of BusinessRuleCase class.
            </summary>
            <param name="source">BusinessRuleCase item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.#ctor">
            <summary>
            Creates an instance of BusinessRuleCase class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.Condition">
            <summary>
            Business rule case condition.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.Executable">
            <summary>
            Business rule case execute.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.Clone">
            <summary>
            Returns copy of DefaultValueBusinessRuleAction instance.
            </summary>
            <returns>DefaultValueBusinessRuleAction instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Cases.BusinessRuleCase.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BaseBusinessRuleCondition">
            <summary>
            BaseBusinessRuleCondition class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BaseBusinessRuleCondition.#ctor">
            <summary>
            Creates an instance of BaseBusinessRuleCondition class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BaseBusinessRuleCondition.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BaseBusinessRuleCondition)">
            <summary>
            Creates an instance of BaseBusinessRuleCondition class.
            </summary>
            <param name="source">BaseBusinessRuleCondition item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup">
            <summary>
            BusinessRuleConditionGroup class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup)">
            <summary>
            Creates an instance of BusinessRuleConditionGroup class.
            </summary>
            <param name="source">BusinessRuleConditionGroup item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.#ctor">
            <summary>
            Creates an instance of BusinessRuleConditionGroup class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.LogicalOperation">
            <summary>
            Condition logical operation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.Items">
            <summary>
            Condition items.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.Clone">
            <summary>
            Returns copy of BusinessRuleConditionGroup instance.
            </summary>
            <returns>BusinessRuleConditionGroup instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.BusinessRuleConditionGroup.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition">
            <summary>
            ComparisonBusinessRuleCondition class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition)">
            <summary>
            Creates an instance of ComparisonBusinessRuleCondition class.
            </summary>
            <param name="source">ComparisonBusinessRuleCondition item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.#ctor">
            <summary>
            Creates an instance of ComparisonBusinessRuleCondition class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.LeftExpression">
            <summary>
            Left expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.ComparisonType">
            <summary>
            Expression comparison type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.RightExpression">
            <summary>
            Right expression.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.Clone">
            <summary>
            Returns copy of ComparisonBusinessRuleCondition instance.
            </summary>
            <returns>ComparisonBusinessRuleCondition instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Conditions.ComparisonBusinessRuleCondition.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.BaseBusinessRuleExpression">
            <summary>
            BaseBusinessRuleExpression class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.BaseBusinessRuleExpression.#ctor">
            <summary>
            Creates an instance of BaseBusinessRuleExpression class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.BaseBusinessRuleExpression.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.BaseBusinessRuleExpression)">
            <summary>
            Creates an instance of BaseBusinessRuleExpression class.
            </summary>
            <param name="source">BaseBusinessRuleExpression item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression">
            <summary>
            ColumnBusinessRuleExpression class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression)">
            <summary>
            Creates an instance of ColumnBusinessRuleExpression class.
            </summary>
            <param name="source">ColumnBusinessRuleExpression item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression.#ctor">
            <summary>
            Creates an instance of ColumnBusinessRuleExpression class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression.ColumnMetaPath">
            <summary>
            Parent object meta path.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression.Clone">
            <summary>
            Returns copy of ColumnBusinessRuleExpression instance.
            </summary>
            <returns>ColumnBusinessRuleExpression instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ColumnBusinessRuleExpression.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression">
            <summary>
            ConstantBusinessRuleExpression class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.#ctor(Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression)">
            <summary>
            Creates an instance of ConstantBusinessRuleExpression class.
            </summary>
            <param name="source">ConstantBusinessRuleExpression item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.#ctor">
            <summary>
            Creates an instance of ConstantBusinessRuleExpression class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.DataValueTypeUId">
            <summary>
            Data value type UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.DataValueType">
            <summary>
            Data value type UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.Value">
            <summary>
            Constant value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.Clone">
            <summary>
            Returns copy of ConstantBusinessRuleExpression instance.
            </summary>
            <returns>ConstantBusinessRuleExpression instance copy.</returns>
        </member>
        <member name="M:Terrasoft.Core.BusinessRules.Meta.Concrete.Expressions.ConstantBusinessRuleExpression.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.BaseCampaignActionHandler">
            <summary>
            Base class for handle campaign and campaign's elements actions in configuration.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.BaseCampaignActionHandler"/> class.
            </summary>
            <param name="userConnection"></param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.BaseCampaignActionHandler.UserConnection">
            <summary>
            Gets instance of UserConnection class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.BaseCampaignActionHandler.Schema">
            <summary>
            Gets instance of CampaignSchema class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.OnBeforeSave(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Launches methods from Configuration ActionHandler class before saving.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.OnAfterSave(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Launches for apply methods from Configuration ActionHandler class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.OnBeforeDelete(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Launches methods from Configuration ActionHandler class before delete.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.OnAfterDelete(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Launches methods from Configuration ActionHandler class after delete.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.OnLaunch(System.Guid)">
            <summary>
            Executes methods before campaign start.
            </summary>
            <param name="campaignId">Unique identifier of campaign.</param>
            <returns>Error message if validation fails.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.BaseCampaignActionHandler.OnCompleted(System.Guid)">
            <summary>
            Executes methods after campaign complition.
            </summary>
            <param name="campaignId">Unique identifier of campaign.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignComponentSet">
            <summary>
            Represents a set of campaign components that are required to run it.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignComponentSet.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.IProcessParameterStore)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignComponentSet.Logger">
            <summary>
            Instance of campaign logger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignComponentSet.CampaignSchema">
            <summary>
            Instance of current campaign schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignComponentSet.CampaignSignalEntityHandler">
            <summary>
            Handler for campaign start signal entity events.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignComponentSet.ClearCampaignData">
            <summary>
            Contains logic to clear campaign process data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignComponentSet.Run(Terrasoft.Core.Process.StartSignalOptions)">
            <summary>
            Reaction of campaign on triggered campaign signal event.
            </summary>
            <param name="options">Options based on specified start signal.</param>
            <returns>Status of campaign process execution.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignComponentSet.ClearProcessData">
            <summary>
            Clears the campaign process data.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignConstants">
            <summary>
            Class for store campaign settings constants
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.PlannedCampaignStatusId">
            <summary>
            Campaign status - started
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.ScheduledCampaignStatusId">
            <summary>
            Campaign status - scheduled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.ActiveCampaignStatusId">
            <summary>
            Campaign status - active.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CompletedCampaignStatusId">
            <summary>
            Campaign status - completed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.StoppingCampaignStatusId">
            <summary>
            Campaign status - stopping.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignRunManuallyModeId">
            <summary>
            Campaign scheduled mode - run manually.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaingSpecifiedTimeModeId">
            <summary>
            Campaign Scheduled mode - at the specified time.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogTypeCampaignExecutionStarted">
            <summary>
            Campaign log action - campaign execution started.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogTypeCampaignExecutionCompleted">
            <summary>
            Campaign log action - campaign execution completed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogTypeFragmentExecutionStarted">
            <summary>
            Campaign log action - fragment execution started.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogTypeFragmentExecutionCompleted">
            <summary>
            Campaign log action - fragment execution completed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLoggerName">
            <summary>
            Campaign logger name
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.ResourceManagerName">
            <summary>
            Campaign resource manager name
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogStatusError">
            <summary>
            Campaign log status - execution with error.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogStatusSuccess">
            <summary>
            Campaign log status - success execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignLogTypeCampaignSynchronization">
            <summary>
            Campaign log action - campaign synchronization.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantReachedGoalStatusId">
            <summary>
            Campaign participant status - reached the goal.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantParticipatingStatusId">
            <summary>
            Campaign participant status - participating in campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantErrorStatusId">
            <summary>
            Campaign participant status - error.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantExitedStatusId">
            <summary>
            Campaign participant status - exited from campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantInProgressStatusId">
            <summary>
            Campaign participant status - in progress. Determines participants processed by async modules.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantSuspendingStatusId">
            <summary>
            Campaign participant status - suspending. Determines participants suspending by repeated contact 
            processed by async modules and after execution suspended by repeated contact.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignConstants.CampaignParticipantSuspendedStatusId">
            <summary>
            Campaign participant status - suspended. Determines participants suspended by repeated contact.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignEngine">
            <summary>
            Represents methods to manage campaigns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignEngine.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignEngine"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignEngine.Logger">
            <summary>
            Instance of campaign logger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignEngine.FlowEngine">
            <summary>
            Gets or sets flow engine using to run campaign process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignEngine.Run(Terrasoft.Core.Campaign.CampaignSchema,Terrasoft.Core.Campaign.CampaignExecutionConfig)">
            <summary>
            Runs the campaign schema.
            </summary>
            <param name="schema">The campaign schema instance.</param>
            <param name="config">The time of scheduling current run process.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignExecutionConfig">
            <summary>
            Contains a list of properties that are used by campaign engine while running.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignExecutionConfig.CurrentFireTime">
            <summary>
            The time, current campaign execution was scheduled at.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignExecutionConfig.ExecutionStrategy">
            <summary>
            Strategy for the <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignExecutionConfig.SessionId">
            <summary>
            Id of session for the signal triggered execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignExecutionConfig.CampaignItemId">
            <summary>
            Id of campaign step for the signal triggered execution.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignInterpretationValidator">
            <inheritdoc cref="T:Terrasoft.Core.Process.BaseInterpretationValidator`1"/>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignInterpretationValidator.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignInterpretationValidator"/> class.
            </summary>
            <param name="userConnection">Instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignInterpretationValidator"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignInterpretationValidator.GetDefaultValidationRules(Terrasoft.Core.Campaign.CampaignSchema)">
            <inheritdoc cref="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.GetDefaultValidationRules(`0)"/>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignItemExecutionErrorMetric">
            <summary>
            Implementation of <see cref="T:Terrasoft.Monitoring.IMetric"/> for campaign item execute monitoring.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignItemExecutionErrorMetric.#ctor(System.Guid,System.Type,System.Int32,System.Type)">
            <summary>
            Describes metric that provide information about error occurs while campaign execute item.
            </summary>
            <param name="campaignId">Unique identifier of campaign.</param>
            <param name="exception">Type of error that occurred.</param>
            <param name="sqlErrorType">Number that identifies the type of sql error.</param>
            <param name="element">Type of executing element.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignItemExecutionErrorMetric.Name">
            <summary>
            Metric name according to topic https://prometheus.io/docs/practices/naming/.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignItemExecutionErrorMetric.GetFieldValues">
            <summary>
            Get metric values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignItemExecutionErrorMetric.GetTags">
            <summary>
            Get additional metric tags.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignLogInfo">
            <summary>
            Represents the execution state of campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.Amount">
            <summary>
            Count of processed audience participants.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.ScheduledDate">
            <summary>
            The utc time when campaign should be started.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.SessionId">
            <summary>
            The unique identifier of the campaign run session.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.StartDate">
            <summary>
            The utc time when campaign has been started.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.EndDate">
            <summary>
            The utc time when campaign has been finished.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.ErrorText">
            <summary>
            The text of happened error.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.Action">
            <summary>
            The message about element execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.CampaignId">
            <summary>
            The unique identifier of campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.CampaignItemId">
            <summary>
            The unique identifier of element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignLogInfo.IsSuccess">
            <summary>
            The item execution status.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignProcessElementFactory">
            <summary>
            Implements interface <see cref="T:Terrasoft.Core.Process.IProcessElementFactory"/> for process based on dcm schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessElementFactory" />
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignProcessElementFactory.#ctor(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignProcessElementFactory"/> class.
            </summary>
            <param name="process">Instance of <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignProcessElementFactory.CreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <summary>
            Creates the process element dependent on metadata.
            </summary>
            <param name="schemaElement">The schema element meta data.</param>
            <returns>
            The process element instance.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignProcessFlowElement">
            <summary>
            Base class for executable campaign elements.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.IsLogging">
            <summary>
            Gets value determines whether it is required to log the current element in DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.UserConnection">
            <summary>
            User connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.CampaignId">
            <summary>
            Unique identifier of the associated campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.CampaignItemId">
            <summary>
            Unique identifier of the element of campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.Action">
            <summary>
            The message about element execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.ScheduledDate">
            <summary>
            The utc time when campaign should be started.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.SessionId">
            <summary>
            Unique identifier of the campaign run session.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignProcessFlowElement.ProcessedAudienceAmount">
            <summary>
            Total number of processed audience.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignProcessFlowElement.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Protected method that contains all the execution logic.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignProcessFlowElement.SafeExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignProcessFlowElement.CreateCampaignLogInfoConfig">
            <summary>
            Returns configured Campaign execution info to log.
            </summary>
            <returns>Initialized <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/> for current flow element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSchema">
            <summary>
            Represents class for the Campaign diagram.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            Creates a new instance with specified schema manager.
            </summary>
            <param name="schemaManager">Instance that implements the <see cref="T:Terrasoft.Core.ISchemaManager"/> interface.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.BaseElements">
            <summary>
            Gets the base elements.
            </summary>
            <value>
            The base elements.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.DependencyFactory">
            <summary>
            Gets the dependency factory.
            </summary>
            <value>
            The dependency factory.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.UseBackgroundMode">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.TerminateEventSchema">
            <summary>
            Gets the terminate event schema.
            </summary>
            <value>
            The terminate event schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.StartEventSchema">
            <summary>
            Gets the start signal event schema.
            </summary>
            <value>
            The start signal event schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.StartElementSchema">
            <summary>
            Gets the campaign start element schema.
            </summary>
            <value>
            The campaign start element schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.TerminateElementSchema">
            <summary>
            Gets the campaign terminate element schema.
            </summary>
            <value>
            The campaign terminate element schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.SyncElementSchema">
            <summary>
            Gets the campaign sync element schema.
            </summary>
            <value>
            The campaign sync element schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.FragmentStartElementSchema">
            <summary>
            Gets the campaign fragment start element schema.
            </summary>
            <value>
            The fragment start element schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.FragmentTerminateElementSchema">
            <summary>
            Gets the campaign fragment terminate element schema.
            </summary>
            <value>
            The campaign fragment terminate element schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.IsLogging">
            <summary>
            Gets value determines whether it is required to log the current element in DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.IsInterpretable">
            <summary>
            Gets whether the process is interpretable.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.UseSystemSecurityContext">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.IsValid">
            <summary>
            Flag determines whether the current schema is valid without any validation errors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.HasWarnings">
            <summary>
            Flag determines whether the current schema has any validation warnings.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.CampaignConfiguration">
            <summary>
            Gets or sets the dictionary for the storing personalized configuration for the campaign.
            Keys:
            - ScheduledUtcFireTime of type <see cref="T:System.DateTime"/> - Scheduled campaign fire time.
            - ReachedGoalCountChanged of type <see cref="T:System.Boolean"/> - Flag to update reached campaign goal count.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.ParentSchema">
            <summary>
            Gets the parent schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.CampaignSchema._flowElements">
            <summary>
            Gets flow elements of the current schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.IsExpanded">
            <summary>
            Gets or sets sign that container is expanded.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.EntityId">
            <summary>
            Unique identifier of the schema instance associated with the current schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.CampaignSchema._defaultCampaignFirePeriod">
            <summary>
            Default fire period in minutes for whole campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.HasCriticalExecutionLateness">
            <summary>
            Flag to indicate that critical execution lateness is specified or not.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.TimeZoneCode">
            <summary>
            Code of selected time zone for current campaign schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.TimeZoneOffset">
            <summary>
            Time zone for current campaign schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.CriticalExecutionLateness">
            <summary>
            Criticak execution lateness in minutes for campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.StatusId">
            <summary>
            Campaign status idetifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.IsInProgress">
            <summary>
            Gets or sets sign that campaign execution is in progress.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.InitialSchema">
            <summary>
            Gets or sets initial campaign schema where changes not applied.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.ValidationResults">
            <summary>
            Gets the list of validation info for the campaign elements.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.ErrorValidationMessage">
            <summary>
            Returns validation string for indicated errors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.WarningValidationMessage">
            <summary>
            Returns validation string for indicated warnings.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchema.ExecutionConfig">
            <summary>
            Config for current campaign execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.InitializeProperties">
            <summary>
            Initializes properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetStartSignalsMetaInfo">
            <summary>
            Gets the collection of meta information items for each start signal.
            </summary>
            <returns>
            The collection of meta information items for each start signal.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetInvalidElementNames(System.String,System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets the collection of meta information items for each start signal.
            </summary>
            <returns>
            The collection of meta information items for each start signal.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetIsEnabled">
            <summary>
            Returns the enabled state.
            </summary>
            <returns><c>true</c> if current schema is enabled; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetBaseSchemaElements">
            <summary>
            Gets the base schema elements.
            </summary>
            <returns>The base elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GenerateFlowSchema(Terrasoft.Core.Process.IProcessComponentSetStateService)">
            <summary>
            Generates the flow schema.
            </summary>
            <param name="stateService">The state service.</param>
            <returns>Generated flow schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetExtendedSchemaElements">
            <summary>
            Gets extended schema elements.
            </summary>
            <returns>The base elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.SynchronizeParameters">
            <summary>
            Synchronizes elements parameters.
            </summary>
            <remarks>Implement when parametrized campaign schema elements will be ready.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance (with the same schema elements' UIds).
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Performs initialization of localizable values from specified group <paramref name="resourceGroupName"/> in
            <paramref name="resourceManagerName"/> resource manager.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.InitializeLocalizableValues(System.String)">
            <summary>
            Performs initialization of localizable values in <paramref name="resourceManagerName"/> resource manager.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Returns localizable values list.
            </summary>
            <param name="values">Localizable values list.</param>
            <param name="includeInherited">Flag that indicates include inherited resources or not.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.LoadLocalizableValues">
            <summary>
            Loads values for localizable schema elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Fills collection with items of the meta data.
            </summary>
            <param name="metaItems">Collection of the meta items.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.CreateProcess(Terrasoft.Core.UserConnection)">
            <summary>
            Creates new campaign process instance for current campaign schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Process instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.Copy">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.GetBaseElementByUId(System.Guid)">
            <summary>
            Gets schema element by UId.
            </summary>
            <param name="uid">UId of schema element.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.AssignParentSchema(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Assigns the given schema as a parent for the current one.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.AddValidationInfo(System.String)">
            <summary>
            Adds information to validation result.
            </summary>
            <param name="message">Validation message.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.AddValidationInfo(System.String,Terrasoft.Core.Campaign.CampaignValidationInfoLevel)">
            <summary>
            Adds information to validation result with specific validation info level.
            </summary>
            <param name="message">Validation message.</param>
            <param name="level">Validation info level.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.ValidateElements">
            <summary>
            Validates names of the campaign elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchema.IsSchemaValid(System.Boolean)">
            <summary>
            Returns is campaign schema valid with warnings' ignoring parameter.
            </summary>
            <param name="ignoreWarnings">Flag indicates warnings are ignored or not.</param>
            <returns>Boolean value of IsValid property with ignoring warnings or not.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSchemaBaseElements">
            <summary>
            The class for the base elements of the <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaBaseElements.#ctor(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElements"/> class.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaBaseElements.FindByUId(System.Guid)">
            <summary>
            Finds the element by identifier.
            </summary>
            <param name="uid">The uid of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaBaseElements.FindByName(System.String)">
            <summary>
            Finds the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSchemaDependencyFactory">
            <summary>
            The class for the <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/> dependency factory.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1" />
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaDependencyFactory.#ctor(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaDependencyFactory"/> class.
            </summary>
            <param name="schema">The campaign schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaDependencyFactory.FlowSchemaGenerator">
            <summary>
            Creates concreete implementation of <see cref="T:Terrasoft.Core.Process.IFlowSchemaGenerator"/>.
            </summary>
            <returns>
            Instance of <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaDependencyFactory.CreateProcessElementFactory(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Creates the process element factory.
            </summary>
            <param name="process">The process instance.</param>
            <returns>
            The process element factory.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSchemaElement">
            <summary>
            Represents class for the element of the Campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.#ctor(Terrasoft.Core.Campaign.CampaignSchemaElement)">
            <summary>
            Creates a new instance (for clone).
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.#ctor(Terrasoft.Core.Campaign.CampaignSchemaElement,System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance (for copy).
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>.</param>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent schema for current element.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.Action">
            <summary>
            Identifier of element action.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.CampaignSchemaElement._typeName">
            <summary>
            Gets full name of the <see cref="T:System.Type"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.Position">
            <summary>
            Element's position on diagram.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.ParentSchema">
            <summary>
            Element's parent schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.IsExpanded">
            <summary>
            Sign that element is expanded.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.Size">
            <summary>
            Element's size.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.ParentUId">
            <summary>
            Unique identifier of campaign item.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.CampaignSchemaElement._incomings">
            <summary>
            Gets incoming connections of the element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.ScheduledUtcFireTime">
            <summary>
            Gets time when parent schema should be executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaElement.SessionId">
            <summary>
            Gets campaign run session identifier from parent schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.CampaignSchemaElement._outgoings">
            <summary>
            Gets outgoing connections of the element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Reads MetaData values to element properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.InitializeCampaignProcessFlowElement(Terrasoft.Core.Campaign.CampaignProcessFlowElement)">
            <summary>
            Initializes campaign flow element properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
            <returns>Cloned instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.Copy(System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
            <returns>Copied instance of the <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates specific <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaElement.GetFireTime">
            <summary>
            Returns null when time condition empty or <see cref="T:System.TimeSpan"/> fire time.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.FlowElementCollection._container">
            <summary>
            Gets flow elements container.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowElementCollection.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowElementCollection.Copy(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSchemaElementType">
            <summary>
            Type of campaign schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaManager.ItemTypeName">
            <summary>
            Gets the name of the item type.
            </summary>
            <value>
            The name of the item type.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaManager.ItemCaption">
            <summary>
            The caption for the schema manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSchemaManager.ResourceManagerName">
            <summary>
            The name of the resource manager.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.CreateInterpretationValidator(Terrasoft.Core.UserConnection)">
            <summary>
            Gets the interpretation validator for process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>
            Interpretation validator instance.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.InitializeDefSchema">
            <summary>
            Initializes the default schema.
            </summary>
            <returns>
            The default schema.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.GetSchemaSources(Terrasoft.Core.Campaign.CampaignSchema,System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Returns entity collection, which contains schema sources. Since the dcm schema has no sources it will
            return an empty collection.
            </summary>
            <param name="schema">The schema.</param>
            <param name="schemaId">The schema Id.</param>
            <param name="userConnection">The user connection.</param>
            <returns>Schema sources.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.CreateItem">
            <summary>
            Creates the item.
            </summary>
            <returns>Item instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.CheckOperationUserRights(Terrasoft.Core.UserConnection)">
            <summary>
            Checks user rights for manage schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Flag that indicates if user have rights</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Returns the source code generator for the manager schemas.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>
            The source code generator.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.DesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Returns design item instance.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="uid">Schema id.</param>
            <returns>Implementation for <see cref="T:Terrasoft.Core.ISchemaManagerItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.CopySchemaItem(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Returns copy of campaign shema manager item.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="sourceSchemaUId">Unique identifier of source schema.</param>
            <param name="campaignId">Unique identifier of campaign to link.</param>
            <returns>Copied campaign schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.SaveSchemaCopy(Terrasoft.Core.UserConnection,Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Campaign.CampaignSchema})">
            <summary>
            Saves schema copy to DB.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="managerItem">The manager item.</param>
            <returns>Cloned instance of the schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.GetSchemaInstance(System.Guid)">
            <summary>
            Gets the instance of the campaign schema with given identifier.
            </summary>
            <param name="uId">Unique identifier of the campaign schema</param>
            <returns>
            Instance of the campaign schema with given identifier <paramref name="uId" />.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.ActualizeCampaignSchemaInfo(Terrasoft.Core.Campaign.CampaignSchema,Terrasoft.Core.UserConnection)">
            <summary>
            Actualizes the flow data for the given campaign schema.
            </summary>
            <param name="schema">The campaign schema.</param>
            <param name="connection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManager.UnregisterStartSignalEvents(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Removes signal events from DB for current campaign schema.
            </summary>
            <param name="schema">Current campaign schema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSchemaManagerItem">
            <summary>
            Represents class for CampaignSchema manipulating
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManagerItem.#ctor(Terrasoft.Core.SchemaManager{Terrasoft.Core.Campaign.CampaignSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/>
            </summary>
            <param name="manager">Schema manager in which current item exists
            <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManagerItem.#ctor(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Campaign.CampaignSchema},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
            <param name="isShallowClone">
            Flag that indicates whether the item's instance will not be cloned too.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSchemaManagerItem.#ctor(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Campaign.CampaignSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignSynchronizationInfo">
            <summary>
            Describes campaign participants synchronization result info.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignSynchronizationInfo.#ctor">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.CampaignSynchronizationInfo"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSynchronizationInfo.Success">
            <summary>
            Result of synchronization process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSynchronizationInfo.Errors">
            <summary>
            List of exceptions which had been happend by synchronization.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignSynchronizationInfo.SynchronizedParticipantsCount">
            <summary>
            Count of synchronized campaign participants.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignValidationInfo">
            <summary>
            Base class that contains information about campaign validation results.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignValidationInfo.#ctor">
            <summary>
            Creates an instance with error validation info level by default.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignValidationInfo.#ctor(Terrasoft.Core.Campaign.CampaignValidationInfoLevel)">
            <summary>
            Creates an instance with specific validation info level.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignValidationInfo.Level">
            <summary>
            Level of validation info.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.CampaignValidationInfo.Message">
            <summary>
            Validation message for the campaign element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.CampaignValidationInfo.ToString">
            <summary>
            Prepares data as string.
            </summary>
            <returns>Serialized data.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.CampaignValidationInfoLevel">
            <summary>
            Levels of validation result info.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement">
            <summary>
            Represents class for the start element of the Campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartElement.#ctor">
            <summary>
            Default constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartElement.#ctor(Terrasoft.Core.Campaign.Elements.CampaignStartElement)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartElement.#ctor(Terrasoft.Core.Campaign.Elements.CampaignStartElement,System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.</param>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Elements.CampaignStartElement.Action">
            <summary>
            Identifier of element action.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartElement.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
            <returns>Cloned instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartElement.Copy(System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
            <returns>Copied instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignStartElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates specific CampaignStartFlowElement instance.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.CampaignStartFlowElement">
            <summary>
            Executable start element of campaign.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignStartFlowElement.CreateCampaignLogInfoConfig">
            <summary>
            Returns configured Campaign execution info to log.
            </summary>
            <returns>Initialized <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/> for current flow element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement">
            <summary>
            Represents class for the sync element of the Campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.#ctor">
            <summary>
            Default constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.#ctor(Terrasoft.Core.Campaign.Elements.CampaignSyncElement)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.#ctor(Terrasoft.Core.Campaign.Elements.CampaignSyncElement,System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.</param>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.Action">
            <summary>
            Identifier of element action.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
            <returns>Cloned instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.Copy(System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
            <returns>Copied instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates specific <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignSyncFlowElement"/> instance.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.CampaignSyncFlowElement">
            <summary>
            Executable sync element of campaign.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncFlowElement.SafeExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element. Synchronizes campaign participants
            for which campaign fragments had been executed.
            </summary>
            <param name="context">The execution context.</param>
            <returns>Default int value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignSyncFlowElement.CreateCampaignLogInfoConfig">
            <summary>
            Returns configured Campaign execution info to log.
            </summary>
            <returns>Initialized <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/> for current flow element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement">
            <summary>
            Represents class for the terminate element of the Campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.#ctor">
            <summary>
            Default constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.#ctor(Terrasoft.Core.Campaign.Elements.CampaignTerminateElement)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.#ctor(Terrasoft.Core.Campaign.Elements.CampaignTerminateElement,System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.</param>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.Action">
            <summary>
            Identifier of element action.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
            <returns>Cloned instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.Copy(System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
            <returns>Copied instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates specific <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateFlowElement"/> instance.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateFlowElement">
            <summary>
            Executable terminate element of campaign.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Elements.CampaignTerminateFlowElement.CampaignSchema">
            <summary>
            Schema of current campaign.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateFlowElement.SafeExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns>Default int value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.CampaignTerminateFlowElement.CreateCampaignLogInfoConfig">
            <summary>
            Returns configured Campaign execution info to log.
            </summary>
            <returns>Initialized <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/> for current flow element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement">
            <summary>
            Represents class for the start element of the campaign fragment for triggered signal.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartElement.#ctor">
            <summary>
            Default constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartElement.#ctor(Terrasoft.Core.Campaign.Elements.FragmentStartElement)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartElement.#ctor(Terrasoft.Core.Campaign.Elements.FragmentStartElement,System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.</param>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Elements.FragmentStartElement.Action">
            <summary>
            Identifier of element action.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartElement.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
            <returns>Cloned instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartElement.Copy(System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
            <returns>Copied instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentStartElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates specific <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateFlowElement"/> instance.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.FragmentStartFlowElement">
            <summary>
            Executable element to start campaign fragment.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartFlowElement.SafeExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns>Default int value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentStartFlowElement.CreateCampaignLogInfoConfig">
            <summary>
            Returns configured Campaign execution info to log.
            </summary>
            <returns>Initialized <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/> for current flow element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement">
            <summary>
            Represents class for the terminate element of the campaign fragment for triggered signal.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.#ctor">
            <summary>
            Default constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.#ctor(Terrasoft.Core.Campaign.Elements.FragmentTerminateElement)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.#ctor(Terrasoft.Core.Campaign.Elements.FragmentTerminateElement,System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Constructor for <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement"/>.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement"/>.</param>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.Action">
            <summary>
            Identifier of element action.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.Clone">
            <summary>
            Creates a new instance that is a clone of the current instance.
            </summary>
            <returns>Cloned instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.CampaignTerminateElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.Copy(System.Collections.Generic.Dictionary{System.Guid,System.Guid},Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <param name="dictToRebind">Dictionary to rebind schema elements' ids.</param>
            <param name="parentSchema">Parent campaign schema.</param>
            <returns>Copied instance of the <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates specific <see cref="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateFlowElement"/> instance.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Elements.FragmentTerminateFlowElement">
            <summary>
            Executable element to terminate campaign fragment.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateFlowElement.SafeExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns>Default int value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Elements.FragmentTerminateFlowElement.CreateCampaignLogInfoConfig">
            <summary>
            Returns configured Campaign execution info to log.
            </summary>
            <returns>Initialized <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/> for current flow element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Enums.CampaignSchemaExecutionStrategy">
            <summary>
            Describes strategy for <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator"/>.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.Enums.CampaignSchemaExecutionStrategy.DefaultPeriod">
            <summary>
            Default strategy for run campaign.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.Enums.CampaignSchemaExecutionStrategy.Immediate">
            <summary>
            Immediate strategy for run campaign.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Campaign.Enums.CampaignSchemaExecutionStrategy.Triggered">
            <summary>
            Strategy for run campaign by signal.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.CampaignEventExecutor">
            <summary>
            Class that calls event handlers on each known campaign event, defined by an interface.
            Calls are ordered by the <see cref="T:Terrasoft.Core.Attributes.OrderAttribute"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.CampaignEventExecutor.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.EventHandler.CampaignEventExecutor"/>, using given user's connection.
            </summary>
            <param name="userConnection">User's connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.CampaignEventExecutor.#ctor(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.EventHandler.CampaignEventExecutor"/>, using given user's connection
            with the list of event handler types.
            </summary>
            <param name="userConnection">User's connection.</param>
            <param name="eventHandlers">Enumeration of known event handlers.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.CampaignEventExecutor.HandleEvent(Terrasoft.Core.Campaign.CampaignSchema,System.Type)">
            <summary>
            Calls all handlers that implement an interface <paramref name="eventType"/>. 
            All handlers will be called in order, that is defined by an <see cref="T:Terrasoft.Core.Attributes.OrderAttribute"/>.
            </summary>
            <param name="campaignSchema">The campaign's schema of type <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/>.</param>
            <param name="eventType">The type of interface that represents an event of campaign.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.CampaignEventHandlerBase">
            <summary>
            Base class for all campaign event handlers. Contains common logic.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.EventHandler.CampaignEventHandlerBase.UserConnection">
            <summary>
            Instance of a user's connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.EventHandler.CampaignEventHandlerBase.CampaignSchema">
            <summary>
            Instance of a campaign's schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.CampaignEventHandlerBase.GetUniqueName(System.String,System.String)">
            <summary>
            Returns unique name of copied entity.
            </summary>
            <param name="nameToCheck">Name to be unique.</param>
            <param name="schemaName">Root schema name of copied entity.</param>
            <returns>Unique name of copied instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.CampaignEventHandlerBase.UpdateCampaignItemConnectedRecordInfo(System.Guid,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Updates campaign item records (RecordId and SchemaUId fields).
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignAfterSave">
            <summary>
            Interface that declares action after save campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignAfterSave.OnAfterSave">
            <summary>
            Handles an event that is raised after campaign schema saved.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignBeforeSave">
            <summary>
            Interface that declares action before save campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignBeforeSave.OnBeforeSave">
            <summary>
            Handles an event that is raised before campaign schema saved.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignCopy">
            <summary>
            Interface that declares action before copy campaign.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignCopy.OnCopy">
            <summary>
            Handles an event that is raised before campaign entity and schema copied.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignDelete">
            <summary>
            Interface that declares action on delete campaign schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignDelete.OnDelete">
            <summary>
            Handles an event that is raised on campaign schema deleted.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignExecutionTerminate">
            <summary>
            Interface that declares action when campaign regular execution is terminating.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignExecutionTerminate.OnExecutionTerminate">
            <summary>
            Called when campaign regular execution is terminating.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignFinalize">
            <summary>
            Interface that declares action when campaign is finalizing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignFinalize.OnFinalize">
            <summary>
            Handles an event that is raised on campaign finalizing.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignStart">
            <summary>
            Interface that declares action on campaign starts.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignStart.OnStart">
            <summary>
            Handles an event that is raised on campaign starts.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignStop">
            <summary>
            Interface that declares action on campaign stops.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignStop.OnStop">
            <summary>
            Handles an event that is raised on campaign stopps.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.EventHandler.IOnCampaignValidate">
            <summary>
            Interface that declares action on validate campaign.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.EventHandler.IOnCampaignValidate.OnValidate">
            <summary>
            Calls on validate campaign.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator">
            <summary>
            Serves the campaign flow schema generation process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator.#ctor(Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator"/> class with
            the specified campaign schema.
            </summary>
            <param name="campaignSchema">Current campaign schema.</param>
        </member>
        <member name="F:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator._currentSchemaElements">
            <summary>
            The collection of flow elements that represents a copy of a CampaignSchema elements collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator.GetStrategyInstance(Terrasoft.Core.Campaign.CampaignExecutionConfig)">
            <summary>
            Defines a generators strategy depending on <paramref name="config"/>.
            </summary>
            <param name="config">An instance of <see cref="T:Terrasoft.Core.Campaign.CampaignExecutionConfig"/>.</param>
            <returns>Generators strategy, instance of the <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.Strategies.CampaignSchemaGenerationStrategyBase"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator.Generate(Terrasoft.Core.Campaign.CampaignExecutionConfig)">
            <summary>
            Generates the process flow schema using config.
            </summary>
            <param name="config">An instance of <see cref="T:Terrasoft.Core.Campaign.CampaignExecutionConfig"/>.</param>
            <returns>Process flow schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator.Generate">
            <summary>
            Generates the process flow schema.
            </summary>
            <returns>An instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/> that contains all start signals.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator.TryGetProcessItemName(System.String,System.String@)">
            <summary>
            Attempts to get process schema parameter name or process element parameter name.
            </summary>
            <param name="parameterMapPath">Represents parameter mapping path.</param>
            <param name="itemName">Represents a string consisting of comma-separated parameter names.</param>
            <returns>Throws <exception cref="T:System.NotImplementedException"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.CampaignFlowSchemaGenerator.FindProcessSchemaParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Finds the process schema parameter by its map info.
            </summary>
            <param name="parameterMapInfo">The process schema parameter path.</param>
            <returns>Throws <exception cref="T:System.NotImplementedException"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.AddAudienceElementsGenerationStep">
            <summary>
            Class contains the part of generators logic that processes AddAudience elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.AddAudienceElementsGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends add audience flow elements with max priority for cycle to result flow schema 
            and removes processed schema elements from source collection.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.AddAudienceElementsGenerationStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Defines if source collection has elements to process.
            </summary>
            <param name="sourceCollection">Collection of <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>s.</param>
            <returns>True if there are elements that should to be processed.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignElementsGenerationStep">
            <summary>
            Class contains the part of generators logic that processes campaign elements with type
            <see cref="F:Terrasoft.Core.Campaign.CampaignSchemaElementType.AsyncTask"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignElementsGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends elements with asyncTask type to flow schema without any incoming transition.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignElementsGenerationStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Validates sourceCollection. If there is no elements without incomings, it breaks chain of steps.
            </summary>
            <param name="sourceCollection"></param>
            <returns>True if there are elements that should to be filtered.</returns>
        </member>
        <member name="F:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase._nextSteps">
            <summary>
            The next generators step to call after the gateway element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.Schema">
            <summary>
            The <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.ScheduledTime">
            <summary>
            Scheduled time for the campaign execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.AppendSequenceFlow(Terrasoft.Core.Process.FlowSchema@,Terrasoft.Core.Process.FlowElement,Terrasoft.Core.Process.FlowElement)">
            <summary>
            Creates and appends a SequenceFlow element to the FlowSchema.
            </summary>
            <param name="flowSchema">Reference at the target FlowSchema object.</param>
            <param name="sourceElement">Source element to link with.</param>
            <param name="targetElement">Target element to link with.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.AppendGateway(Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends gateway element and links it with new elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.LinkElements(Terrasoft.Core.Process.FlowSchema@,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement},Terrasoft.Core.Process.FlowElement)">
            <summary>
            Links a list of elements to a single target.
            </summary>
            <param name="flowSchema">Reference at the target FlowSchema object.</param>
            <param name="fromElements">Source list of elements.</param>
            <param name="toElement">Target element.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.LinkElements(Terrasoft.Core.Process.FlowSchema@,Terrasoft.Core.Process.FlowElement,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement})">
            <summary>
            Links a single source element to the list of target elements.
            </summary>
            <param name="flowSchema">Reference at the target FlowSchema object.</param>
            <param name="fromElement">Source element.</param>
            <param name="toElements">Target list of elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.RemoveSchemaElements(Terrasoft.Core.Campaign.FlowElementCollection@,System.Collections.Generic.IEnumerable{Terrasoft.Core.Campaign.CampaignSchemaElement})">
            <summary>
            Removes schema elements that were processed in current step from source collection
            and all connections with other elements. 
            </summary>
            <param name="sourceCollection">Contains the list of source schema elements</param>
            <param name="elementsToRemove">Processed schema elements that must be removed from source list.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.AppendAndLinkElements(Terrasoft.Core.Process.FlowSchema@,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement})">
            <summary>
            Appends new flow elements with gateway to result schema and links it with last existing element.
            </summary>
            <param name="resultSchema">Reference at the target FlowSchema object.</param>
            <param name="flowElements">New flow elements to append.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.CreateFlowElementsToAppend(System.Collections.Generic.IEnumerable{Terrasoft.Core.Campaign.CampaignSchemaElement},Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Returns process flow elements for filtered campaign schema elements
            that have to be appended with current step.
            </summary>
            <param name="elements">Schema elements to be processed by current step.</param>
            <param name="resultSchema">Reference at the target FlowSchema object.</param>
            <returns>Collection of flow elements to append.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Contains logic of the current step. 
            </summary>
            <param name="sourceCollection">Contains the list of source schema elements.</param>
            <param name="resultSchema">Reference at the target FlowSchema object.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.AddNextSteps(Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep[])">
            <summary>
            Adds the next steps to the list and returns first from the <paramref name="nextSteps"/> array.
            </summary>
            <param name="nextSteps">An list of steps to add after the current value.</param>
            <returns>Reference to the first step of the list.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.AddLinkToStep(Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep)">
            <summary>
            Adds the next step to the list. Creates a loop of objects or the conditional tree.
            </summary>
            <param name="targetElement">An instance of <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase"/> class.</param>
            <returns>Reference to the current step object.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Validates sourceCollection. If returns false, it breaks chain of steps.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <returns>True if <paramref name="sourceCollection"/> is valid to process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSchemaGeneratorStepBase.ProcessStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Executes step.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignStartElementGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the start element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignStartElementGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the start element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSyncElementGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the campaign sync element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignSyncElementGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the sync element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignTerminateElementGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the campaign terminate element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CampaignTerminateElementGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the campaign terminate element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.CropSignalFlowFilteringStep">
            <summary>
            Class that contains logic to crop fragment of campaign with specific start signal element
            and put it as source collection to generate flow schema by triggered signal.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.CropSignalFlowFilteringStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends start signal and all outgoings that can be added to campaign flow by signal.
            After that replace source collection with cropped fragment of campaign schema.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.DelayedTransitionsGenerationStep">
            <summary>
            Class contains the part of generators logic that processes async transitions.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.DelayedTransitionsGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends transitions with any delay to flow schema grouping by priority.
            </summary>
            <param name="sourceCollection">Contains the list of source schema elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.DelayedTransitionsGenerationStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Validates sourceCollection. If there is no transitions with delay, it breaks chain of steps.
            </summary>
            <param name="sourceCollection">Contains the list of source schema elements.</param>
            <returns>True if there are elements that should to be filtered.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringCampaignSignalsStep">
            <summary>
            Class contains the part of generators logic that removes elements with type
            <see cref="F:Terrasoft.Core.Campaign.CampaignSchemaElementType.StartSignal"/>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringCampaignSignalsStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Removes elements with type <see cref="F:Terrasoft.Core.Campaign.CampaignSchemaElementType.StartSignal"/>
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringElementsByTimeStep">
            <summary>
            Class contains the filtering logic for the collection of flow elements. Removes elements that !CanProcessAt.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringElementsByTimeStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Removes elements that cannot be processed at scheduled time.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringElementsWithoutIncommingsStep">
            <summary>
            Class contains filtering logic for a collection of flow elements. Removes elements without incomming
            transitions.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringElementsWithoutIncommingsStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Removes elements without incomming transitions except <see cref="F:Terrasoft.Core.Campaign.CampaignSchemaElementType.MoveAudience"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringElementsWithoutIncommingsStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Defines if source collection has elements to remove.
            </summary>
            <param name="sourceCollection">Collection of <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>s.</param>
            <returns>True if there are elements that should to be filtered.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringTransitionsWithoutSourceStep">
            <summary>
            Class contains the part of generators logic that removes transitions without source conditions except
            transitions the with correct StartTime value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FilteringTransitionsWithoutSourceStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Removes transitions without source conditions except transitions that are implementing the
            <see cref="T:Terrasoft.Core.Campaign.Interfaces.IScheduledExecutionCondition"/> interface.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FinalizeAudienceElementsGenerationStep">
            <summary>
            Class contains the part of generators logic that processes FinalizeAudience elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FinalizeAudienceElementsGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends complete audience flow elements to result flow schema 
            and removes processed schema elements from source collection.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FragmentStartElementGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the fragment start element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FragmentStartElementGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the fragment start element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.FragmentTerminateElementGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the fragment terminate element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.FragmentTerminateElementGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the campaign terminate element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.Schema">
            <summary>
            The <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.ScheduledTime">
            <summary>
            Scheduled time for the campaign execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.NextSteps">
            <summary>
            The next generators step to call after the gateway element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.CanProcessAtLeastOnce">
            <summary>
            Flag that indicates step can be processed or not at first execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Validates sourceCollection.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <returns>True if <paramref name="sourceCollection"/> is valid to process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.ProcessStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Executes current step and calls next if needed.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
            <returns>Returns .</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.AddNextSteps(Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep[])">
            <summary>
            Adds the next steps to the list and returns first from the <paramref name="nextSteps"/> array.
            </summary>
            <param name="nextSteps">An list of steps to add after the current value.</param>
            <returns>Reference to the first step of the list.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep.AddLinkToStep(Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep)">
            <summary>
            Adds the next step to the list. Creates a loop of objects or the conditional tree.
            </summary>
            <param name="targetElement">An instance of <see cref="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.ICampaignSchemaGeneratorStep"/>.</param>
            <returns>Reference to the current step object.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.ImmediateTransitionsConditionalStep">
            <summary>
            Contains conditions to process the immediate transitions. It does not process them.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ImmediateTransitionsConditionalStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Does not contain processing logic.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ImmediateTransitionsConditionalStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Defines if source collection has elements to process.
            </summary>
            <param name="sourceCollection">Collection of <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>s.</param>
            <returns>True if there are elements that should to be processed.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.ImmediateTransitionsGenerationStep">
            <summary>
            Class contains the part of generators logic that processes sync transitions.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.ImmediateTransitionsGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends transitions without incomings to flow schema grouping by priority.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.MoveAudienceElementsGenerationStep">
            <summary>
            Class contains the part of generators logic that processes MoveAudience elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.MoveAudienceElementsGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends move audience flow elements with max priority for cycle to result flow schema 
            and removes processed schema elements from source collection.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.MoveAudienceElementsGenerationStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Defines if source collection has elements to process.
            </summary>
            <param name="sourceCollection">Collection of <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>s.</param>
            <returns>True if there are elements that should to be processed.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.StartSignalGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the start signal.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.StartSignalGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the start signal element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.TerminateSignalGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the terminate signal.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.TerminateSignalGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the terminate signal to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Steps.TriggeredCampaignSignalGenerationStep">
            <summary>
            Class contains the part of generators logic that adds the triggered campaign signal element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.TriggeredCampaignSignalGenerationStep.ProcessCurrentStep(Terrasoft.Core.Campaign.FlowElementCollection@,Terrasoft.Core.Process.FlowSchema@)">
            <summary>
            Appends the triggered campaign signal element to the <paramref name="resultSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <param name="resultSchema">Ref at collection of flow elements aggregated into a single FlowSchema.</param>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Steps.TriggeredCampaignSignalGenerationStep.CanProcess(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Validates existing of start element.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <returns>True if <paramref name="sourceCollection"/> is valid to process.</returns>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Strategies.CampaignSchemaGenerationStrategyBase.Schema">
            <summary>
            The <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Strategies.CampaignSchemaGenerationStrategyBase.ScheduledTime">
            <summary>
            Scheduled time for the campaign execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Strategies.CampaignSchemaGenerationStrategyBase.BuildChain">
            <summary>
            Builds the chain of steps.
            </summary>
            <returns>An instance of the first step of chain.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Strategies.CampaignSchemaGenerationStrategyBase.GenerateFlowSchema(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Builds and executes the chain of steps to generate an instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <returns>Returns collection of flow elements aggregated into a single <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Strategies.ICampaignSchemaGenerationStrategy.GenerateFlowSchema(Terrasoft.Core.Campaign.FlowElementCollection)">
            <summary>
            Builds and executes the chain of steps to generate an instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="sourceCollection">Source collection of the flow elements.</param>
            <returns>Returns collection of flow elements aggregated into a single <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Strategies.ImmediateGenerationStrategy">
            <summary>
            Generates an instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/> in case of run at a transitions time.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Strategies.ImmediateGenerationStrategy.BuildChain">
            <summary>
            Builds a chain of steps for the immediate campaign run, depending on time at a conditional transitions.
            </summary>
            <returns>Reference at the first step of chain.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Strategies.ScheduledGenerationStrategy">
            <summary>
            Generates an instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/> in case of run at a default campaign period.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Strategies.ScheduledGenerationStrategy.BuildChain">
            <summary>
            Builds a chain of steps for the scheduled campaign run.
            </summary>
            <returns>Reference at the first step of chain.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.FlowGenerator.Strategies.TriggeredGenerationStrategy">
            <summary>
            Generates an instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/> in case of run campaign by triggered signal.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.FlowGenerator.Strategies.TriggeredGenerationStrategy.StartElementUId">
            <summary>
            Unique identifier of fragment start element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.FlowGenerator.Strategies.TriggeredGenerationStrategy.BuildChain">
            <summary>
            Builds a chain of steps for the triggered by signal campaign run.
            </summary>
            <returns>Reference at the first step of chain.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.ICampaignEngine">
            <summary>
            Represents methods to manage campaigns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.ICampaignEngine.Run(Terrasoft.Core.Campaign.CampaignSchema,Terrasoft.Core.Campaign.CampaignExecutionConfig)">
            <summary>
            Runs the campaign schema with specific execution config.
            </summary>
            <param name="schema">The campaign schema instance.</param>
            <param name="config">Campaign execution config <see cref="T:Terrasoft.Core.Campaign.CampaignExecutionConfig" />.</param>
        </member>
        <member name="T:Terrasoft.Core.Campaign.ICampaignExecutionLogger">
            <summary>
            The interface for campaign execution logger.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.ICampaignExecutionLogger.LogAction(Terrasoft.Core.Campaign.CampaignLogInfo)">
            <summary>
            Common log action method.
            </summary>
            <param name="info">Instance of <see cref="T:Terrasoft.Core.Campaign.CampaignLogInfo"/>.</param>
        </member>
        <member name="P:Terrasoft.Core.Campaign.IFlowElementsContainer.FlowElements">
            <summary>
            Gets flow elements of the current schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.IFlowElementsContainer.IsExpanded">
            <summary>
            Gets or sets sign that container is expanded.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.IFlowElementsContainer.Name">
            <summary>
            Name of the schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.IFlowElementsContainer.UId">
            <summary>
            Unique identifier of the schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Interfaces.ICampaignFragmentSynchronizer">
            <summary>
            Describes synchronizer for campaign participants
            which are processed at campaign fragment executions.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Interfaces.ICampaignFragmentSynchronizer.Synchronize(Terrasoft.Core.UserConnection,Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Moves participants with ReadyToSync flag, into the CampaignParticipant table in a transaction.
            </summary>
            <param name="userConnection">An instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="campaignSchema">An instance of <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/> to process.</param>
            <returns>A number of added contacts/participants.</returns>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Interfaces.ICampaignFragmentSynchronizer.ForceSynchronize(Terrasoft.Core.UserConnection,Terrasoft.Core.Campaign.CampaignSchema)">
            <summary>
            Moves all participants with status actualization into the CampaignParticipant table
            in a transaction for current campaign.
            </summary>
            <param name="userConnection">An instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="campaignSchema">An instance of <see cref="T:Terrasoft.Core.Campaign.CampaignSchema"/> to process.</param>
            <returns>Synchronization result.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Interfaces.IDelayedExecutionCondition">
            <summary>
            Represents properties and methods of campaign elements with delayed execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Interfaces.IDelayedExecutionCondition.IsDelayedStart">
            <summary>
            Defines if element execution is delayed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Interfaces.IDelayedExecutionCondition.HasDelay">
            <summary>
            Defines if element is delayed at any number of days, hours etc. that are greater than 0.
            </summary>
            <returns>True if execution is delayed.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Interfaces.IElementPriority">
            <summary>
            Represents priority property of campaign schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Interfaces.IElementPriority.Priority">
            <summary>
            Priority of the campaign schema element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Interfaces.IExtendableElement.CreateElementExtensions">
            <summary>
            Returns extends for <see cref="T:Terrasoft.Core.Campaign.CampaignSchemaElement"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Interfaces.IScheduledExecutionCondition">
            <summary>
            Represents properties and methods of campaign elements with scheduled execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.Interfaces.IScheduledExecutionCondition.CanProcessAt(System.TimeSpan)">
            <summary>
            Defines if element can be processed at a specified time.
            </summary>
            <returns>True if can be processed at <paramref name="time"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Campaign.Interfaces.ITransitionPriority">
            <summary>
            Represents priority property of campaign transition.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Campaign.Interfaces.ITransitionPriority.Priority">
            <summary>
            Priority of the campaign transition element.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Campaign.StartSignal.ICampaignSignalEntityHandler">
            <summary>
            The interface for campaign signal entity handler.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Campaign.StartSignal.ICampaignSignalEntityHandler.Handle(System.Guid,System.Guid,System.Guid)">
            <summary>
            Reaction to triggered campaign start signal event.
            </summary>
            <param name="entitySchemaUId">Unique identifier of entity schema that has triggered event.</param>
            <param name="entityId">Id of entity that has triggered event.</param>
            <param name="campaignItemId">Unique identifier of triggered campaign start signal element.</param>
        </member>
        <member name="T:Terrasoft.Core.Cancellation.ICancellationTokenProvider">
            <summary>
            Provides cancellation token on execution scope level.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Cancellation.ICancellationTokenProvider.GetCancellationToken">
            <summary>
            Returns execution scope level cancellation token.
            </summary>
            <returns>Cancellation token.</returns>
        </member>
        <member name="M:Terrasoft.Core.ChangeLogCleaner.GetChangeLogRecordIds(Terrasoft.Core.Entities.EntitySchema,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Returns record Ids by range from selected entity.
            </summary>
            <param name="schema">Entity schema.</param>
            <param name="startDate">Start date.</param>
            <param name="endDate">End date.</param>
        </member>
        <member name="M:Terrasoft.Core.ChangeLogCleaner.Clear(System.Guid,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Removes change log data from selected schema.
            </summary>
            <param name="schemaUId">Schema UId.</param>
            <param name="startDate">Start date.</param>
            <param name="endDate">End date.</param>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaType">
            <summary>Type of client unit schema.</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.None">
            <summary>None</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.Module">
            <summary>Module</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.EditViewModelSchema">
            <summary>Edit page ViewModel schema.</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.ModuleViewModelSchema">
            <summary>Module ViewModel schema.</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.DetailViewModelSchema">
            <summary>Detail ViewModel schema.</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.GridDetailViewModelSchema">
            <summary>View model schema of the detail with editable list.</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.EditControlsDetailViewModelSchema">
            <summary>ViewModel schema of the detail with edit fields.</summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaType.UnitTestModule">
            <summary>Schema of the unit-test module.</summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.InnerCss">
            <summary>
            Cached CSS content from metadata.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.InnerBody">
            <summary>
            Cached JS content from metadata.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.InnerLess">
            <summary>
            Cached Less content from metadata.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.HasParentSchema">
            <summary>
            Returns flag that indicates if schema has parent
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.BaseSchemaUId">
            <summary>
            ########## ############# ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchema.SchemaContentReader">
            <summary>
            Returns new instance of <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentReader"/> realization.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchema._body">
            <summary>
            JS content of current ClientUnitSchema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchema._css">
            <summary>
            CSS content of current ClientUnitSchema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchema._less">
            <summary>
            Less content of current ClientUnitSchema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaDependency">
            <summary>
            Schema dependency.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ClientUnitSchemaDependency" />
            class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.#ctor(Terrasoft.Core.ClientUnitSchemaDependency)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ClientUnitSchemaDependency" />
            class that is a clone of the specified index.
            </summary>
            <param name="source">Dependency whose clone is being created.</param>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaDependency.SchemaUId">
            <summary>
            Id of the schema, which the current <see cref="T:Terrasoft.Core.ClientUnitSchema" /> depends on.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Reads the values of schema dependency properties from metadata,
            using the specified <see cref="T:Terrasoft.Common.DataReader" />.
            </summary>
            <param name="reader">The <see cref="T:Terrasoft.Common.DataReader" />
            instance used to read metadata.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes the metadata of the schema dependency, using the specified
            <see cref="T:Terrasoft.Common.DataWriter" /> instance.
            </summary>
            <param name="writer">The <see cref="T:Terrasoft.Common.DataWriter" />
            instance used for writing the metadata of the dependency.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependency.Clone">
            <summary>
            Returns the clone of the current schema dependency.
            </summary>
            <returns>The clone of the current schema dependency.</returns>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection">
            <summary>
            Provides methods for working with collection of schema dependencies.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependencyCollection.#ctor">
            <summary>
            Initializes a new instance of the
            <see cref="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection" />
            class that is a clone of the specified collection of schema dependencies.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependencyCollection.#ctor(Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Initializes a new instance of the class <see cref = "T:Terrasoft.Core.ClientUnitSchemaDependencyCollection"/>,
            a clone of the collection dependencies of schema.
            </summary>
            <param name="source">The collection of schema dependencies whose clone is being created.</param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaDependencyCollection.Clone">
            <summary>
            Returns the collection of schema dependencies which is a clone of the given collection.
            </summary>
            <returns>
            The <see cref="T:Terrasoft.Core.ClientUnitSchemaDependencyCollection" />
            instance that is a clone of the current collection of schema dependencies.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManager.HashFunc">
            <summary>
            Hashing function. By default - MD5.
            </summary>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            If the set value is <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.FindInstanceByName(System.String)">
            <summary>
            Searches for the instance of the manager item with the specified name.
            </summary>
            <param name="name">Name of the manager item instance to get.</param>
            <returns>The instance of the manager item with the <paramref name="name" /> name.
            If a manager item instance with the <paramref name="name" />
            name is not found, returns <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.GetInstanceByName(System.String)">
            <summary>
            Returns the instance of the manager item with the specified name.
            </summary>
            <param name="name">Name of the manager item instance.</param>
            <returns>The instance of the manager item with the <paramref name="name" /> name.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.FindInstanceByUId(System.Guid)">
            <summary>
            Searches for the instance of the manager item by the specified unique identifier.
            </summary>
            <param name="uid">UId of the manager item instance.</param>
            <returns>The instance of the manager item with the specified <paramref name="uid" />
            unique Id. If a manager item with the <paramref name="uid" />
            unique Id is not found, returns <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.GetInstanceByUId(System.Guid)">
            <summary>
            Returns the instance of the manager item with the specified UId.
            </summary>
            <param name="uid">Unique identifier of the manager item instance.</param>
            <returns>The instance of the manager item with the specified <paramref name="uid" />
            identifier.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Creates an instance of the <see cref="T:Terrasoft.Core.ClientUnitSchema" /> type schema.
            </summary>
            <param name="schemaManagerItem">Item of manager.</param>
            <param name="assembly">An assembly that contains the type of the schema that is being created.</param>
            <returns>The initialized instance of the schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManager.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Actualizes the descriptor of the schema manager item.
            </summary>
            <param name="item">Manager item whose descriptor must be actualized.</param>
        </member>
        <member name="T:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor">
            <summary>
            ########## ######## ######### #### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.BodyHash">
            <summary>
            ### ######### #### # ###### CSS.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.SchemaType">
            <summary>
            ### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.HasCss">
            <summary>
            #######, ######## ## ##### ##### CSS.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor._messages">
            <summary>
            ######### ######### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor._dependencies">
            <summary>
            ######### ############ #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.LocalizableStringsHash">
            <summary>
            ### ############ ##### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            ######### ############## ###########.
            </summary>
            <param name="reader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ##############.
            </param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaManagerItemDescriptor.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ###########.
            </summary>
            <param name="writer">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ############.
            </param>
        </member>
        <member name="M:Terrasoft.Core.ClientUnitSchemaParameter.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values. Only for backwards compatibility with old schemes.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.GeneratorContext.WriteToken(Terrasoft.Core.CodeGeneration.GeneratorToken)">
            <summary>
            Writes token text to the output stream.
            </summary>
            <param name="token">Token to write.</param>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CloseableToken.WriteDocumentationBody(Terrasoft.Core.CodeGeneration.GeneratorContext)">
            <summary>
            Writes documentation for the body.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.VisibilityConfigurableToken">
            <summary>
            Adds functionality of visibility for the token.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.VisibilityConfigurableToken.TokenVisibility">
            <summary>
            Gets or sets value indicating the visibility state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.VisibilityConfigurableToken.TokenVisibilityString">
            <summary>
            String representation of the visibility.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.CodeGenerator">
            <summary>
            Represents code generator.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.CodeGenerator.SingleLineToken">
            <summary>
            Represents single line token.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.CodeGenerator.MemberInfoToken">
            <summary>
            Represents member info token.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.CodeGenerator.ClassToken">
            <summary>
            Represents class token.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CodeGenerator.ClassToken.Open(Terrasoft.Core.CodeGeneration.GeneratorContext)">
            <summary>
            Opens generator context.
            </summary>
            <param name="context">Context to open.</param>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.CodeGenerator.EnumToken">
            <summary>
            Represents enum token.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CodeGenerator.EnumToken.Open(Terrasoft.Core.CodeGeneration.GeneratorContext)">
            <summary>
            Opens generator context.
            </summary>
            <param name="context">Context to open.</param>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.CodeGenerator.GenericClassToken">
            <summary>
            Represents generic class token.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CodeGenerator.GenericClassToken.Open(Terrasoft.Core.CodeGeneration.GeneratorContext)">
            <summary>
            Opens generator context.
            </summary>
            <param name="context">Context to open.</param>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyToken.IsVirtual">
            <summary>
            Gets or sets value that indicates whether it is needed to write the "virtual" keyword.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CodeGenerator.MethodToken.Open(Terrasoft.Core.CodeGeneration.GeneratorContext)">
            <summary>
            Opens generator token context.
            </summary>
            <param name="context">Context to open.</param>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CodeGenerator.ConstructorToken.Open(Terrasoft.Core.CodeGeneration.GeneratorContext)">
            <summary>
            Opens generator token context.
            </summary>
            <param name="context">Context to open.</param>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyCollectionItem.IsVirtual">
            <summary>
            Gets or sets value that indicates whether it is needed to write the "virtual" keyword.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyCollectionItem.GetValueBody">
            <summary>
            Gets or sets value that represents a set of lines of code to initialize the property value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.CodeGenerator.#ctor">
            <summary>
            Initializes the new instance of CodeGenerator class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.CodeGenerator.SchemaNameMacros">
            <summary>
            Get schema name macros text representation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.CodeGenerator.ParentSchemaNameMacros">
            <summary>
            Gets parent schema macros name text representation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.CodeGenerator.LastSchemaVersionNameMacros">
            <summary>
            Gets last schema version name macros text representation.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CodeGeneration.EventsProcessAnchorClassGenerator">
            <summary>
            Used to generate source code of the events process class for extended entity schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.CodeGeneration.CodeGenerator" />
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.EventsProcessAnchorClassGenerator.GenerateClass(System.String,System.String)">
            <summary>
            Generates the events process class for extended entity schema in last package by topology.
            </summary>
            <param name="className">Name of the final process class.</param>
            <param name="baseClassName">Name of the process class for schema in current package.</param>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.SchemaCodeGeneratorResource`1.IsPartial">
            <summary>
            Gets or sets a value indicating whether generated class should be partial.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.CodeGeneration.SchemaCodeGenerator`1.IsNetStandardIncompatible">
            <summary>
            Gets or sets a value indicating whether schema item is compatible with .netstandard or not.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.SchemaCodeGenerator`1.AddSchemaMethods(`0,`0,System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.MethodCollectionItem},System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.MethodCollectionItem})">
            <summary>
            Fills public methods collection with user defined functions.
            </summary>
            <param name="schema">Target schema with methods.</param>
            <param name="parentSchema">Parent schema for target.</param>
            <param name="protectedMethodCollection">Collection of protected methods.</param>
            <param name="publicMethodCollection">Collection of public methods.</param>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.SchemaCodeGenerator`1.GenerateSchemaSource(Terrasoft.Core.CodeGeneration.SchemaCodeGeneratorResource{`0},Terrasoft.Core.Entities.EntityCollection,System.String)">
            <summary>
            Generates source code for provided schema.
            </summary>
            <param name="resource">Instance of <see cref="T:Terrasoft.Core.CodeGeneration.SchemaCodeGeneratorResource`1"/> to generate source
            code from.</param>
            <param name="sourceCollection">Collection to place generated source code to.</param>
            <param name="sourceFileName">Source code file name to generate.</param>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.SchemaCodeGenerator`1.CreateSourcesEntityCollection(Terrasoft.Core.UserConnection)">
            <summary>
            Creates entity collection which is used to store schema sources.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Entity collection which is used to store schema sources.</returns>
        </member>
        <member name="M:Terrasoft.Core.CodeGeneration.SchemaCodeGenerator`1.GenerateSourceCode(Terrasoft.Core.CodeGeneration.SchemaCodeGeneratorResource{`0},System.IO.TextWriter,System.Action{Terrasoft.Core.CodeGeneration.SchemaCodeGeneratorResource{`0},Terrasoft.Core.CodeGeneration.GeneratorContext,Terrasoft.Core.CodeGeneration.GeneratorTokenVisibility})">
            <summary>
            Generates the source code using specified <paramref name="action"/>.
            </summary>
            <param name="resource">The resource.</param>
            <param name="streamWriter">The stream writer.</param>
            <param name="action">The code generation action.</param>
        </member>
        <member name="T:Terrasoft.Core.Compilation.ArgumentEscaper">
            <summary>
            Escapes process or command line arguments.
            </summary>
            <remarks>
            See https://github.com/dotnet/cli; src/Microsoft.DotNet.Cli.Utils/ArgumentEscaper.cs
            </remarks> 
        </member>
        <member name="M:Terrasoft.Core.Compilation.ArgumentEscaper.EscapeSingleArg(System.String)">
            <summary>
            Escapes a single process or command line argument.
            </summary>
            <param name="arg"></param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Compilation.BaseCompiler">
            <summary>
            Generates workspace assembly.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Compilation.IProjectBuilder">
            <summary>
            Defines methods to build project.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Compilation.IProjectBuilder.Build(System.String,System.String,Terrasoft.Core.Compilation.BuildCommandParameters)">
            <summary>
            Builds workspace assembly.
            </summary>
            <param name="projectFilePath">Path to the project file.</param>
            <param name="tempPath">The path to the temporary folder.</param>
            <param name="parameters">Build parameters.</param>
            <returns>Build result.</returns>
        </member>
        <member name="T:Terrasoft.Core.Compilation.IWorkspaceBuilder">
            <summary>
            Defines methods to build workspace assembly from source code.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Compilation.IWorkspaceBuilder.Build">
            <summary>
            Builds workspace assembly.
            </summary>
            <returns>Collection of error or warning messages.</returns>
        </member>
        <member name="T:Terrasoft.Core.Compilation.ProcessReaper">
            <summary>
            Responsible for reaping a target process if the current process terminates.
            </summary>
            <remarks>
            See https://github.com/dotnet/cli; src/Microsoft.DotNet.Cli.Utils/ProcessReaper.cs
            
            On Windows, a job object will be used to ensure the termination of the target
            process (and its tree) even if the current process is rudely terminated.
            
            On POSIX systems, the reaper will handle SIGTERM and attempt to forward the
            signal to the target process only.
            
            The reaper also suppresses SIGINT in the current process to allow the target
            process to handle the signal.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Compilation.ProcessReaper.#ctor(System.Diagnostics.Process)">
            <summary>
            Creates a new process reaper.
            </summary>
            <param name="process">
            The target process to reap if the current process terminates. The process should not yet
            be started.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Compilation.ProcessReaper.NotifyProcessStarted">
            <summary>
            Call to notify the reaper that the process has started.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Compilation.ProjectBuilder.#ctor(Terrasoft.IO.IFile)">
            <summary>Initializes a new instance of the <see cref="T:ProjectBuilder"></see> class.</summary>
        </member>
        <member name="M:Terrasoft.Core.Compilation.ProjectBuilder.ProcessCompilerOutputLine(System.String,System.CodeDom.Compiler.CompilerError@)">
            <summary>
            See https://github.com/aspnet/RoslynCodeDomProvider
            src/Microsoft.CodeDom.Providers.DotNetCompilerPlatform/CSharpCompiler.cs
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Compilation.WorkspaceAssemblyFilesManager.GetWorkspaceSourcePathesForPackage(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns source code paths collection for provided <see cref="T:Terrasoft.Core.Packages.Package"/>.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> to compute source code paths for.</param>
            <returns>Dictionary with schema name as key and it's source code paths as value.</returns>
        </member>
        <member name="T:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyCurrentDirectoryProvider">
            <summary>
            Provides methods for getting current directory of configuration assembly.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyCurrentDirectoryProvider.GetConfigurationAssemblyCurrentDirectory">
            <summary>
            Returns current directory of configuration assembly.
            </summary>
            <returns>Current directory of configuration assembly.</returns>
        </member>
        <member name="T:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyModuleReader">
            <summary>
            Provides methods for reading configuration assembly module.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyModuleReader.GetModuleNames">
            <summary>
            Returns list of module names for configuration assembly.
            </summary>
            <returns>List of module names for configuration assembly.</returns>
        </member>
        <member name="M:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyModuleReader.ReadModule(System.String)">
            <summary>
            Reads the contents of the module into a byte array.
            </summary>
            <param name="moduleName">Module name.</param>
            <returns>The module contents converted to a byte array.</returns>
        </member>
        <member name="T:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyReader">
            <summary>
            Provides methods for reading configuration assembly.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyReader.ReadAssembly">
            <summary>
            Reads configuration assembly.
            </summary>
            <returns>Array of bytes of configuration assembly.</returns>
        </member>
        <member name="M:Terrasoft.Core.ConfigurationAssembly.IConfigurationAssemblyReader.AssemblyExists">
            <summary>
            Checks an existing of configuration assembly.
            </summary>
            <returns><c>true</c> if configuration assembly exists. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.BaseProcessListener">
            <summary>
            Provides properties that represent information about base process listener.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.BaseProcessListener.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DBTypeConverter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.BaseProcessListener"/> class by the data reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="dbTypeConverter">The database type converter.</param>
            <param name="defManagerName">The default process schema manager name.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.BaseProcessListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.BaseProcessListener"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.BaseProcessListener.Id">
            <summary>
            Gets or sets identifier of the entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.BaseProcessListener.RecordChangetype">
            <summary>
            Gets or sets types of entity modifications.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.BaseProcessListener.ConditionData">
            <summary>
            Gets or sets condition data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.BaseProcessListener.ChangedColumns">
            <summary>
            Gets or sets data of changed columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.BaseProcessListener.ManagerName">
            <summary>
            Gets or sets the name of the process schema manager.
            </summary>
            <value>
            The name of the process schema manager.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Configuration.DisplayDateFormatSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Creates an entity intance based on current schema.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>An intance of <see cref="T:Terrasoft.Core.Entities.Entity"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.ProcessListener">
            <summary>
            Provides properties that represent information about process listener.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.ProcessListener.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DBTypeConverter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.ProcessListener"/> class by the data reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="dbTypeConverter">The database type converter.</param>
            <param name="defManagerName">The default process schema manager name.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.ProcessListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.ProcessListener"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessListener.ProcessSchemaUId">
            <summary>
            Gets or sets the identifier of the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessListener.SysProcessDataId">
            <summary>
            Gets or sets the identifier of the running process.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.ProcessSchemaListener">
            <summary>
            The class for the process schema listener.
            </summary>
            <seealso cref="T:Terrasoft.Core.Configuration.ProcessListener" />
            <seealso cref="T:Terrasoft.Core.Configuration.SysEntityPrcStartEventSchema"/>
        </member>
        <member name="M:Terrasoft.Core.Configuration.ProcessSchemaListener.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DBTypeConverter,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.ProcessSchemaListener"/> class by the data reader.
            </summary>
            <param name="reader">The reader.</param>
            <param name="dbTypeConverter">The database type converter.</param>
            <param name="defaultManagerName">The default process schema manager name.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.ProcessSchemaListener.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.ProcessSchemaListener"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessSchemaListener.EntitySchemaUId">
            <summary>
            Gets or sets unique identifier of the entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessSchemaListener.ProcessSchemaId">
            <summary>
            Gets or sets identifier of the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessSchemaListener.ProcessSchemaElementUId">
            <summary>
            Gets or sets identifier of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessSchemaListener.WaitingRandomSignal">
            <summary>
            Gets or sets value that indicates whether the current signal is waiting random event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.ProcessSchemaListener.Signal">
            <summary>
            Gets or sets string, which value is listened by event.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.Reminding">
            <summary>
            Provides properties that represent information about reminding.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.Reminding.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.Reminding"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.Reminding.#ctor(Terrasoft.Core.Configuration.SysBaseEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.Reminding"/> class.
            </summary>
            <param name="source">User connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.AuthorId">
            <summary>
            Gets or sets the identifier of the author.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.ContactId">
            <summary>
            Gets or sets the identifier of the contact.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.SourceId">
            <summary>
            Gets or sets the identifier of the notyification source.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.SysEntitySchemaId">
            <summary>
            Gets or sets the unique identifier of the entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.SubjectId">
            <summary>
            Gets or sets the identifier of the notification subject.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.NotificationTypeId">
            <summary>
            Gets or sets the identifier of the notification type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.RemindTime">
            <summary>
            Gets or sets the date time of the notification.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.Description">
            <summary>
            Gets or sets the description.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.SubjectCaption">
            <summary>
            Gets or sets the subject caption.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.Reminding.Hash">
            <summary>
            Gets or sets the hash value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.Reminding.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysAdminUnit.GetUser(Terrasoft.Core.UserConnection,System.String,Terrasoft.Core.UserType)">
            <summary>
            Search <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> by <paramref name="userName"/>.
            </summary>
            <param name="userConnection"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="userName"><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> name.</param>
            <param name="userType">User type.</param>
            <returns><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysAdminUnit.GetUser(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Search <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> with <see cref="F:Terrasoft.Core.UserType.General"/> type by <paramref name="userName"/>.
            </summary>
            <param name="userConnection"></param>
            <param name="userName"><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> name.</param>
            <returns><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysAdminUnit.GetUserIgnoreType(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Search <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> by <paramref name="userName"/>. User type ignored.
            </summary>
            <param name="userConnection"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="userName"><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> name.</param>
            <returns><see cref="T:Terrasoft.Core.Configuration.SysUserInfo"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysAdminUnit.GetUserId(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Gets user identifier by its name.
            </summary>
            <param name="userConnection"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="userName">Name of the user.</param>
            <returns>User's identifier.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysAdminUnit.ValidateAdminUnitNamePassword(Terrasoft.Core.UserConnection,System.String@,System.String)">
            <summary>
            ######### ####### ############ # ## # ########### ######
            </summary>
            <param name="userConnection"></param>
            <param name="userName">### ############, ### ##### ########. #### ####### ## #########, 
            ### ############ ##### ########## # ########### # ######### # ## </param>
            <param name="userPassword">###### ############.</param>
            <returns>
            <c>true</c>, #### ############ # ########## <paramref name="userName"/> ########## # ###### 
            <paramref name="userName"/> ######### # ########## # ##
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema">
            <summary>
            SysClientUnitSchemaDependencySchema class
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Initialize new instance of class
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema"/>
            </summary>
            <param name="entitySchemaManager">instance of 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaManager"/></param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema.#ctor(Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema,System.Boolean)">
            <summary>
            Initialize new instance of class 
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema"/>
            </summary>
            <param name="source">instance of SysClientUnitSchemaDependencySchema</param>
            <param name="isShallowClone">flag of full schema's clone</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema.#ctor(Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema)">
            <summary>
            Initialize new instance of class
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema"/>
            </summary>
            <param name="source">instance of SysClientUnitSchemaDependencySchema</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            create a new SysClientUnitSchemaDependency entity
            </summary>
            <param name="userConnection">instance of UserConnection</param>
            <returns>new instance of SysClientUnitSchemaDependencySchema</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema.Clone">
            <summary>
            clone current instance of class
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema"/>
            to new instance
            </summary>
            <returns>new instance of SysClientUnitSchemaDependencySchema</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema.CloneShallow">
            <summary>
            clone current instance of class
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependencySchema"/>
            to new instance with flag of full schema's clone
            </summary>
            <returns>new instance of SysClientUnitSchemaDependencySchema</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency">
            <summary>
            SysClientUnitSchemaDependency class
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initialize new instance of class 
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency"/>
            </summary>
            <param name="userConnection">instance of <see cref="T:Terrasoft.Core.UserConnection"/></param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.#ctor(Terrasoft.Core.Configuration.SysClientUnitSchemaDependency)">
            <summary>
            Initialize new instance of class 
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency"/>
            </summary>
            <param name="source">instance of SysClientUnitSchemaDependency</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.UId">
            <summary>
            current dependency Id
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.CreatedInSchemaUId">
            <summary>
            SchemaUId where current depencency created
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.ModifiedInSchemaUId">
            <summary>
            SchemaUId where current depencency modified
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.Name">
            <summary>
            name of current dependency
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.SchemaUId">
            <summary>
            ShemaUId from which depend
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.ManagerName">
            <summary>
            SchemaManagerName of dependent schema
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.SysSchemaId">
            <summary>
            Id of dependent schema (Lookup)
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.SysSchemaName">
            <summary>
            Name of dependent schema (Lookup)
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.SysSchema">
            <summary>
            full getter of property SysSchema
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency.Clone">
            <summary>
            clone this instance of 
            <see cref="T:Terrasoft.Core.Configuration.SysClientUnitSchemaDependency"/> from current
            </summary>
            <returns>new instance of SysClientUnitSchemaDependency</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysCronTriggerStateSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysCronTriggerState">
            <summary>
            SysCronTriggerState.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysCulture.ResetSysCulturesCache(Terrasoft.Core.UserConnection)">
            <summary>
            Resets system cultures cache.
            </summary>
            <param name="userConnection">User connection</param>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysExtServiceOperationRightSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysExtServiceOperationRight">
            <summary>
            Operations permissions for external services.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.SysAdminUnitId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.SysAdminUnitName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanRead">
            <summary>
            Read.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanAppend">
            <summary>
            New.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanEdit">
            <summary>
            Edit.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.CanDelete">
            <summary>
            Delete.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysExtServiceOperationRight.Position">
            <summary>
            Position.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.Maintainer">
            <summary>
            Maintainer.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.InstallDate">
            <summary>
            Install date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.LastUpdate">
            <summary>
            Last update.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.MarketplaceLink">
            <summary>
            Marketplace link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.HelpLink">
            <summary>
            Help link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.FileLink">
            <summary>
            File link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.SupportEmail">
            <summary>
            Support email.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.OrderLink">
            <summary>
            Order link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.SysInstalledAppStatus">
            <summary>
            Application status.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.SysInstalledAppStatusName">
            <summary>
            Application status name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledApp.SysInstalledAppStatusId">
            <summary>
            Application status id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.SysPackageId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.SysPackageName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.SysPackage">
            <summary>
            Package.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.SysSchemaId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.SysSchemaCaption">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.SysSchema">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysInstalledPackageData.RecordId">
            <summary>
            Record Id.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysLocalizableValueSchema">
            <summary>
            ############ ##### ############### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValueSchema"/> # ######## ########## ####.
            </summary>
            <param name="entitySchemaManager">######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.#ctor(Terrasoft.Core.Configuration.SysLocalizableValueSchema,System.Boolean)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValueSchema"/>, ########## ###### ### ########
            ###### ######## ##### <paramref name="source"/> # ########### ## ######## <paramref name="isShallowClone"/>.
            </summary>
            <param name="source">#####, #### ####### #########.</param>
            <param name="isShallowClone">####### ####### ############ #####. #### <paramref name="isShallowClone"/> 
            ##### <c>true</c>, ## # ########### ######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValueSchema"/> ## ########## #######
            ##### <paramref name="source"/>. #### <paramref name="isShallowClone"/> ##### <c>false</c>, ## ######### 
            ########### #### <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.#ctor(Terrasoft.Core.Configuration.SysLocalizableValueSchema)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValueSchema"/>,
            ########## ###### ###### ######## ##### 
            <paramref name="source"/>.
            </summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.InitializeProperties">
            <summary>
            ############# ####### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.InitializeIndexes">
            <summary>
            Initialization of indexes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.InitializeColumns">
            <summary>
            ############# #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateSysPackageColumn">
            <summary>
            ############# ####### SysPackageId.
            </summary>
            <returns>####### SysPackageId.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateSysSchemaColumn">
            <summary>
            ############# ####### SysSchemaId.
            </summary>
            <returns>####### SysSchemaId.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateResourceManagerColumn">
            <summary>
            ############# ####### ResourceManager.
            </summary>
            <returns>####### ResourceManager.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateSysCultureColumn">
            <summary>
            ############# ####### SysCultureId.
            </summary>
            <returns>####### SysCultureId.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateKeyColumn">
            <summary>
            ############# ####### Key.
            </summary>
            <returns>####### Key.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateValueColumn">
            <summary>
            ############# ####### Value.
            </summary>
            <returns>####### Value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateIsChangedColumn">
            <summary>
            ############# ####### IsChanged.
            </summary>
            <returns>####### IsChanged.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateImageDataColumn">
            <summary>
            ############# ####### ImageData.
            </summary>
            <returns>####### ImageData.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ######### #######, ####### ######### #####.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/> # #######, ########### ## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ###### ####### #####.
            </summary>
            <returns>######### <see cref="T:System.Object"/> - ###### #### ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValueSchema.CloneShallow">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ###### ####### ##### ### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - #### ####### ##### ### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysLocalizableValue">
            <summary>
            ############ ############## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValue.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>,
            ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValue.#ctor(Terrasoft.Core.Configuration.SysLocalizableValue)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>,
            ########## ###### ######### ############### ########.
            </summary>
            <param name="source">########, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysPackageId">
            <summary>
            ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysPackageName">
            <summary>
            ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysPackage">
            <summary>
            #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysSchemaId">
            <summary>
            ############# #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysSchemaCaption">
            <summary>
            ######### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysSchema">
            <summary>
            #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.ResourceManager">
            <summary>
            ### ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysCultureId">
            <summary>
            ############# ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysCultureName">
            <summary>
            ######## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.SysCulture">
            <summary>
            ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.Key">
            <summary>
            ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.Value">
            <summary>
            ######## ########## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.ResourceType">
            <summary>
            Type of resource.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.IsChanged">
            <summary>
            #######, ### ## ###### ####### #############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLocalizableValue.ImageData">
            <summary>
            ######## ############ #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysLocalizableValue.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ######## ############### ########.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, - #### ######## ############### ########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysLookup">
            <summary>
            System lookup.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.IsSystem">
            <summary>
            #########.
            </summary>
            <remarks>
            ###### ######### ##########, ########### # ######-#########. ######### #########.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.IsSimple">
            <summary>
            #######.
            </summary>
            <remarks>
            ####### ########## # ######### ########### #######. ##########.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.SysEditPageSchemaUId">
            <summary>
            Edit page schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.SysGridPageSchemaUId">
            <summary>
            Grid page schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysLookup.SysEntitySchemaUId">
            <summary>
            Entity schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackage.IsContentChanged">
            <summary>
            #######, ############, #### ## ######## ########## ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema">
            <summary>
            System package data localizable schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLczSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> class using the specified schema 
            manager.
            </summary>
            <param name="entitySchemaManager">Entity schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLczSchema.#ctor(Terrasoft.Core.Configuration.SysPackageDataLczSchema,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> class using the specified 
            <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> object and flag of completeness of schema cloning.
            </summary>
            <param name="source">Schema, which will be cloned.</param>
            <param name="isShallowClone">Flag of completeness of schema cloning.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLczSchema.#ctor(Terrasoft.Core.Configuration.SysPackageDataLczSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> class using the specified 
            <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> object.
            </summary>
            <param name="source">Schema, which will be cloned.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLczSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Create a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> class using the specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>A new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLczSchema.Clone">
            <summary>
            Clones the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> object.
            </summary>
            <returns>A new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLczSchema.CloneShallow">
            <summary>
            Clones the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> object using the flag of completeness of schema cloning.
            </summary>
            <returns>A new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLczSchema"/> class.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPackageDataLcz">
            <summary>
            System package data localizable.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLcz.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> class using the specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLcz.#ctor(Terrasoft.Core.Configuration.SysPackageDataLcz)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> class which is a clone of the specified 
            <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> object.
            </summary>
            <param name="source">The <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> object, which will be cloned.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageDataLcz.Clone">
            <summary>
            Clones the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> object.
            </summary>
            <returns>A new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageDataLcz"/> class.</returns>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageDependency.DependOnPackageVersion">
            <summary>
            ###### ######, ## ######## ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageInInstalledApp.SysPackageId">
            <summary>
            Package Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageInInstalledApp.SysPackageName">
            <summary>
            Package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageInInstalledApp.SysPackage">
            <summary>
            Package.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageInInstalledApp.SysInstalledAppId">
            <summary>
            Installed application Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageInInstalledApp.SysInstalledAppName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageInInstalledApp.SysInstalledApp">
            <summary>
            Installed application.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema">
            <summary>
            System package resource checksum schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> class using specified
            schema manager.
            </summary>
            <param name="entitySchemaManager">Entity schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema.#ctor(Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema,System.Boolean)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> class using specified 
            <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> object and schema cloning completeness flag.
            </summary>
            <param name="source">Schema that have to be cloned.</param>
            <param name="isShallowClone">Flag of completeness of schema cloning.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema.#ctor(Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> class using specified 
            <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> object.
            </summary>
            <param name="source">Schema that have to be cloned.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Creates new instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> class using specified user
            connection.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>New instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema.Clone">
            <summary>
            Clones <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> object.
            </summary>
            <returns>New instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema.CloneShallow">
            <summary>
            Clones <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> object using schema cloning completeness flag.
            </summary>
            <returns>A new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksumSchema"/> class.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum">
            <summary>
            System package resource checksum.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksum.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> class using specified user
            connection.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksum.#ctor(Terrasoft.Core.Configuration.SysPackageResourceChecksum)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> class which is a clone of the
            specified 
            <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> object.
            </summary>
            <param name="source">The <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> object, which will be cloned.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysPackageId">
            <summary>
            Package identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysPackageName">
            <summary>
            Package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysPackage">
            <summary>
            Package.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysSchemaId">
            <summary>
            Schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysSchema">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysSchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.ResourceManager">
            <summary>
            Resource manager name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysCultureId">
            <summary>
            Culture identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysCultureName">
            <summary>
            Culture name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.SysCulture">
            <summary>
            Culture.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.IsChanged">
            <summary>
            Is Changed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPackageResourceChecksum.Checksum">
            <summary>
            Checksum.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPackageResourceChecksum.Clone">
            <summary>
            Clones <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> object.
            </summary>
            <returns>New instance of <see cref="T:Terrasoft.Core.Configuration.SysPackageResourceChecksum"/> class.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema">
            <summary>####### ##### ### ########### ######### ######.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema"/>.</summary>
            <param name="entitySchemaManager">######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPersistentStoreSchema,System.Boolean)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema"/>.</summary>
            <param name="source">#####, #### ####### #########.</param>
            <param name="isShallowClone">####### ####### ############ #####. #### <paramref name="isShallowClone"/> 
            ##### <c>true</c>, ## # ########### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> ## ########## ####### ##### 
            <paramref name="source"/>. #### <paramref name="isShallowClone"/> ##### <c>false</c>, ## ######### 
            ########### #### <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPersistentStoreSchema)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPersistentStoreSchema"/>.</summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>####### ######### #######, ####### ######### #####.</summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> # #######, ########### ## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.Clone">
            <summary>########## ######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStoreSchema.CloneShallow">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ###### ####### ##### ### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - #### ####### ##### ### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPersistentStore">
            <summary>####### ###### ### ########### ######### ######.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStore.#ctor(Terrasoft.Core.UserConnection)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPersistentStore"/>.</summary>
            <param name="userConnection">################ ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStore.#ctor(Terrasoft.Core.Configuration.SysPersistentStore)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPersistentStore"/>.</summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPersistentStore.GroupKey">
            <summary>############ ####.</summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPersistentStore.Key">
            <summary>####.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPersistentStore.Clone">
            <summary>########## ######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcActualVersionSchema">
            <summary>
            Entity schema class for storing actual process version.
            </summary>
            <seealso cref="T:Terrasoft.Core.Configuration.SysBaseEntitySchema" />
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPrcActualVersionSchema"/> class.
            </summary>
            <param name="entitySchemaManager">The entity schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.#ctor(Terrasoft.Core.Configuration.SysPrcActualVersionSchema,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPrcActualVersionSchema"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="isShallowClone">The indicator of the schema copying fullness. If <c>true</c>, the new 
            instance will have copy of the current instance columns. Otherwise - <c>false</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.#ctor(Terrasoft.Core.Configuration.SysPrcActualVersionSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPrcActualVersionSchema"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.InitializeProperties">
            <summary>
            Initializes the properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.InitializeColumns">
            <summary>
            Initializes the columns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.CreateRootVersionSchemaColumn">
            <summary>
            Creates the root version schema column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.CreateActualVersionSchemaColumn">
            <summary>
            Creates the actual version schema column.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Creates the entity.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The cloned instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersionSchema.CloneShallow">
            <summary>
            Clones this instance with shallow.
            </summary>
            <returns>The cloned instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcActualVersion">
            <summary>
            The entity of <see cref="T:Terrasoft.Core.Configuration.SysPrcActualVersionSchema"/> schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.Configuration.SysBaseEntity" />
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersion.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPrcActualVersion"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersion.#ctor(Terrasoft.Core.Configuration.SysPrcActualVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysPrcActualVersion"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcActualVersion.RootVersionSchemaId">
            <summary>
            Gets or sets the root version schema identifier.
            </summary>
            <value>
            The root version schema identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcActualVersion.ActualVersionSchemaId">
            <summary>
            Gets or sets the actual version schema identifier.
            </summary>
            <value>
            The actual version schema identifier.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcActualVersion.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The cloned instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcElementTraceLog">
            <summary>
            SysPrcElementTraceLog.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcElementTraceLog.TraceEvent">
            <summary>
            LoggingTime.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcElementTraceLog.ElementData">
            <summary>
            ElementData.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcElementTraceLog.ProcessData">
            <summary>
            ProcessData.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcElementTraceLog.SysProcessElementLogId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcElementTraceLog.SysProcessElementLogCaption">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcElementTraceLog.SysProcessElementLog">
            <summary>
            SysProcessElementLog.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema">
            <summary>##### ### ########### ######### ###### ######-#########.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema"/>.</summary>
            <param name="entitySchemaManager">######## #### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema,System.Boolean)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema"/>.</summary>
            <param name="source">#####, #### ####### #########.</param>
            <param name="isShallowClone">####### ####### ############ #####. #### <paramref name="isShallowClone"/> 
            ##### <c>true</c>, ## # ########### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> ## ########## ####### ##### 
            <paramref name="source"/>. #### <paramref name="isShallowClone"/> ##### <c>false</c>, ## ######### 
            ########### #### <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.#ctor(Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema"/>.</summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>####### ######### #######, ####### ######### #####.</summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> # #######, ########### ## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.Clone">
            <summary>########## ######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStoreSchema.CloneShallow">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ###### ####### ##### ### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - #### ####### ##### ### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcPersistentStore">
            <summary>###### ### ########### ######### ###### ######-#########.</summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStore.#ctor(Terrasoft.Core.UserConnection)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStore"/>.</summary>
            <param name="userConnection">################ ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStore.#ctor(Terrasoft.Core.Configuration.SysPrcPersistentStore)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Configuration.SysPrcPersistentStore"/>.</summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysPrcPersistentStore.Clone">
            <summary>########## ######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcSchemaElementSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysPrcSchemaElement">
            <summary>
            SysPrcSchemaElement.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcSchemaElement.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcSchemaElement.ProcessUId">
            <summary>
            ProcessUId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysPrcSchemaElement.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessDataSchema">
            <summary>
            ##### ####### "###### ########".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysProcessDataSchema.CreateStatusColumn">
            <summary>
            Returns schema column that represents the process execution state.
            </summary>
            <returns>Entity schema column.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysProcessDataSchema.CreateSchemaElementUIdColumn">
            <summary>
            Creates the column for storing schema element unique identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessData._sysSchema">
            <summary>
            ##### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessData._parent">
            <summary>
            ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessData._owner">
            <summary>
            #############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessData.Status">
            <summary>
            The execution state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessData.SchemaElementUId">
            <summary>
            The UId of schema element for sub process.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessDisabledSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessDisabled">
            <summary>
            Disabled processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessDisabled.SysSchemaId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessDisabled.SysSchemaCaption">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessDisabled.SysSchema">
            <summary>
            Process.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementDataSchema">
            <summary>
            ##### ####### "###### ######## ########".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysProcessElementDataSchema.CreateStatusColumn">
            <summary>
            Returns schema column that represents the process element execution state.
            </summary>
            <returns>Entity schema column.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementData">
            <summary>
            Process item data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementData.SchemaElementUId">
            <summary>
            Diagram item.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementData._sysProcess">
            <summary>
            Process.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementData._owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementData.SchemaUId">
            <summary>
            Schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementData.Status">
            <summary>
            The execution state.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementLogSchema">
            <summary>
            Entity schema "Process element log".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessElementLog">
            <summary>
            Process element log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.SchemaElementUId">
            <summary>
            ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.StartDate">
            <summary>
            #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.CompleteDate">
            <summary>
            #### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.DurationInMinutes">
            <summary>
            ############, #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.DurationInHours">
            <summary>
            ############, #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.DurationInDays">
            <summary>
            ############, ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementLog._sysProcess">
            <summary>
            #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementLog._status">
            <summary>
            #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.Type">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.Caption">
            <summary>
            #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessElementLog._owner">
            <summary>
            #############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.ErrorDescription">
            <summary>
            ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessElementLog.NodeId">
            <summary>
            Node Identifier.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessLogSchema">
            <summary>
            ##### ####### "###### #########".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysProcessLogSchema.InitializeColumns">
            <summary>
            Initializes the columns collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysProcessLogSchema.CreateErrorDescriptionColumn">
            <summary>
            Creates column for error description.
            </summary>
            <returns>Entity schema column.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessLog">
            <summary>
            Process log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.StartDate">
            <summary>
            The date of the beginning.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.CompleteDate">
            <summary>
            Date of completion.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysSchemaId">
            <summary>
            Schema ID.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.ParentId">
            <summary>
            Parent ID.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.ParentName">
            <summary>
            Parent name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.Parent">
            <summary>
            Parent.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.StatusId">
            <summary>
            Status ID.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.StatusName">
            <summary>
            Status name.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysProcessLog._status">
            <summary>
            Process status.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.OwnerId">
            <summary>
            Owner ID.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.OwnerName">
            <summary>
            Owner name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.Owner">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysWorkspaceId">
            <summary>
            Workspace name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysWorkspaceName">
            <summary>
            Workspace name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.SysWorkspace">
            <summary>
            Workspace.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.DurationInMinutes">
            <summary>
            Duration, minutes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.DurationInHours">
            <summary>
            Duration, hours.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.DurationInDays">
            <summary>
            Duration, days.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.PackageName">
            <summary>
            Name of the package.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.Version">
            <summary>
            Version number of the current schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessLog.ErrorDescription">
            <summary>
            Error description.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysProcessLog.Clone">
            <summary>
            Creates a copy of the current instance.
            </summary>
            <returns>A copy of the current instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessUserTaskSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysProcessUserTask">
            <summary>
            ################ ######## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessUserTask.SysUserTaskSchemaUId">
            <summary>
            ############# ################# ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysProcessUserTask.Position">
            <summary>
            #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysRegistrationDataSchema">
            <summary>
            ##### ####### "############### ######".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysRegistrationData">
            <summary>
            ############### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.SysAdminUnit">
            <summary>
            ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.Contact">
            <summary>
            #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.UserPassword">
            <summary>
            ###### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.LinkType">
            <summary>
            ### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.LinkId">
            <summary>
            ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysRegistrationData.LinkExpireDate">
            <summary>
            #### ######### ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchema.DenyExtending">
            <summary>
            Forbid substitution of schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchema.Checksum">
            <summary>
            Checksum of schema and it's content.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSchemaContentSchema">
            <summary>
            Schema of object <see cref="T:Terrasoft.Core.Entities.SysSchemaContent"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContentSchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContentSchema"/> class.
            </summary>
            <param name="entitySchemaManager">The instance of the
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaManager"/> class.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContentSchema.#ctor(Terrasoft.Core.Configuration.SysSchemaContentSchema,System.Boolean)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContentSchema"/> class.
            </summary>
            <param name="source">The instance of the SysSchemaContentSchema class.</param>
            <param name="isShallowClone">Flag that indicates whether a full schema clone is created.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContentSchema.#ctor(Terrasoft.Core.Configuration.SysSchemaContentSchema)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContentSchema"/> class.
            </summary>
            <param name="source">The instance of the SysSchemaContentSchema class.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContentSchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance of the SysSchemaContent class.
            </summary>
            <param name="userConnection">The instance of the UserConnection class.</param>
            <returns>A new instance of the SysSchemaContent class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContentSchema.Clone">
            <summary>
            Clone current instance of class
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContentSchema"/>
            to new instance.
            </summary>
            <returns>New instance of SysSchemaContentSchema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContentSchema.CloneShallow">
            <summary>
            Clones current instance of class
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContentSchema"/>
            to new instance with flag of full schema's clone.
            </summary>
            <returns>New instance of SysSchemaContentSchema.</returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSchemaContent">
            <summary>
            Provides content of different types of schemas.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContent.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContent"/> class.
            </summary>
            <param name="userConnection">The instance of the
            <see cref="T:Terrasoft.Core.UserConnection"/> class.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContent.#ctor(Terrasoft.Core.Configuration.SysSchemaContent)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContent"/> class.
            </summary>
            <param name="source">Instance of SysSchemaContent.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaContent.Code">
            <summary>
            Code of current schema's content
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaContent.ContentType">
            <summary>
            Type of current schema's content.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaContent.SysSchemaId">
            <summary>
            Schema Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaContent.SysSchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaContent.SysSchema">
            <summary>
            SysSchema lookup.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaContent.Clone">
            <summary>
            Clone this instance of
            <see cref="T:Terrasoft.Core.Configuration.SysSchemaContent"/> from current.
            </summary>
            <returns>New instance of SysSchemaContent.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserPropertySchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Creates an instance of SysSchemaUserProperty schema class.
            </summary>
            <param name="entitySchemaManager">Entity schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserPropertySchema.#ctor(Terrasoft.Core.Configuration.SysSchemaUserPropertySchema)">
            <summary>
            Creates an instance of SysSchemaUserProperty schema class.
            </summary>
            <param name="source">Source SysSchemaUserProperty schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserPropertySchema.#ctor(Terrasoft.Core.Configuration.SysSchemaUserPropertySchema,System.Boolean)">
            <summary>
            Creates an instance of SysSchemaUserProperty schema class.
            </summary>
            <param name="schema">Source SysSchemaUserProperty schema.</param>
            <param name="isShallowClone">Shallow clone.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserPropertySchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            Creates an instance of SysSchemaUserProperty class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserPropertySchema.Clone">
            <summary>
            Copies an instance of SysSchemaUserProperty schema class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserPropertySchema.CloneShallow">
            <summary>
            Copies an instance of SysSchemaUserProperty schema class.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSchemaUserProperty">
            <summary>
            SysSchemaUserProperty class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserProperty.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates an instance of SysSchemaUserProperty class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserProperty.#ctor(Terrasoft.Core.Configuration.SysSchemaUserProperty)">
            <summary>
            Creates an instance of SysSchemaUserProperty class.
            </summary>
            <param name="source">Source SysSchemaUserProperty object.</param>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaUserProperty.Name">
            <summary>
            Name of user property.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaUserProperty.Value">
            <summary>
            Value of user property.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSchemaUserProperty.SysSchemaId">
            <summary>
            User property schema identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSchemaUserProperty.Clone">
            <summary>
            Copies an instance of SysSchemaUserProperty class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSettings.SetDefValue(Terrasoft.Core.UserConnection,System.String,System.Object)">
            <summary>
            ############# ######## ######### ######### ## #########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="code">### ######### #########.</param>
            <param name="value">######## ######### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysSettings.Delete(System.Object)">
            <summary>
            Deletes entity.
            </summary>
            <param name="keyValue">The key value.</param>
            <returns>
            <c>True</c> if entity was deleted, otherwise <c>False</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSettingsRights">
            <summary>
            SysSettingsRights.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSettingsRights.SysSettingsCode">
            <summary>
            SysSettingsCode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSettingsRights.ReadOperationCode">
            <summary>
            ReadOperationCode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSettingsRights.ReadWriteOperationCode">
            <summary>
            ReadWriteOperationCode.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSSPEntitySchemaAccessList">
            <summary>
            ###### ####### ############# ####### # ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSSPEntitySchemaAccessList.EntitySchemaUId">
            <summary>
            ############# #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysStartTimerInProcess">
            <summary>
            SysStartTimerInProcess.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysStartTimerInProcess.ProcessUId">
            <summary>
            ProcessUId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysStartTimerInProcess.ExpressionType">
            <summary>
            ExpressionType.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysStartTimerInProcess.ProcessElementUId">
            <summary>
            ProcessElementUId.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysStartTimerType">
            <summary>
            SysStartTimerType.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSubProcessInProcessSchema">
            <summary>
            System sub process in process schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSubProcessInProcess">
            <summary>
            Sub processes in processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSubProcessInProcess.ProcessUId">
            <summary>
            Process uId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSubProcessInProcess.ParentProcessUId">
            <summary>
            Parent process uid.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSubProcessInProcess.SubProcessUId">
            <summary>
            Sub process uId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSubProcessInProcess.ParentSubProcessUId">
            <summary>
            Parent sub process uId.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.SysSyncMetaDataSchema">
            <summary>
            ##### ####### "SysSyncMetaData".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.SyncSchemaName">
            <summary>
            ### EntitySchema-# # ####### ######## ######## ####### </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteItemName">
            <summary>
            ### #### ######## ############# ## ######## ######### </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteId">
            <summary>
            ############# ######## ## ####### ######### </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.LocalId">
            <summary>
            ############# ######## BPMonline </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteStoreId">
            <summary>
            ############# ######## ######### # ####### ### ############### ####### </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.IsLocalDeleted">
            <summary>
            #########, ###### ## ####### ## ########## ######### # ####### ######### #############.
            #######, ############ LocalState</summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.IsRemoteDeleted">
            <summary>
            #########, ###### ## ####### ## ######## ######### # ####### ######### ############# 
            #######, ############ RemoteState</summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.ModifiedInStoreId">
            <summary>
            ############# ######### # ####### ######### ######### ######### </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.Version">
            <summary>
            ###### ########## ############ ######### ######## (#### ###########) </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.CreatedInStoreId">
            <summary>
            ############# ######### # ####### ###### ####### ############# </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.ExtraParameters">
            <summary> 
            ############## ###### # ########## ########### ############# </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.SchemaOrder">
            <summary>
            ########## ##### ########## ######### # BPMonline </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.LocalState">
            <summary>
            LocalState.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysSyncMetaData.RemoteState">
            <summary>
            RemoteState.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysUserInfo.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.IDateTimeProvider)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Configuration.SysUserInfo"/> type.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="dateTimeProvider">The date time provider.</param>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysUserInfo.GetCurrentDateTime">
            <summary>
            Returns a <see cref="T:System.DateTime"/> instance that is set to the current date and time on this computer
            which is converted to the time in a specified time zone.
            </summary>
            <returns>The date and time in the destination time zone.</returns>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysUserInfo.GetTimeZoneOffset">
            <summary>
            Returns Coordinated Universal Time (UTC) offset for current user time.
            </summary>
            <returns>UTC offset for current user time.</returns>
            <remarks>Returned offset reflects whether time falls in time zone's standard time or its daylight 
            saving time.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByOperationsSchemaUIds">
            <summary>
            The collection of administered by operations schema UIds.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByColumnsSchemaUIds">
            <summary>
            The collection of administered by columns schema UIds.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByRecordsSchemaUIds">
            <summary>
            The collection of administered by records schema UIds.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByOperationsSchemaNames">
            <summary>
            The collection of administered by operations schema names.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByColumnsSchemaNames">
            <summary>
            The collection of administered by columns schema names.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByRecordsSchemaNames">
            <summary>
            The collection of administered by records schema names.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedColumnNames">
            <summary>
            The collection of the administered schema column names.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByMasterRecordsSchemaUIds">
            <summary>
            The collection of the UIds of the schemes that are using master record rights.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.AdministratedByMasterRecordsSchemaNames">
            <summary>
            The collection of the names of the schemes that are using master record rights.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.SysWorkspace.UsedAsMasterRecordsSchemaNames">
            <summary>
            The collection of the names of the schemes which are used as master record schemes. This collection
            contains schema names that are used in the <see cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/> property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.SysWorkspace._workspaceAssemblies">
            <summary>
            The collection of the reference assemblies which loaded when application starts.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Configuration.SysWorkspace.LoadPackageAssemblies">
            <summary>
            Initialize <see cref="P:Terrasoft.Core.Configuration.SysWorkspace.WorkspaceAssemblies"/> with all available package assemblies.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysEntitySchemaInWorkspace">
            <summary>
            ###### ######## ############ (#############).
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.VwSysPackageDependencies._package">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Configuration.VwSysPackageDependencies._dependOnPackage">
            <summary>
            ####### ## ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage">
            <summary>
            ###### ##### # ###### (#############).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.SysSchemaId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.SysSchema">
            <summary>
            #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.InstallType">
            <summary>
            ### ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.IsChanged">
            <summary>
            #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.IsLocked">
            <summary>
            ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.Name">
            <summary>
            ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.NeedInstall">
            <summary>
            ####### ######### # ##.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaDataInPackage.LastError">
            <summary>
            ##### ######### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSchemaInPackage">
            <summary>
            ####### ###### (#############).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.Name">
            <summary>
            ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.Caption">
            <summary>
            #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ManagerName">
            <summary>
            ### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ParentId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ParentCaption">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.Parent">
            <summary>
            ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysWorkspaceId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysWorkspaceName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysWorkspace">
            <summary>
            ####### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackage">
            <summary>
            #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageUId">
            <summary>
            ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.SysPackageLevel">
            <summary>
            ####### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInPackage.ExtendParent">
            <summary>
            ######### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace">
            <summary>
            ####### ######## ############ (#############).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.UId">
            <summary>
            UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Name">
            <summary>
            ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Caption">
            <summary>
            #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.ManagerName">
            <summary>
            ### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.ParentId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Parent">
            <summary>
            ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.ExtendParent">
            <summary>
            ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.IsChanged">
            <summary>
            #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.IsLocked">
            <summary>
            ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysPackageId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysPackageName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysPackage">
            <summary>
            #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.PackageUId">
            <summary>
            ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysWorkspaceId">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysWorkspaceName">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.SysWorkspace">
            <summary>
            ####### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSchemaInWorkspace.Description">
            <summary>
            ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessListSchema">
            <exclude/>
        </member>
        <member name="T:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList">
            <summary>
            ###### ########, ######### ############# ####### (#############).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.EntitySchemaUId">
            <summary>
            ############# #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.WorkspaceId">
            <summary>
            ############# ######## ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.EntitySchemaCaption">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Configuration.VwSysSSPEntitySchemaAccessList.EntitySchemaName">
            <summary>
            ### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.CoreClientUnitSchemaDecorator._newLine">
            <summary>
            New line characters that are defined by environment.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.CultureUtilities">
            <summary>
            Provides methods for working with culture.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.CultureUtilities.GetCultureWithoutPriority(System.String)">
            <summary>
            Returns culture without priority.
            </summary>
            <param name="contextCulture">Culture with priority.</param>
            <returns>Culture without priority.</returns>
        </member>
        <member name="M:Terrasoft.Core.CultureUtilities.TryCreateSpecificCulture(System.String)">
            <summary>
            Tries to create a <see cref="T:System.Globalization.CultureInfo"/> that represents the specific culture that 
            is associated with the specified name.
            </summary>
            <param name="culture">Culture name.</param>
            <returns>Specific culture name.</returns>
        </member>
        <member name="M:Terrasoft.Core.CultureUtilities.GetPriorityContextCulture(System.String[],System.Globalization.CultureInfo)">
            <summary>
            Returns context culture by priority if culture exists in GeneralResourceStorage.
            </summary>
            <param name="userLanguages">Context languages.</param>
            <param name="defaultCulture">Default culture.</param>
            <returns>Context culture by priority if culture exists, otherwise default culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.CultureUtilities.SetContextCultureToGeneralStorage(System.String[],System.Globalization.CultureInfo)">
            <summary>
            Sets context culture to GeneralResourceStorage as the current culture.
            </summary>
            <param name="userLanguages">Context languages.</param>
            <param name="userCulture">Current user culture.</param>
            <returns>Context culture by priority.</returns>
        </member>
        <member name="M:Terrasoft.Core.CultureUtilities.GetUserCultureFromAuthCookie(System.Web.HttpContext)">
            <summary>
            Returns culture from authentication cookie if cookie exists.
            </summary>
            <param name="context">Http context.</param>
            <returns>Culture from authentication cookie, otherwise null.</returns>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.BooleanDataValueTypeUId">
            <summary>
            Boolean data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.ShortTextDataValueTypeUId">
            <summary>
            ShortText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.MediumTextDataValueTypeUId">
            <summary>
            MediumText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.LongTextDataValueTypeUId">
            <summary>
            LongText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.MaxSizeTextDataValueTypeUId">
            <summary>
            MaxSizeText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.TextDataValueTypeUId">
            <summary>
            Text data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.SecureTextDataValueTypeUId">
            <summary>
            SecureText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.HashTextDataValueTypeUId">
            <summary>
            HashText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.DbObjectNameDataValueTypeUId">
            <summary>
            DbObjectName data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.LocalizableStringDataValueTypeUId">
            <summary>
            Localizable string data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.IntegerDataValueTypeUId">
            <summary>
            Integer data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.FloatDataValueTypeUId">
            <summary>
            Float data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.Float1DataValueTypeUId">
            <summary>
            Float1 data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.Float2DataValueTypeUId">
            <summary>
            Float2 data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.Float3DataValueTypeUId">
            <summary>
            Float3 data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.Float4DataValueTypeUId">
            <summary>
            Float4 data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.Float8DataValueTypeUId">
            <summary>
            Float8 data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.MoneyDataValueTypeUId">
            <summary>
            Money data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.LookupDataValueTypeUId">
            <summary>
            Lookup data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.GuidDataValueTypeUId">
            <summary>
            Guid data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.DateTimeDataValueTypeUId">
            <summary>
            DateTime data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.DateDataValueTypeUId">
            <summary>
            Date data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.BinaryDataValueTypeUId">
            <summary>
            Binary data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.TimeDataValueTypeUId">
            <summary>
            Time data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.EntityCollectionDataValueTypeUId">
            <summary>
            EntityCollection data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.EntityColumnMappingCollectionDataValueTypeUId">
            <summary>
            EntityColumnMappingCollection data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.LocalizableParameterValuesListDataValueTypeUId">
            <summary>
            LocalizableParameterValuesList data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.MetaDataTextDataValueTypeUId">
            <summary>
            MetaDataText data value type Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.ObjectListDataValueTypeUId">
            <summary>Returns the object list data value type identifier.</summary>
            <value>The object list data value type identifier.</value>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.CompositeObjectListDataValueTypeUId">
            <summary>Returns the composite object list data value type identifier.</summary>
            <value>The composite object list data value type identifier.</value>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.IsLocalizableText">
            <summary>
            Indicates whether data value type is a localizable text type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DataValueType.ClientDataValueType">
            <summary>Returns the client data value type enum value for current instance.</summary>
        </member>
        <member name="M:Terrasoft.Core.DataValueType.GetIsComplexLocalizableValueType(System.Guid)">
            <summary>
            Indicates that the parameter value is of complex localizable type.
            </summary>
            <param name="dataValueTypeUId">UId of the data value type.</param>
            <returns><c>true</c>, if value is a complex localizable type, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DataValueType.GetDisplayValue(System.Object)">
            <summary>
            Returns display represantation for value.
            </summary>
            <param name="value">Value to display.</param>
        </member>
        <member name="P:Terrasoft.Core.TextDataValueType.IsLocalizableText">
            <summary>
            Indicates whether data value type is a localizable text type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DateTimeDataValueType.GetValueForLoad(Terrasoft.Core.UserConnection,System.Object)">
            <summary>
            Returns a Coordinated Universal Time (UTC) to the time in a specified time zone.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="value">Deserialized value.</param>
            <returns>Data and time in a specified time zone.</returns>
        </member>
        <member name="F:Terrasoft.Core.MaxSizeTextDataValueType.MaxsizeTextValueTypeName">
            <summary>
            The maxsize text data value type name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.HashTextDataValueType.IsLocalizableText">
            <summary>
            Indicates whether data value type is a localizable text type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SecureTextDataValueType.IsLocalizableText">
            <summary>
            Indicates whether data value type is a localizable text type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DateDataValueType.GetValueForLoad(Terrasoft.Core.UserConnection,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DateDataValueType.GetDisplayValue(System.Object)">
            <summary>
            Returns display represantation for Date value.
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.TimeDataValueType.GetValueForLoad(Terrasoft.Core.UserConnection,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.TimeDataValueType.GetDisplayValue(System.Object)">
            <summary>
            Returns display represantation for Time value.
            </summary>
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.ColorDataValueType.IsLocalizableText">
            <summary>
            Indicates whether data value type is a localizable text type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ObjectDataValueType.ClientDataValueType">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.MetaDataTextDataValueType">
            <summary>
            Type for storing text in metadata(not in resource storage).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ObjectListDataValueType.ObjectListDataValueTypeName">
            <summary>Returns the name of the object list data value type.</summary>
        </member>
        <member name="P:Terrasoft.Core.ObjectListDataValueType.ClientDataValueType">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.CompositeObjectListDataValueType.CompositeObjectListDataValueTypeName">
            <summary>Gets the name of the composite object list data value type.</summary>
        </member>
        <member name="P:Terrasoft.Core.CompositeObjectListDataValueType.ClientDataValueType">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DateTimeProvider">
            <summary>
            Provides methods to work with date and time.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DateTimeProvider.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.DateTimeProvider"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DateTimeProvider.#ctor(System.Func{System.DateTime})">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.DateTimeProvider"/> type.
            </summary>
            <param name="getUtcNow">Delegate that gets the time stamps in the Coordinated Universal Time (UTC).</param>
        </member>
        <member name="P:Terrasoft.Core.DateTimeProvider.UtcNow">
            <summary>
            Gets a <see cref="T:System.DateTime"/> instance that is set to the current date and time on this computer,
            expressed as the Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DateTimeProvider.ToDateTime(System.TimeSpan)">
            <summary>
            Returns <see cref="T:System.DateTime"/> instance that is set to the <paramref name="time"/> for today.
            </summary>
            <param name="time">Time of the day.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.ActionsConfigUtilities">
            <summary>
            ############### ##### ### ############ <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ActionsConfigUtilities.IsSetted(Terrasoft.Core.DB.ActionsConfig,Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            ######### ######### #### ############ <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
            <param name="source">######## ######## <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</param>
            <param name="actionsConfig">######## ####, ####### ########## #########.</param>
            <returns><c>true</c>, #### ######## #### ###########, ##### <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.ActionsConfigUtilities.Set(Terrasoft.Core.DB.ActionsConfig,Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            ############# ######## #### ############ <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
            <param name="source">######## ######## <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</param>
            <param name="actionsConfig">######## <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>, ####### ########## ##########.</param>
            <returns>
            ########## ##### ######## # ############# ##### ############ <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.ActionsConfigUtilities.Clear(Terrasoft.Core.DB.ActionsConfig,Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            ########## ######## #### ############ <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.
            </summary>
            <param name="source">######## ######## <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</param>
            <param name="actionsConfig">######## <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>, ####### ########## ########.</param>
            <returns>########## ##### ######## ## ########## ##### <see cref="T:Terrasoft.Core.DB.ActionsConfig"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.HintType">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.None">
            <summary>
            ######### ######## ## ######/## ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.ForceSeek">
            <summary>
            ######### ######## "############ ##### # #######".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.NoLock">
            <summary>
            ######### ######## "###### ################ ###########".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.Index">
            <summary>
            ######### ######## "############ ######".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.HintType.RowLock">
            <summary>
            ######### ######## "########## ## #######".
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.BaseHint">
            <summary>
            ####### ##### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.BaseHint.HintType">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.BaseHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### ########## ########.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.BaseHint.Clone">
            <summary>
            ####### #### ######## ##########.
            </summary>
            <returns>##### #########, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.ForceSeekHint">
            <summary>
            ##### ########## ######## "############ ##### # #######".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ForceSeekHint.HintType">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ForceSeekHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### ########## ########.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ForceSeekHint.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.ForceSeekHint"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.ForceSeekHint"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.NoLockHint">
            <summary>
            ##### ########## ######## "###### ################ ###########".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.NoLockHint.HintType">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.NoLockHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### ########## ########.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.NoLockHint.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.NoLockHint"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.NoLockHint"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.RowLockHint">
            <summary>
            ##### ########## ######## "########## ## #######".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.RowLockHint.HintType">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.RowLockHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### ########## ########.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.RowLockHint.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.RowLockHint"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.RowLockHint"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IndexHint">
            <summary>
            ##### ########## ######## "############ ######".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.IndexHint"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.#ctor(Terrasoft.Core.DB.IndexHint)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.BaseHint"/>, ########## ###### ########### ########## ########.
            </summary>
            <param name="hint">######### ###### <see cref="T:Terrasoft.Core.DB.BaseHint"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.#ctor(System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.IndexHint"/>.
            </summary>
            <param name="name">######## #######.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.IndexHint.HintType">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IndexHint.SourceAlias">
            <summary>
            ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IndexHint.IndexName">
            <summary>
            ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### ########## ########.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexHint.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.IndexHint"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.IndexHint"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.WithHints(Terrasoft.Core.DB.Delete,Terrasoft.Core.DB.BaseHint[])">
            <summary>
            ######### ######### ######## # ####### ###### ######## ######.
            </summary>
            <param name="source">###### ## ######## ######.</param>
            <param name="hints">############ ######### ########.</param>
            <returns>####### ###### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.WithHints(Terrasoft.Core.DB.Update,Terrasoft.Core.DB.BaseHint[])">
            <summary>
            ######### ######### ######## # ####### ###### ########## ######.
            </summary>
            <param name="source">###### ########## ######.</param>
            <param name="hints">############ ######### ########.</param>
            <returns>###### ########## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.SpecifyNoLockHints(Terrasoft.Core.DB.Select,System.Boolean)">
            <summary>
            ######### ######### ######## <see cref="F:Terrasoft.Core.DB.HintType.NoLock"/> # ####### ######.
            </summary>
            <param name="source">###### ## #######.</param>
            <param name="useHint">#######, ############, ######### ## ######### ######## ### ########## #######.
            ############## ########, ## ######### - <c>true</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.SpecifyNoLockHints(Terrasoft.Core.DB.UpdateSelect,System.Boolean)">
            <summary>
            Adds hint <see cref="F:Terrasoft.Core.DB.HintType.NoLock"/> for tables in source query.
            </summary>
            <param name="source">Source query.</param>
            <param name="useHint">Sign for apply table hint when execute.
            Optional parameter. <c>true</c> by default.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.HintsHelper.SpecifyNoLockHints(Terrasoft.Core.DB.UpdateSelect)">
            <summary>
            Adds hint <see cref="F:Terrasoft.Core.DB.HintType.NoLock"/> for tables in source query.
            </summary>
            <param name="source">Source query.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.Hints">
            <summary>
            ##### ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Hints.ForceSeek">
            <summary>
            ######### ######## "############ ##### # #######".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Hints.NoLock">
            <summary>
            ######### ######## "###### ################ ###########".
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Hints.RowLock">
            <summary>
            ######### ######## "########## ## #######".
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Hints.Index(System.String)">
            <summary>
            ####### ###### ########## ######## "############ ######".
            </summary>
            <param name="name">### #######.</param>
            <returns>######### ######## "############ ######".</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.BaseInsert.SetParameterValue(System.String,System.Object)">
            <summary>
            Sets insert query parameter value.
            </summary>
            <param name="name">Parameter name.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.BufferingDataReader">
            <summary>
            A data reader that allows data to be buffered.
            </summary>
            <seealso cref="T:System.Data.IDataReader" />
            <seealso cref="T:Terrasoft.Core.DB.IBufferingDataReader" />
        </member>
        <member name="P:Terrasoft.Core.DB.BufferingDataReader.IsClosed">
            <summary>Gets a value indicating whether the data reader is closed.</summary>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.BufferingDataReader.RecordsAffected">
            <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary>
            <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement
            failed;
            and -1 for SELECT statements.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.BufferingDataReader.FieldCount">
            <summary>Gets the number of columns in the current row.</summary>
            <returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current
            record.
            The default is -1.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.BufferingDataReader.System#Data#IDataRecord#Item(System.Int32)">
            <summary>Gets the column located at the specified index.</summary>
            <returns>The column located at the specified index as an <see cref="T:System.Object" />.</returns>
            <param name="i">The zero-based index of the column to get. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="P:Terrasoft.Core.DB.BufferingDataReader.System#Data#IDataRecord#Item(System.String)">
            <summary>Gets the column with the specified name.</summary>
            <returns>The column with the specified name as an <see cref="T:System.Object" />.</returns>
            <param name="name">The name of the column to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.DB.BufferingDataReader.Depth">
            <summary>Gets a value indicating the depth of nesting for the current row.</summary>
            <returns>The level of nesting.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetName(System.Int32)">
            <summary>Gets the name for the field to find.</summary>
            <returns>The name of the field or the empty string (""), if there is no value to return.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetDataTypeName(System.Int32)">
            <summary>Gets the data type information for the specified field.</summary>
            <returns>The data type information for the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetFieldType(System.Int32)">
            <summary>Gets the <see cref="T:System.Type" /> information corresponding to the type of
            <see cref="T:System.Object" /> that would be returned from
            <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
            <returns>The <see cref="T:System.Type" /> information corresponding to the type of
            <see cref="T:System.Object" /> that would be returned from
            <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetValue(System.Int32)">
            <summary>Return the value of the specified field.</summary>
            <returns>The <see cref="T:System.Object" /> which will contain the field value upon return.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetValues(System.Object[])">
            <summary>Populates an array of objects with the column values of the current record.</summary>
            <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
            <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into. </param>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetOrdinal(System.String)">
            <summary>Return the index of the named field.</summary>
            <returns>The index of the named field.</returns>
            <param name="name">The name of the field to find. </param>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetBoolean(System.Int32)">
            <summary>Gets the value of the specified column as a Boolean.</summary>
            <returns>The value of the column.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetByte(System.Int32)">
            <summary>Gets the 8-bit unsigned integer value of the specified column.</summary>
            <returns>The 8-bit unsigned integer value of the specified column.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at
            the given buffer offset.</summary>
            <returns>The actual number of bytes read.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <param name="fieldOffset">The index within the field from which to start the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation. </param>
            <param name="length">The number of bytes to read. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetChar(System.Int32)">
            <summary>Gets the character value of the specified column.</summary>
            <returns>The character value of the specified column.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Reads a stream of characters from the specified column offset into the buffer as an array,
            starting at the given buffer offset.</summary>
            <returns>The actual number of characters read.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <param name="fieldoffset">The index within the row from which to start the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation. </param>
            <param name="length">The number of bytes to read. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetGuid(System.Int32)">
            <summary>Returns the GUID value of the specified field.</summary>
            <returns>The GUID value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetInt16(System.Int32)">
            <summary>Gets the 16-bit signed integer value of the specified field.</summary>
            <returns>The 16-bit signed integer value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetInt32(System.Int32)">
            <summary>Gets the 32-bit signed integer value of the specified field.</summary>
            <returns>The 32-bit signed integer value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetInt64(System.Int32)">
            <summary>Gets the 64-bit signed integer value of the specified field.</summary>
            <returns>The 64-bit signed integer value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetFloat(System.Int32)">
            <summary>Gets the single-precision floating point number of the specified field.</summary>
            <returns>The single-precision floating point number of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetDouble(System.Int32)">
            <summary>Gets the double-precision floating point number of the specified field.</summary>
            <returns>The double-precision floating point number of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetString(System.Int32)">
            <summary>Gets the string value of the specified field.</summary>
            <returns>The string value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetDecimal(System.Int32)">
            <summary>Gets the fixed-position numeric value of the specified field.</summary>
            <returns>The fixed-position numeric value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetDateTime(System.Int32)">
            <summary>Gets the date and time data value of the specified field.</summary>
            <returns>The date and time data value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetData(System.Int32)">
            <summary>Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</summary>
            <returns>The <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.GetSchemaTable">
            <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the
            <see cref="T:System.Data.IDataReader" />.</summary>
            <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader" /> is
            closed.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.IsDBNull(System.Int32)">
            <summary>Return whether the specified field is set to null.</summary>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.Close">
            <summary>Closes the <see cref="T:System.Data.IDataReader" /> Object.</summary>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.NextResult">
            <summary>Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.Read">
            <summary>Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.BufferingDataReader.LoadToBuffer">
            <summary>
            Loading all data from current <see cref="T:System.Data.IDataReader" /> to buffer,
            disposing it and creating new DataReader instead.
            For example, allows to release a db-connection to be able to open next DBDataReader
            when MARS is not allowed.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.CachedQuery">
            <summary>
            Used to cache query sql text.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery.#ctor(Terrasoft.Core.DB.IParametrizedQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.CachedQuery"/>.
            </summary>
            <param name="query">Instance of the <see cref="T:Terrasoft.Core.DB.IParametrizedQuery"/> to initialize with.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery.#ctor(System.String,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.CachedQuery"/>.
            </summary>
            <param name="sqlText">Sql query string to initialize with.</param>
            <param name="parameters">Instance of <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/> to initialize with.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery.ExecuteReader(Terrasoft.Core.DB.DBExecutor,Terrasoft.Core.DB.QueryParameterCollection,System.Action{System.Data.IDataReader})">
            <summary>
            Executes the query and calls <paramref name="readAction"/> for each row.
            </summary>
            <param name="dbExecutor">The database executor.</param>
            <param name="parameters">The query parameters.</param>
            <param name="readAction">The read action.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery.Execute(Terrasoft.Core.DB.DBExecutor,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Executes the query.
            </summary>
            <param name="dbExecutor">The database executor.</param>
            <param name="parameters">The query parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery.ExecuteScalar``1(Terrasoft.Core.DB.DBExecutor,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Executes the query and returns single result.
            </summary>
            <typeparam name="T">Type of the value to return.</typeparam>
            <param name="dbExecutor">The database executor.</param>
            <param name="parameters">The query parameters.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.CachedQuery`1">
            <inheritdoc />
            <summary>
            Generic version of the <see cref="T:Terrasoft.Core.DB.CachedQuery"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery`1.#ctor(Terrasoft.Core.DB.IParametrizedQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.CachedQuery`1"/>.
            </summary>
            <param name="query">Instance of the <see cref="T:Terrasoft.Core.DB.IParametrizedQuery"/> to initialize with.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery`1.Execute(Terrasoft.Core.DB.DBExecutor,`0)">
            <summary>
            Executes the query.
            </summary>
            <param name="dbExecutor">The database executor.</param>
            <param name="parameterValues">The query parameter values.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQuery`1.ExecuteScalar``1(Terrasoft.Core.DB.DBExecutor,`0)">
            <summary>
            Executes the query and returns single result.
            </summary>
            <typeparam name="TResult">Type of the value to return.</typeparam>
            <param name="dbExecutor">The database executor.</param>
            <param name="parameterValues">The query parameter values.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.CachedQueryExtensionMethods">
            <summary>
            Provides extension methods for work with <see cref="T:Terrasoft.Core.DB.CachedQuery"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQueryExtensionMethods.AsCached(Terrasoft.Core.DB.IParametrizedQuery)">
            <summary>
            Creates <see cref="T:Terrasoft.Core.DB.CachedQuery"/> from <paramref name="source"/> parametrized query.
            </summary>
            <param name="source">The source query.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CachedQueryExtensionMethods.AsCached``1(Terrasoft.Core.DB.IParametrizedQuery)">
            <summary>
            Creates typed <see cref="T:Terrasoft.Core.DB.CachedQuery"/> from <paramref name="source"/> parametrized query.
            </summary>
            <typeparam name="T">Parameters DTO type.</typeparam>
            <param name="source">The source query.</param>
            <returns>Initialized instance of <see cref="T:Terrasoft.Core.DB.CachedQuery`1"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Column">
            <summary>
            ############# ######### ###### ### ###### # ########### ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SourceColumn(System.String)">
            <summary>
            ########## ######### ### ####### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### ####### #######.</param>
            <returns>######### ####### ####### # ########### <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SourceColumn(System.String,System.String)">
            <summary>
            ########## ######### ### ####### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### ####### #######.</param>
            <param name="sourceColumnAlias">######### #########.</param>
            <returns>######### ### ####### ####### # ########### <paramref name="sourceAlias"/> ## ######### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Asterisk">
            <summary>
            ########## ######### #### [### #######].
            </summary>
            <returns>######### #### [### #######].</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Asterisk(System.String)">
            <summary>
            ########## ######### #### [### #######] ### ######### # ######## ###########.
            </summary>
            <param name="sourceAlias">######### ######### ######.</param>
            <returns>######### #### [### #######] ### ###### # ########### <paramref name="sourceAlias"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Const(System.Object)">
            <summary>
            ########## ######### #### [#########] ### ########### ########.
            </summary>
            <param name="value">########, ### ######## ######### #########.</param>
            <returns>######### #### [#########] ### ######## <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object)">
            <summary>
            ########## ######### #### [########] # ######## #########.
            </summary>
            <param name="value">######## #########.</param>
            <returns>######### #### [########] ## ######### <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object,System.String,Terrasoft.Common.ParameterDirection)">
            <summary>
            ########## ######### #### [########] # ######### #########, ###### # ############ ######## #########.
            </summary>
            <param name="value">######## #########.</param>
            <param name="name">### #########.</param>
            <param name="direction">########### ######## #########.</param>
            <returns>######### #### [########] # ###### <paramref name="name"/>, ######### 
            <paramref name="value"/> # ############ ######## <paramref name="direction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.IO.Stream)">
            <summary>
            ########## ######### #### [########] # ######## #########.
            </summary>
            <param name="streamValue">######## #########.</param>
            <returns>######### #### [########] ## ######### <paramref name="streamValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ########## ######### #### [########] # ######## ######### ######### #### ######.
            </summary>
            <param name="value">######## #########.</param>
            <param name="parameterType">### ###### ######## #########.</param>
            <returns>######### #### [########] ## ######### <paramref name="value"/> #### ###### 
            <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameter(System.Object,System.String)">
            <summary>
            ########## ######### #### [########] # ######## ######### #### ###### # ######### ######.
            </summary>
            <param name="value">######## #########.</param>
            <param name="parameterTypeName">### #### ###### ######## #########.</param>
            <returns>######### #### [########] ## ######### <paramref name="value"/>, ####### ##### ### ###### # ###### 
            <paramref name="parameterTypeName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameters``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            ########## ######### #### [########] ## ########## ## ######### #############.
            </summary>
            <typeparam name="T">##### ###.</typeparam>
            <param name="values">############# ######## ##########.</param>
            <returns>######### #### [########] ## ########## ## ############# <paramref name="values"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.Parameters(System.Object[])">
            <summary>
            ########## ######### #### [########] ## ########## ## ########### #######.
            </summary>
            <param name="values">###### ######## ##########.</param>
            <returns>######### #### [########] ## ########## ## ####### <paramref name="values"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SubSelect(Terrasoft.Core.DB.Select)">
            <summary>
            ########## ######### #### [#########] ### ########### ########## ## #######.
            </summary>
            <param name="select">######### ## #######.</param>
            <returns>######### #### [#########] ### ########## ## ####### <paramref name="select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SubSelect(Terrasoft.Core.DB.Query)">
            <summary>
            ########## ######### #### [#########] ### ########### ############# ##########.
            </summary>
            <param name="selectQuery">############ #########.</param>
            <returns>######### #### [#########] ### ############# ########## <paramref name="selectQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Column.SqlText(System.String)">
            <summary>
            ########## ######### #### [Sql-#####] ### ######### ######.
            </summary>
            <param name="value">#####.</param>
            <returns>######### #### [Sql-#####] ### ###### <paramref name="value"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IDataIsolationHelper">
            <summary>
            Provides utility methods to apply CRUD restrictions for Data Isolation mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IDataIsolationHelper.CreateRootSchemaIsolationCondition(Terrasoft.Core.UserConnection,System.String,System.String,System.String)">
            <summary>
            Creates the root entity schema isolation condition for applying to any <see cref="T:Terrasoft.Core.DB.Query" /> instance.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="rootSchemaName">Name of the root entity schema.</param>
            <param name="rootSchemaSourceAlias">The root schema source alias.</param>
            <param name="primaryColumnName">Name of the primary column.</param>
            <returns>
            <see cref="T:Terrasoft.Core.DB.QueryCondition" /> instance if root entity schema entities need to be restricted; otherwise,
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDataIsolationHelper.RegisterNonIsolatedRecord(Terrasoft.Core.UserConnection,System.String,System.Guid)">
            <summary>
            Registers the non isolated record.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaName">Name of the schema.</param>
            <param name="recordId">The record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IDataIsolationHelper.RegisterIsolatedSchemaRecord(Terrasoft.Core.UserConnection,System.String,System.Guid)">
            <summary>
            Registers the record created in isolated schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaName">Name of the schema.</param>
            <param name="recordId">The record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IDataIsolationHelper.ClearIsolatedEntitiesCache(Terrasoft.Core.UserConnection)">
            <summary>
            Clears the isolated entities cache.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.DataIsolationHelper">
            <summary>
            Provides utility methods to apply CRUD restrictions for Data Isolation mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DataIsolationHelper.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.DataIsolationHelper" /> class.
            </summary>
            <param name="permittedToReadEntitySchemas">The permitted to read entity schema list.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataIsolationHelper.LoadIsolatedEntityNames(Terrasoft.Core.UserConnection)">
            <summary>
            Gets the isolated entity schemas from sections and details.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Array of entity names restricted to read under isolated mode.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DataIsolationHelper.CreateRootSchemaIsolationCondition(Terrasoft.Core.UserConnection,System.String,System.String,System.String)">
            <summary>
            Creates the root entity schema isolation condition for applying to any <see cref="T:Terrasoft.Core.DB.Query" /> instance.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="rootSchemaName">Name of the root entity schema.</param>
            <param name="rootSchemaSourceAlias">The root schema source alias.</param>
            <param name="primaryColumnName">Name of the primary column.</param>
            <returns>
            <see cref="T:Terrasoft.Core.DB.QueryCondition" /> instance if root entity schema entities need to be isolated; otherwise,
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DataIsolationHelper.RegisterNonIsolatedRecord(Terrasoft.Core.UserConnection,System.String,System.Guid)">
            <summary>
            Registers the non isolated record.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaName">Name of the schema.</param>
            <param name="recordId">The record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataIsolationHelper.RegisterIsolatedSchemaRecord(Terrasoft.Core.UserConnection,System.String,System.Guid)">
            <summary>
            Registers the record created in isolated schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaName">Name of the schema.</param>
            <param name="recordId">The record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataIsolationHelper.ClearIsolatedEntitiesCache(Terrasoft.Core.UserConnection)">
            <summary>
            Clears the isolated entities cache.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.DBEngine">
            <summary>
            Provides methods for queries building.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.AllowsMars">
            <summary>
            Represents whether the database allows multiple active result sets.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsClusteredIndexAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsConstraintClusteredAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsCharLengthSemanticsAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IndexNameAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.ColumnNameAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsUniqueIndexAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.ConstraintNameAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsDescendingIndexAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.ParentColumnNameAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.ReferencedTableNameAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsCascadeKeyAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.DataDefaultValueAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.IsNullableColumnAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.DataTypeAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.CharactersMaximumLengthAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.NumericPrecisionAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.NumericScaleAlias">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DB.DBEngine.ConstraintTypeAlias">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildOrderByItemsSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Select)">
            <summary>
            Adds items for sorting from <paramref name="select"/> to <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="select">Select.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildOffsetFetchSqlText(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Adds offset-fetch clause to <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="offset">Offset value. Number of rows to skip.</param>
            <param name="fetch">Number of rows to select.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.AddAdditionalSqlInfo(System.Text.StringBuilder)">
            <summary>
            Adds an additional information about sql query.
            </summary>
            <param name="sb">
            The instance of the <see cref="T:System.Text.StringBuilder"/> class, which helps to generate sql query.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.AppendLikeKeyword(System.Text.StringBuilder)">
            <summary>
            Appends <c>LIKE</c> SQL keyword.
            </summary>
            <param name="sb">Instance of <see cref="T:System.Text.StringBuilder"/> to append keyword to.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.InternalBuildDropSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for dropping sequence from DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for SQL text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.NeedCastOrderedTextColumn(Terrasoft.Core.DataValueType)">
            <summary>
            Verifies whether cast an ordered column.
            </summary>
            <param name="orderedColumnDataValueType">Ordered column data value type.</param>
            <returns>Returns <b>true</b> if the specified ordered column needs a cast,
            otherwise returns <b>false</b>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildNextValueSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for getting next value for sequence. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for SQL text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildCurrentValueSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for getting current value for sequence. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for SQL text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildReCreateSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for recreating sequence in DB.
            </summary>
            <param name="sb">Builder for SQL text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildExistSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for checking existence sequence in DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for SQL text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildDropSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for dropping sequence from DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for SQL text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetColumnsQuerySqlText(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetIndexesQuerySqlText">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetPrimaryKeyQuerySqlText">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetForeignKeysQuerySqlText">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetColumnDefValue(Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Returns SQL text for default value of a column.
            </summary>
            <param name="entitySchemaColumn">Column.</param>
            <returns>SQL text for default value of a column.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetColumnDefValue(Terrasoft.Core.Entities.EntitySchemaColumn,System.Boolean)">
            <summary>
            Returns SQL text for default value of a column.
            </summary>
            <param name="entitySchemaColumn">Column.</param>
            <param name="isWrapped">Flag that indicates whether value in text is wrapped in parentheses.</param>
            <returns>SQL text for default value of a column.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetColumnDefValue(Terrasoft.Core.Entities.EntitySchemaColumn,System.String)">
            <summary>
            Returns SQL text for default value of a column.
            </summary>
            <param name="entitySchemaColumn">Column.</param>
            <param name="dbDefValue">Default value format on database level.</param>
            <returns>SQL text for default value of a column.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetSysSchemaParentsInPackageHierarchySelectSqlText(System.Boolean)">
            <summary>
            Returns SQL text to get schema parents in package hierarchy.
            </summary>
            <param name="usePackageHierarchy">Indicates whether to use package hierarchy or not.</param>
            <returns>SQL text to get schema parents in package hierarchy.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildCreateSequenceQuerySqlText(System.Text.StringBuilder,Terrasoft.Core.DB.Sequence)">
            <summary>
            Builds SQL text for droping sequence from DB. <paramref name="sb"/>.
            </summary>
            <param name="sb">Builder for sql text string.</param>
            <param name="sequence">Sequence object.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildQueryFunctionSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.CustomQueryFunction)">
            <summary>
            Builds the query function SQL text.
            </summary>
            <param name="sb">String builder.</param>
            <param name="customQueryFunction">Custom query function.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.GetQuerySqlText(Terrasoft.Core.DB.Sequence,System.Action{System.Text.StringBuilder,Terrasoft.Core.DB.Sequence})">
            <summary>
            Returns SQL text depending on build sequence action.
            </summary>
            <param name="sequence">Sequence object.</param>
            <param name="buildSequenceFunc">Sequence action in DBEngine. </param>
            <returns>SQL text for sequence query.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildForceSeekHintSqlText(System.Text.StringBuilder)">
            <summary>
            Builds ForceSeek table hint SQL text.
            </summary>
            <param name="sb">Builder for sql text string.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.BuildRowLockHintSqlText(System.Text.StringBuilder)">
            <summary>
            Builds RowLock table hint SQL text.
            </summary>
            <param name="sb"><see cref="T:System.Text.StringBuilder"/> instance that forms the query text.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBEngine.CreateExplicitCastExpression(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            Builds explicit cast expression SQL text.
            </summary>
            <param name="queryColumnExpression"><see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> Query column expression to cast.
            </param>
            <param name="valueType"><see cref="T:Terrasoft.Core.DBDataValueType"/> Data value type to cast.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.DBExecutorFactory">
            <summary>
            Creates instances of <see cref="T:Terrasoft.Core.DB.DBExecutor"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DBExecutor">
            <summary>
            Database query executor. 
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="T:Terrasoft.Core.DB.DBExecutor.TransactionErrorEventArgs">
            <summary>
            Provides data for the transaction error event.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.TransactionErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.DBExecutor.TransactionErrorEventArgs"/> class.
            </summary>
            <param name="exception">The transaction exception.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.DBExecutor.TransactionErrorEventArgs.Exception">
            <summary>
            Transaction exception.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DBExecutor.SqlLogQueryTimeElapsedThreshold">
            <summary>
            Gets or sets sql log query time elapsed threshold.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DBExecutor.SqlLogRowsThreshold">
            <summary>
            Gets or sets sql log rows threshold.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DBExecutor.ServerVersion">
            <summary>
            Server version.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Terrasoft.Core.DB.DBExecutor"/>
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c>
            to release only unmanaged resources.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.GetDataReader(System.Data.IDataReader,System.Data.Common.DbCommand)">
            <summary>
            Wraps data reader into logging proxy if logging is enabled.
            </summary>
            <param name="dataReader">The data reader.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.StartTransaction">
            <summary>
            Starts a database transaction.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.StartTransaction(System.Data.IsolationLevel)">
            <summary>
            Starts a database transaction with the specified isolation level.
            </summary>
            <param name="isolationLevel">The transaction isolation level.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.CommitTransaction">
            <summary>
            Commits the database transaction.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.RollbackTransaction">
            <summary>
            Rolls back a transaction from a pending state.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteReader(System.String,Terrasoft.Core.DB.QueryParameterCollection,System.Data.CommandBehavior,System.Threading.CancellationToken)">
            <summary>
            Sends SQL command text and its parameters to the connection, and builds a DataReader 
            using one of the CommandBehavior values.
            Command execution can be cancelled with the token.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="queryParameters">Query parameters that will be converted into 
            <see cref="T:System.Data.Common.DbParameterCollection"/>.</param>
            <param name="behavior">Provides a description of the results of the query 
            and its effect on the database.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteReader(System.String)">
            <summary>
            Sends SQL command text to the connection, and builds a DataReader.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteReader(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends SQL command text to the connection, and builds a DataReader.
            Command execution can be cancelled with the token.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteReader(System.String,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Sends SQL command text and its parameters to the connection, and builds a DataReader.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="queryParameters">Query parameters that will be converted into 
            <see cref="T:System.Data.Common.DbParameterCollection"/></param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteReader(System.String,Terrasoft.Core.DB.QueryParameterCollection,System.Threading.CancellationToken)">
            <summary>
            Sends SQL command text and its parameters to the connection, and builds a DataReader.
            Command execution can be cancelled with the token.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="queryParameters">Query parameters that will be converted into 
            <see cref="T:System.Data.Common.DbParameterCollection"/></param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteReader(System.String,Terrasoft.Core.DB.QueryParameterCollection,System.Data.CommandBehavior)">
            <summary>
            Sends SQL command text and its parameters to the connection, and builds a DataReader 
            using one of the CommandBehavior values.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="queryParameters">Query parameters that will be converted into 
            <see cref="T:System.Data.Common.DbParameterCollection"/></param>
            <param name="behavior">Provides a description of the results of the query 
            and its effect on the database.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteScalar``1(System.String,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Executes a SQL statement with parameters, and returns the first column of the first row 
            in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="queryParameters">Query parameters that will be converted into 
            <see cref="T:System.Data.Common.DbParameterCollection"/>.</param>
            <returns>Scalar value of the given result type.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.ExecuteScalar``1(System.String)">
            <summary>
            Executes a SQL statement and returns the first column of the first row in the result set 
            returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <returns>Scalar value of the given result type.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.Execute(System.String,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Executes a SQL statement with parameters, if any, against a connection object.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <param name="queryParameters">Query parameters that will be converted into 
            <see cref="T:System.Data.Common.DbParameterCollection"/></param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBExecutor.Execute(System.String)">
            <summary>
            Executes a SQL statement against a connection object.
            </summary>
            <param name="sqlText">SQL command text.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.ActionsConfig">
            <summary>
            ####### ############ ######## ########## ######### #### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaAction.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            ######### ######## ## ########## ######### #### ######.
            </summary>
            <param name="actionsConfig">######### ########## ######### #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaActionCollection.Execute">
            <summary>
            Execute all actions to update the database structure.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaActionCollection.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            Execute all actions to update the database structure.
            </summary>
            <param name="actionsConfig">Database structure update settings.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.GroupAction.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            ######### ###### ######## ## ########## ######### #### ######.
            </summary>
            <param name="actionsConfig">######### ########## ######### #### ######.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ###### ## ######## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.ValidateAction.Execute(Terrasoft.Core.DB.ActionsConfig)">
            <summary>
            ######### ######## ## ########## ######### #### ######.
            </summary>
            <param name="actionsConfig">######### ########## ######### #### ######.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.SchemaDBActionMessageEventArgs">
            <summary>
            Provides message about action for entity schema structure changing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SchemaDBActionMessageEventArgs.#ctor(System.String,System.String)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.DB.SchemaDBActionMessageEventArgs"/>.
            </summary>
            <param name="schemaName">Schema name.</param>
            <param name="message">Message.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.SchemaDBActionMessageEventArgs.SchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.SchemaDBActionMessageEventArgs.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.GetIsDBLevelRequirementTypeColumn(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Determines if column value is required on database level.
            </summary>
            <param name="entitySchema">Schema.</param>
            <param name="entitySchemaColumn">Column in schema.</param>
            <returns>Value that indicates whether column value is required on database level.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.GetIsDefValueTypeColumn(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Determines if column is of type that requires default value.
            </summary>
            <param name="entitySchema">Schema.</param>
            <param name="entitySchemaColumn">Column in schema.</param>
            <returns>Value that indicates whether column is of type that requires default value.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.GetForeignKeysDataReader(Terrasoft.Core.DB.DBExecutor,System.String)">
            <summary>
            Returns foreign keys data reader.
            </summary>
            <param name="dbExecutor">Instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/>. Provides DB query execution.</param>
            <param name="entitySchemaName">Schema name to get foreign keys for.</param>
            <returns><see cref="T:System.Data.IDataReader"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.GetIsForeignKeyCascade(System.Data.IDataReader)">
            <summary>
            Determines whether foreign key is cascade.
            </summary>
            <param name="dataReader">>Instance of <see cref="T:Terrasoft.Core.DataReader"/> to read property.</param>
            <returns><c>true</c> if foreign key is cascade. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.GetIsIndexUnique(System.Data.IDataReader)">
            <summary>
            Determines whether index is unique.
            </summary>
            <param name="dataReader">>Instance of <see cref="T:Terrasoft.Core.DataReader"/> to read property.</param>
            <returns><c>true</c> if index is unique. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.AddEntitySchemaBaseStructureSavingActions(Terrasoft.Core.DB.DBMetaActionCollection,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Adds saving actions for schema structure.
            </summary>
            <param name="actions">Actions.</param>
            <param name="entitySchema">Schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.GetDBRowsCount(System.String)">
            <summary>
            Returns number of rows in table.
            </summary>
            <param name="entitySchemaName">Table name.</param>
            <returns>Numbers of rows.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBMetaScript.ApplyTypesCastOptions">
            <summary>
            Applies the db cast options.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryJoinRightLevel">
            <summary>####### ######### #### ### ############# ######### ######, 
            #### ##### ################ ## #######.</summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryJoinRightLevel.EnabledAlways">
            <summary>######</summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryJoinRightLevel.EnabledForAdditionalColumns">
            <summary>########### ###### #### ## ######### ##### # ####### ############ ####### ######## ######### 
            (PrimaryColumn) # ######### ### ###########</summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryJoinRightLevel.Disabled">
            <summary>####### ## ###########</summary>
        </member>
        <member name="P:Terrasoft.Core.DB.RecordsByRightOptions.ChangedToMasterRecordOptions">
            <summary>
            The flag that indicates whether the options were changed to the master record options.
            Will be set to <c>true</c> after child record options were changed to master record options.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.RecordsByRightOptions.QueryColumnNames">
            <summary>
            Query column names collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DBSecurityEngine.DataIsolationHelper">
            <summary>
            Gets or sets the data isolation helper.
            </summary>
            <value>
            The data isolation helper.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DB.DBSecurityEngine.IsReadOnlyMode">
            <summary>
            Indicates whether read only mode is enabled.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.IsIgnoreSelectAdministratedByRecordsRights(Terrasoft.Core.DB.RecordsByRightOptions)">
            <summary>
            Checks whether administration by records needs to be ignored.
            </summary>
            <param name="options">Query parameters including schema name and query column collection.</param>
            <returns><see cref = "T:System.Boolean"/> value that indicates whether administration by records needs to be ignored.
            </returns>
            <remarks>Significant columns of the entities that are administered by master records are always 
            considered as requested.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.SetMasterRecordOptions(Terrasoft.Core.DB.RecordsByRightOptions)">
            <summary>
            Changes <paramref name="options"/> for entities that are administered by master records
            to master record properties.
            When <paramref name="options.EntitySchemaName.EntitySchemaName"/> is administered by master record rights the next 
            options are changed:
            - <paramref name="options.EntitySchemaName.EntitySchemaName"/> to master record entity schema name.
            - <paramref name="options.RightEntitySchemaName.RightEntitySchemaName"/> to the schema name from rights table of the master 
            record schema.
            - <paramref name="options.PrimaryColumnName.PrimaryColumnName"/> to master record column value name.
            - <paramref name="options.ChangedToMasterRecordOptions.ChangedToMasterRecordOptions"/> will be set to <c>true</c>.
            </summary>
            <param name="options"><see cref="T:Terrasoft.Core.DB.RecordsByRightOptions"/> instance.</param>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetMasterRecordSchemaName(System.String)">
            <summary>
            Returns master record entity schema name for <paramref name="schemaName"/>.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns>Master record entity schema name for <paramref name="schemaName"/>
            if curent schema use administrated by master, otherwise current entity schema name.</returns>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetMasterRecordSchemaName(System.Guid)">
            <summary>
            Get master schema name by child schema UId.
            </summary>
            <param name="childSchemaUId">Schema name.</param>
            <returns>Master record entity schema name for <paramref name="childSchemaUId"/>
            if curent schema use administrated by master, otherwise current entity schema name.</returns>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetMasterRecordId(System.String,System.Guid,System.String)">
            <summary>
            Returns <see cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/> value for <paramref name="schemaName"/> instance.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <param name="recordId"><see cref="T:Terrasoft.Core.Entities.Entity"/> instance unique identifier.</param>
            <param name="masterSchemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><see cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/> value for <paramref name="schemaName"/>
            instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetEntitySchemaRecordRightLevelWithoutDenyRecordRights(System.String,System.Guid)">
            <summary>
            Returns <paramref name="schemaName"/> record right level for current user.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <param name="recordId"><see cref="T:Terrasoft.Core.Entities.Entity"/> instance unique identifier.</param>
            <returns><paramref name="schemaName"/> record right level for current user.</returns>
            <remarks>If <paramref name="schemaName"/> is administrated by master record rights,
            then returns master record rights. Master record unique identifier is set to 
            <see cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/> property value.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetIsEntitySchemaAdministratedByRecordsInternal(System.String)">
            <summary>
            Checks whether <paramref name="schemaName"/> is administrated by records or 
            <paramref name="schemaName"/> is administrated by master record.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><c>True</c> if <paramref name="schemaName"/> is administered by records or 
            <paramref name="schemaName"/> is administered by master record. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetIsEntitySchemaAdministratedByRecordsInternal(System.Guid)">
            <summary>
            Checks whether <paramref name="schemaUId"/> is administrated by records or 
            <paramref name="schemaUId"/> is administrated by master record.
            </summary>
            <param name="schemaUId"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> unique identifier.</param>
            <returns><c>True</c> if <paramref name="schemaUId"/> is administered by records or 
            <paramref name="schemaUId"/> is administered by master record. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetRecordDefRightsInsert(System.Guid,System.Guid,System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Returns <see cref="T:Terrasoft.Core.DB.InsertSelect"/> for record default rights.
            </summary>
            <param name="userId">User identifier.</param>
            <param name="contactId">Contact identifier.</param>
            <param name="schemaUId">Schema unique identifier value.</param>
            <param name="recordId">Record identifier.</param>
            <param name="ownerId">Owner identifier.</param>
            <param name="isNewRecord">Signs that record is new.</param>
            <returns><see cref="T:Terrasoft.Core.DB.InsertSelect"/> for record default rights.</returns>
            <remarks>Schemes that are not administered by records and schemes that are using
            master record rights will be skipped.</remarks>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetRecordDefRightsInsert(System.Guid,System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Returns <see cref="T:Terrasoft.Core.DB.InsertSelect"/> for record default rights.
            </summary>
            <param name="userId">User identifier.</param>
            <param name="schemaUId">Schema unique identifier value.</param>
            <param name="recordId">Record identifier.</param>
            <param name="ownerId">Owner identifier.</param>
            <param name="isNewRecord">Signs that record is new.</param>
            <returns><see cref="T:Terrasoft.Core.DB.InsertSelect"/> for record default rights.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetRecordsByRightCondition(Terrasoft.Core.DB.RecordsByRightOptions)">
            <summary>
            Returns administration rights condition.
            </summary>
            <param name="options">Query parameters including database operation and current user identifier.</param>
            <returns><see cref="T:Terrasoft.Core.DB.QueryCondition"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.AddDefRights(System.Guid,System.Guid,System.Guid,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Adds default rights.
            </summary>
            <param name="primaryColumnValue">Record identifier.</param>
            <param name="userId">User identifier.</param>
            <param name="contactId">Contact identifier.</param>
            <param name="schema"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.AddDefRights(System.Guid,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Adds default rights.
            </summary>
            <param name="primaryColumnValue">Record identifier.</param>
            <param name="schema"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetRecordRightsSchema(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Creates record rights <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> for <paramref name="schema"/>.
            Schemes that are not administered by records and schemes that are using 
            master record rights will be skipped.
            </summary>
            <param name="schema"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> instance.</param>
            <returns>Record rights of <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> if <paramref name="schema"/>
            is administrated by records. Otherwise returns <c>null</c>.</returns>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.SetEntitySchemaAdministratedByMasterRecords(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Sets is <paramref name="schema"/> administrates using master record rights.
            </summary>
            <param name="schema"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> instance.</param>
            <param name="masterColumn">Master record lookup column.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetIsEntitySchemaRecordDeletingAllowed(Terrasoft.Core.Entities.EntitySchema,System.Guid)">
            <summary>
            ########## ####### #### # ######## ############ ### ######## ###### ## ########## #######.
            </summary>
            <param name="schema">######### ##### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>.</param>
            <param name="recordId">############# ######.</param>
            <returns>########## <c>true</c>, #### # ############ #### ##### ## ######## ######.
            ##### <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.SetEntitySchemaRecordRightLevel(System.Guid,System.String,System.Guid,Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation,Terrasoft.Core.Configuration.EntitySchemaRecordRightLevel,System.Guid,System.Boolean)">
            <summary>
            Inserts <paramref name="administratedRecordId"/> rights for <paramref name="adminUnitId"/>.
            </summary>
            <param name="adminUnitId"><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> unique identifier.</param>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <param name="administratedRecordId"><paramref name="schemaName"/> record unique identifier.</param>
            <param name="operation">Record operation that will be granted for <paramref name="adminUnitId"/>.</param>
            <param name="rightLevel">Rights operation level.</param>
            <param name="sourceId">Rights source unique identifier.</param>
            <param name="useDenyRecordRights">Is <paramref name="schemaName"/> uses deny rights flag.</param>
            <returns>Created rights record unique identifier.</returns>
            <remarks>Schemes which are not administered by records and schemes which are using master record rights
            will be skipped.</remarks>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.SetEntitySchemaRecordOperationRightLevel(System.Guid,System.String,System.Guid,Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation,Terrasoft.Core.Configuration.EntitySchemaRecordRightLevel,System.Boolean,System.Boolean)">
            <summary>
            Inserts <paramref name="administratedRecordId"/> rights for <paramref name="adminUnitId"/>.
            </summary>
            <param name="adminUnitId"><see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> unique identifier.</param>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <param name="administratedRecordId"><paramref name="schemaName"/> record unique identifier.</param>
            <param name="operation">Record operation that will be granted for <paramref name="adminUnitId"/>.</param>
            <param name="rightLevel">Rights operation level.</param>
            <param name="useDenyRecordRights">Flag that indicates whether <paramref name="schemaName"/> uses deny
            rights.</param>
            <param name="ignoreGrantRecordRight">If this flag set to true, current user rights will be ignored.
            </param>
            <returns>Created rights record unique identifier.</returns>
            <remarks>Schemes that are not administered by records and schemes that are using master record rights
            will be skipped.</remarks>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>.
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.ForceDeleteEntitySchemaRecordRightLevel(System.Guid,Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation,System.String,System.Guid)">
            <summary>
            Deletes rights for the specified admin unit.
            </summary>
            <param name="adminUnitId">Identifier of the admin unit.</param>
            <param name="operation">Record operation.</param>
            <param name="schemaName">Name of the entity schema.</param>
            <param name="recordId">Record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.ForceDeleteAllEntitySchemaRecordRightLevel(Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation,System.String,System.Guid)">
            <summary>
            Deletes rights for all admin units.
            </summary>
            <param name="operation">Record operation.</param>
            <param name="schemaName">Name of the entity schema.</param>
            <param name="recordId">Record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetCanExecuteOperations(System.Guid,System.String[])">
            <summary>
            Checks if any of requested operations is allowed for the given admin unit.
            </summary>
            <param name="adminUnitId">Admin unit to be checked.</param>
            <param name="codes">The codes of operations to check.</param>
            <returns>True if any of requested operations is allowed. Otherwise - false.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.CheckCanExecuteAnyOperation(System.String[])">
            <summary>
            Checks if any of requested operations is allowed.
            </summary>
            <param name="codes">The codes of operations to check.</param>
            <exception cref="T:System.Security.SecurityException">No operation is allowed.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetIsAvailableOnSsp(System.String)">
            <summary>
            Checks if the schema <paramref name="schemaName"/> available on SSP by user licence.
            </summary>
            <param name="schemaName">Schema name to be checked.</param>
            <returns>Is schema available on SSP.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetSchemaUsedAsMasterRecord(System.String)">
            <summary>
            Checks if <paramref name="schemaName"/> used as master record for another entity.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><c>True</c> if <paramref name="schemaName"/> is used as master record.
            Otherwise returns <c>false</c>.</returns>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetSchemaUseMasterRecordRights(System.String)">
            <summary>
            Checks if <paramref name="schemaName"/> uses master record rights.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><c>True</c> if <paramref name="schemaName"/> uses master record rights.
            Otherwise returns <c>false</c>.</returns>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetSchemaUseMasterRecordRights(System.Guid)">
            <summary>
            Checks if <paramref name="schemaUId"/> uses master record rights.
            </summary>
            <param name="schemaUId"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><c>True</c> if <paramref name="schemaUId"/> uses master record rights.
            Otherwise returns <c>false</c>.</returns>
            <seealso cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetSchemaUseOwnRecordRights(System.String)">
            <summary>
            Checks if <paramref name="schemaName"/> is administrated by records directly.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><c>True</c> if <paramref name="schemaName"/> is administered by records directly.
            Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetSchemaUseOwnRecordRights(System.Guid)">
            <summary>
            Checks if <paramref name="schemaUId"/> is administrated by records directly.
            </summary>
            <param name="schemaUId"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><c>True</c> if <paramref name="schemaUId"/> is administered by records directly.
            Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetSchemaSignificantColumns(System.String)">
            <summary>
            Returns significant columns list for <paramref name="schemaName"/>.
            The column is considered significant when using this column in the request requires to apply record rights.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <returns><paramref name="schemaName"/> significant columns list.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBSecurityEngine.GetIsLicensedEntity(System.String)">
            <summary>
            Check is <paramref name="entityName"/> licensed.
            </summary> 
            <param name="entityName">Entity name.</param>
            <returns><c>True</c> if entity licensed. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DBStructureCache.BaseDBStructureElementCache">
            <summary>
            Provides methods for caching and getting data about database table structure.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DBStructureCache.BaseDBStructureElementCache.GetTableColumn(System.String)">
            <summary>
            Caches and returns information about table column.
            </summary>
            <param name="columnName">Column name.</param>
            <returns>Returns information about table column or returns <c>null</c> if column doesn't exist.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBStructureCache.BaseDBStructureElementCache.GetColumnDefValue(System.String)">
            <summary>
            Caches and returns information about column default value.
            </summary>
            <param name="columnName">Column name.</param>
            <returns>
            Returns information about column default value or returns <c>null</c> if column default value doesn't exist.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DataReaderExtensions.GetValueOrDefault``1(System.Data.IDataReader,System.String)">
            <summary>
            Retrieves the value of the current nullable object, or a default value.
            </summary>
            <typeparam name="T">The value of the Value property if the HasValue property is true,
            otherwise, the default value of the underlying type.</typeparam>
            <param name="source">IDataReader object.</param>
            <param name="fieldName">Field name.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader">
            <summary>
            Represent a view of column structure in DataReader.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine)">
            <summary>
            Initializes a new instance of the DbColumnDataReader class.
            </summary>
            <param name="dataReader">Data reader.</param>
            <param name="dbStructureEngine">Object that returns column name in dataReader.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetDataDefaultValue">
            <summary>
            Returns a data default value from DataReader.
            </summary>
            <returns>Data default value.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetDataTypeName">
            <summary>
            Returns a data type name from DataReader.
            </summary>
            <returns>Data type name.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetCharactersMaximumLength">
            <summary>
            Returns a maximum length in characters from DataReader.
            </summary>
            <returns>Character maximum length.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetNumericPrecision">
            <summary>
            Returns a numeric precision value from DataReader.
            </summary>
            <returns>Numeric precision value.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetNumericScale">
            <summary>
            Returns a numeric scale value from DataReader.
            </summary>
            <returns>Numeric scale value.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetIsNullableColumn(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a IsNullable property from DataReader.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns>IsNullable property.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetIsCharLengthSemantics(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a IsCharLengthSemantics property from DataReader.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns>IsCharLengthSemantics property.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetConstraintType">
            <summary>
            Returns a constraint type from DataReader.
            </summary>
            <returns>Constraint type.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbColumnDataReader.GetIsConstraintClustered(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a IsConstraintClustered property from DataReader.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns>IsConstraintClustered property.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbColumnDto">
            <summary>
            Represent properties for column in database.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.ColumnName">
            <summary>
            Gets or sets a column name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.IsDescending">
            <summary>
            Gets or sets a value indicating whether the column with descending ordering.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.DataDefaultValue">
            <summary>
            Gets or sets data default value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.DataTypeName">
            <summary>
            Gets or sets data type name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.CharactersMaxLength">
            <summary>
            Gets or sets max length in characters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.NumericPrecision">
            <summary>
            Gets or sets numeric precision.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.NumericScale">
            <summary>
            Gets or sets numeric scale.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.IsNullable">
            <summary>
            Gets or sets a value indicating whether the column is nullable.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.IsCharLengthSemantics">
            <summary>
            Gets or sets a value indicating whether the column length is in characters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.ConstraintType">
            <summary>
            Gets or sets column constraint type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbColumnDto.IsConstraintClustered">
            <summary>
            Gets or sets a value indicating whether the column constraint is clustered.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbDataReader">
            <summary>
            Represent a generic view of DB structure data in DataReader.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbDataReader.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine)">
            <summary>
            Initializes a new instance of the DbDataReader class.
            </summary>
            <param name="dataReader">Data reader.</param>
            <param name="dbStructureEngine">Object that returns column name in dataReader.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbDataReader.GetColumnName">
            <summary>
            Returns a column name from DataReader.
            </summary>
            <returns>Column name.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDataReader">
            <summary>
            Represent a view of foreign key structure in DataReader.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDataReader.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine)">
            <summary>
            Initializes a new instance of the DbForeignKeyDataReader class.
            </summary>
            <param name="dataReader">Data reader.</param>
            <param name="dbStructureEngine">Object that returns column name in dataReader.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDataReader.GetParentColumnName">
            <summary>
            Returns parent column name from DataReader.
            </summary>
            <returns>Parent column name.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDataReader.GetReferencedTableName">
            <summary>
            Returns referenced table name from DataReader.
            </summary>
            <returns>Referenced table name.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDataReader.GetIsCascade(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a value indicating whether the index is clustered.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns><b>true</b> if the index is clustered, otherwise <b>false</b>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDto">
            <summary>
            Represent properties for foreign key in database.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDto.ParentColumnName">
            <summary>
            Gets or sets parent column name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDto.ReferencedTableName">
            <summary>
            Gets or sets referenced table name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbForeignKeyDto.IsCascade">
            <summary>
            Gets or sets a value indicating whether the foreign key is cascade.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbIndexDataReader">
            <summary>
            Represent a view of index structure in DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbIndexDataReader.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine)">
            <summary>
            Initializes a new instance of the DbIndexDataReader class.
            </summary>
            <param name="dataReader">Data reader.</param>
            <param name="dbStructureEngine">Object that returns column name in dataReader.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbIndexDataReader.GetIndexName">
            <summary>
            Returns an index name from DataReader.
            </summary>
            <returns>Index name.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbIndexDataReader.GetIsClustered(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a value indicating whether the index is clustered.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns><b>true</b> if the index is clustered, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbIndexDataReader.GetIsUnique(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a value indicating whether the index is unique.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns><b>true</b> if the index is unique, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbIndexDataReader.GetIsDescending(System.Func{System.Object,System.Boolean})">
            <summary>
            Returns a value indicating whether column in the index is descending.
            </summary>
            <param name="dbConverterToBoolFunc">Function that convert data to boolean value.</param>
            <returns><b>true</b> if the column in index is descending, otherwise <b>false</b>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbIndexDto">
            <summary>
            Represent properties for index in database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbIndexDto.#ctor">
            <summary>
            Initializes a new instance of the DbIndexDto class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbIndexDto.IndexName">
            <summary>
            Gets or sets an index name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbIndexDto.IsClustered">
            <summary>
            Gets or sets a value indicating whether the index is clustered.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbIndexDto.IsUnique">
            <summary>
            Gets or sets a value indicating whether the index is unique.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbIndexDto.Columns">
            <summary>
            Gets or sets columns in an index.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbPrimaryKeyDataReader">
            <summary>
            Represent a view of primary key structure in DataReader.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbPrimaryKeyDataReader.#ctor(System.Data.IDataReader,Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine)">
            <summary>
            Initializes a new instance of the DbPrimaryKeyDataReader class.
            </summary>
            <param name="dataReader">Data reader.</param>
            <param name="dbStructureEngine">Object that returns column name in dataReader.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbPrimaryKeyDataReader.GetConstraintName">
            <summary>
            Returns a constraint name from DataReader.
            </summary>
            <returns>Constraint name.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbPrimaryKeyDto">
            <summary>
            Represent properties for primary key in database.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbPrimaryKeyDto.ConstraintName">
            <summary>
            Gets or sets a constraint name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.DbPrimaryKeyDto.ColumnName">
            <summary>
            Gets or sets a column name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.DbStructureReader">
            <summary>
            Provides reading DB objects structure information.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine)">
            <summary>
            Initializes a new instance of the DbStructureReader class.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="dbStructureEngine">Db structure engine.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.IsTableExist(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.IsIndexExist(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.GetTableIndexes(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.GetTablePrimaryKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.GetTableForeignKeys(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.DbStructureReader.GetTableColumns(System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine">
            <summary>
            Provides methods for getting DB object structure queries building.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IndexNameAlias">
            <summary>
            Gets index name alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.ColumnNameAlias">
            <summary>
            Gets column name alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsClusteredIndexAlias">
            <summary>
            Gets alias of column that indicates whether index is clustered in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsUniqueIndexAlias">
            <summary>
            Gets alias of column that indicates whether index is unique in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsDescendingIndexAlias">
            <summary>
            Gets an alias of column that indicates whether column in index is Descending in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.ConstraintNameAlias">
            <summary>
            Gets column name alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.ParentColumnNameAlias">
            <summary>
            Gets parent column name alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.ReferencedTableNameAlias">
            <summary>
            Gets referenced table name alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsCascadeKeyAlias">
            <summary>
            Gets an alias of column that indicates whether key is cascade in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.DataDefaultValueAlias">
            <summary>
            Gets data default value alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsNullableColumnAlias">
            <summary>
            Gets alias for value indicating whether the column is nullable in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.DataTypeAlias">
            <summary>
            Gets data type alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.CharactersMaximumLengthAlias">
            <summary>
            Gets characters maximum length alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.NumericPrecisionAlias">
            <summary>
            Gets numeric precision alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.NumericScaleAlias">
            <summary>
            Gets numeric scale alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsCharLengthSemanticsAlias">
            <summary>
            Gets alias for value indicating whether the column length is in characters in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.ConstraintTypeAlias">
            <summary>
            Gets column constraint type alias in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.IsConstraintClusteredAlias">
            <summary>
            Gets alias for value indicating the column constraint is clustered in sql query.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.GetIndexQuerySqlText">
            <summary>
            Get sql query text that gets information about a specified index.
            </summary>
            <returns>Sql text.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.GetIsEntitySchemaExistSqlText">
            <summary>
            Get sql query text which gets information about does the table exist.
            </summary>
            <returns>Sql text.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.GetIndexesQuerySqlText">
            <summary>
            Get sql query text which gets information about all indexes in the table.
            </summary>
            <returns>Sql text.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.GetPrimaryKeyQuerySqlText">
            <summary>
            Get sql query text which gets information about primary key in the table.
            </summary>
            <returns>Sql text.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.GetForeignKeysQuerySqlText">
            <summary>
            Get sql query text which gets information about foreign keys in the table.
            </summary>
            <returns>Sql text.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureEngine.GetColumnsQuerySqlText(System.Boolean)">
            <summary>
            Get sql query text which gets information table columns.
            </summary>
            <param name="needGetConstraintType"><b>true</b>, if returns constraint information,
            otherwise - <b>false</b>.</param>
            <returns>Sql text.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader">
            <summary>
            Provides methods for reading DB objects structure information.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader.IsTableExist(System.String)">
            <summary>
            Returns a value indicating whether specified table exists.
            </summary>
            <param name="tableName">Table name in DB.</param>
            <returns><b>true</b> if the table exists in DB, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader.IsIndexExist(System.String,System.String)">
            <summary>
            Returns a value indicating whether specified index exists in specified table.
            </summary>
            <param name="tableName">Table name in DB.</param>
            <param name="indexName">Index name in DB.</param>
            <returns><b>true</b> if the index exists in the table, otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader.GetTableIndexes(System.String)">
            <summary>
            Returns indexes in specified table.
            </summary>
            <param name="tableName">Table name in DB.</param>
            <returns>Indexes in the table.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader.GetTablePrimaryKey(System.String)">
            <summary>
            Returns a primary key in specified table.
            </summary>
            <param name="tableName">Table name in DB.</param>
            <returns>DbPrimaryKeyDto object, if primary key exists in the table, otherwise, <b>null</b>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader.GetTableForeignKeys(System.String)">
            <summary>
            Returns foreign keys in specified table.
            </summary>
            <param name="tableName">Table name in DB.</param>
            <returns>Foreign keys in the table.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DbStructureReader.IDbStructureReader.GetTableColumns(System.String,System.Boolean)">
            <summary>
            Returns columns in specified table.
            </summary>
            <param name="tableName">Table name in DB.</param>
            <param name="needGetConstraintType"><b>true</b>, if returns constraint type,
            otherwise - <b>false</b>.</param>
            <returns>Columns in the table.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBTypeConverter.DBValueToDecimal(System.Object)">
            <summary>
            Convert db value to decimal value with default precision.
            </summary>
            <param name="value">Db value.</param>
            <returns>Decimal value with default precision.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.DBTypeConverter.DbValueToDecimal(System.Object,System.Nullable{System.Int32})">
            <summary>
            Convert db value to decimal value with specified or default precision.
            </summary>
            <param name="value">Db value.</param>
            <param name="precision">Precision or null.</param>
            <returns>Decimal value with specified or default precision.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Delete">
            <summary>
            ###### ## ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Delete"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Delete"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.#ctor(Terrasoft.Core.DB.Delete)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Delete"/>, ########## ###### ########### #######.
            </summary>
            <param name="source">###### ## ########, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Delete.Source">
            <summary>
            ######## ###### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.GetSqlText">
            <summary>
            ########## sql-##### ######## #######.
            </summary>
            <returns>Sql-##### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            ######### ##### ####### # ############# ######### ########## <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.Delete"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.Delete"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.From(System.String)">
            <summary>
            # ######## ####### ######### # ######## ######### ###### ##### # ######## ######.
            </summary>
            <param name="schemaName">### #####.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Delete"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Delete.From(Terrasoft.Core.DB.ModifyQuerySource)">
            <summary>
            # ######## ####### ######### # ######## ######### ###### ######## ########.
            </summary>
            <param name="source">######## ######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Delete"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Func">
            <summary>
            ############# ######### ###### ### ###### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CountOver(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Returns windowed count function.
            </summary>
            <param name="columnExpression">Query column expression.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CountOver(System.String,System.String)">
            <summary>
            Returns windowed count function.
            </summary>
            <param name="sourceAlias">Source alias.</param>
            <param name="sourceColumnAlias">Source column alias.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CountOver(System.String)">
            <summary>
            Returns windowed count function.
            </summary>
            <param name="sourceColumnAlias">Source column alias.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(System.String)">
            <summary>
            ########## ####### ### ########## ########## ######## ######## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ########## ######## ######## # ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(System.String,System.String)">
            <summary>
            ########## ####### ### ########## ########## ######## ######## ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ########## ######## ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########## ########## ######## ######## ########### ######### #######.
            </summary>
            <param name="columnExpression">######### ####### #######.</param>
            <returns>#######, ########### ########## ######## ######## ######### <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Count(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########## ########## ######## ######## ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ########### ########## ######## ######## ######### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(System.String)">
            <summary>
            ########## ####### ### ########## ##### ######## ######## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ##### ######## ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(System.String,System.String)">
            <summary>
            ########## ####### ### ########## ##### ######## ######## ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ##### ######## ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########## ##### ######## ######## ########### ######### #######.
            </summary>
            <param name="columnExpression">######### ####### #######.</param>
            <returns>#######, ########### ##### ######## ######## ######### ####### <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Sum(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########## ##### ######## ######## ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ########### ##### ######## ######## ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(System.String)">
            <summary>
            ########## ####### ### ########## ######## ######## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ####### ######## ####### # ########### <paramref name="sourceColumnAlias"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(System.String,System.String)">
            <summary>
            ########## ####### ### ########## ######## ######## ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ####### ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########## ######## ######## ########### ######### #######.
            </summary>
            <param name="columnExpression">######### #######.</param>
            <returns>#######, ########### ####### ######## ######### <paramref name="columnExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Avg(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########## ######## ######## ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ########### ####### ######## ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(System.String)">
            <summary>
            ########## ####### ### ########## ############ ######## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ########### ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(System.String,System.String)">
            <summary>
            ########## ####### ### ########## ############ ######## ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ########### ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########## ############ ######## ########### ######### #######.
            </summary>
            <param name="columnExpression">######### #######.</param>
            <returns>#######, ########### ########### ######## ######### ####### <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Min(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########## ############ ######## ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ########### ########### ######## ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(System.String)">
            <summary>
            ########## ####### ### ########## ############# ######## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ############ ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(System.String,System.String)">
            <summary>
            ########## ####### ### ########## ############# ######## ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ########### ############ ######## ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########## ############# ######## ########### ######### #######.
            </summary>
            <param name="columnExpression">######### #######.</param>
            <returns>#######, ########### ############ ######## ######### ####### <paramref name="columnExpression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Max(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########## ############# ######## ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ########### ############ ######## ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.IsNull(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ###### ######## <c>null</c> ########## ########## ### ######## ############ # 
            ########### #########.
            </summary>
            <param name="checkExpression">#########, ####### ########## ######### ## ######### <c>null</c>.</param>
            <param name="replacementValue">#########, ############ ########, #### <paramref name="checkExpression"/> 
            ##### <c>null</c>.</param>
            <returns>#######, ####### ######## ######## <c>null</c> # ######### <paramref name="checkExpression"/> ## 
            ######### <paramref name="replacementValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.IsNull(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ###### ######## <c>null</c> ########## ########## ### ######## ############ # 
            ########### #########.
            </summary>
            <param name="checkExpression">#########, ####### ########## ######### ## ######### <c>null</c>.</param>
            <param name="replacementValue">#########, ############ ########, #### <paramref name="checkExpression"/> 
            ##### <c>null</c>.</param>
            <returns>#######, ####### ######## ######## <c>null</c> # ######### <paramref name="checkExpression"/> ## 
            ######### <paramref name="replacementValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CreateGuid">
            <summary>
            ########## ####### ######### ###### ##############.
            </summary>
            <returns>#######, ####### ########## ##### #############.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CurrentDateTime">
            <summary>
            ########## ####### ####### #### # #######.
            </summary>
            <returns>#######, ############ ####### #### # #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Coalesce(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            ########## ####### ######## ####### ######### ## ########## ######### ######### #######, ## 
            ####### <c>null</c>.
            </summary>
            <param name="expressions">######### ######### #######.</param>
            <returns>#######, ############ ###### ######### ## ######### <paramref name="expressions"/>, ## ###### 
            <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Coalesce(Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            ########## ####### ########### ####### ## ####### <c>null</c> ######## ## ######### ####### ######### 
            #######.
            </summary>
            <param name="expressions">###### ######### #######.</param>
            <returns>#######, ############ ###### ######### ## ####### ######### ####### 
            <paramref name="expressions"/>, ## ###### <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Coalesce(Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            ########## ####### ########### ####### ## ####### <c>null</c> ######## ## ######### ####### #########.
            </summary>
            <param name="expressions">###### #########.</param>
            <returns>#######, ############ ###### ######### ####### <paramref name="expressions"/>, ## ###### 
            <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.String)">
            <summary>
            ########## ####### ########### ######### ##### #### ### ####### # ######## ###########.
            </summary>
            <param name="interval">##### ####.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### <paramref name="interval"/> ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.String,System.String)">
            <summary>
            ########## ####### ########### ######### ##### #### ### ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="interval">##### ####.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### <paramref name="interval"/> ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ########### ######### ##### #### ### ########### ######### #######.
            </summary>
            <param name="interval">##### ####.</param>
            <param name="expression">######### ####### #######.</param>
            <returns>#######, ############ ##### #### <paramref name="interval"/> ### ######### 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DatePart(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ########### ######### ##### #### ### ########### #########.
            </summary>
            <param name="interval">##### ####.</param>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### <paramref name="interval"/> ### ######### 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(System.String)">
            <summary>
            ########## ####### ########### ##### #### [####] ### ####### # ######## ###########. 
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [####] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [####] ### ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [####] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [####] ### ########### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [####] ### ######### ####### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Day(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [####] ### ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [####] ### ######### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [######] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ####### # ######## ########### ## 
            ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [######] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ######### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [######] ### ######### ####### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Week(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ######### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [######] ### ######### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [#####] ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [######] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [#####] ### ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [#####] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [#####] ### ########### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [#####] ### ######### ####### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [###] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [###] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [###] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [###] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ########### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [###] ### ######### ####### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Hour(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [###] ### ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [######] ### ####### # ######## ###########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ####### # ######## ########### ## 
            ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ######### [######] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ########### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [######] ### ######### ####### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.HourMinute(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [######] ### ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [######] ### ######### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [#### ######] ### ####### # ######## ###########. 
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [#### ######] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(System.String,System.String)">
            <summary>
            ########## ####### ### ########### ##### #### [#### ######] ### ####### # ######## ########### ## 
            ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############ ##### #### [#### ######] ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Month(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [#####] ### ########### #########.
            </summary> 
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [#####] ### ######### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ########### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [###] ### ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Year(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [###] ### ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [###] ### ######### <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ########### ##### #### [#### ######] ### ########### ######### #######.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############ ##### #### [#### ######] ### ######### ####### 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Weekday(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ### ########### ##### #### [#### ######] ### ########### #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>#######, ############ ##### #### [#### ######] ### ######### <paramref name="expression"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Upper(System.String)">
            <summary>
            ########## ####### ### ############## ######## ######## ####### # ######## ########### # ######## ########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############# ####### ######## ####### # ########### <paramref name="sourceColumnAlias"/> 
            # ######## ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Upper(System.String,System.String)">
            <summary>
            ########## ####### ### ############## ######## ######## ####### # ######## ########### ## ########## 
            ######### # ######## ########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>#######, ############# ####### ######## ####### # ########### <paramref name="sourceColumnAlias"/> 
            ## ######### <paramref name="sourceAlias"/> # ######## ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Upper(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ### ############## ######## ######## ########### ######### ####### # ######## ########.
            </summary>
            <param name="expression">######### #######.</param>
            <returns>#######, ############# ####### ######## ######### ####### <paramref name="expression"/> # ######## 
            ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ##### ####, ######### ########## # ######### #######, ########## ######## ######## ####.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ####### ######## ######## ######## #### # #######.
            </param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ##### ####, ######## ##########, ######### ######### # ######### #######, ########## ######## ######## ####.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ####### ######## ######## ######## #### # #######.
            </param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ##### ####, ######### ########## # ######### #######, ########## ######## ######## #### # #######.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAdd(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ##### ####, ######### ########## # ######### #######, ########## ######## ######## #### # #######.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ##########, ######### ######### # ######### #######, ########## ######## ######## #### # #######. 
            # ######## ##### ####, # ####### ########### ######### ##########, ######### [####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddDay(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [####].
            </summary>
            <param name="numberExpression">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [#### ######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ##########, ######### ######### # ######### #######, ########## ######## ######## #### # #######. 
            # ######## ##### ####, # ####### ########### ######### ##########, ######### [#### ######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [#### ######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeekday(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [#### ######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ##########, ######### ######### # ######### #######, ########## ######## ######## #### # #######. 
            # ######## ##### ####, # ####### ########### ######### ##########, ######### [######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddWeek(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [######].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [#####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ##########, ######### ######### # ######### #######, ########## ######## ######## #### # #######. 
            # ######## ##### ####, # ####### ########### ######### ##########, ######### [#####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [#####].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddMonth(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [#####]. 
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ##########, ######### ######### # ######### #######, ########## ######## ######## #### # #######. 
            # ######## ##### ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="numberExpression">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddYear(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ##########, ######### ######### # ######### #######, ########## ######## ######## #### # #######. 
            # ######## ##### ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateAddHour(System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ####### # ######## ########## ########## 
            ######### ########## # ######### #######, ########## ######## ######## #### # #######. # ######## ##### 
            ####, # ####### ########### ######### ##########, ######### [###].
            </summary>
            <param name="number">########### ######### ##########.</param>
            <param name="expression">######### #######, ########## ######## ######## #### # #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateDiff(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ####### ########### ####### ### ### ########## ######### #######.
            </summary>
            <param name="interval">####### ######### ####### ###.</param>
            <param name="startDateExpression">######### #######, ########## ######### ####.</param>
            <param name="endDateExpression">######### #######, ########## ######## ####.</param>
            <returns>#######, ############ ####### ### <paramref name="interval"/> ### #########
            <paramref name="startDateExpression"/> # <paramref name="endDateExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateDiff(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ####### ########### ####### ### ### ########## ######### #######.
            </summary>
            <param name="interval">####### ######### ####### ###.</param>
            <param name="startDateExpression">######### #######, ########## ######### ####.</param>
            <param name="endDateExpression">######### #######, ########## ######## ####.</param>
            <returns>#######, ############ ####### ### <paramref name="interval"/> ### #########
            <paramref name="startDateExpression"/> # <paramref name="endDateExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DateDiff(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,System.String,System.String)">
            <summary>
            ########## ####### ########### ####### ### ### ########## ######### #######.
            </summary>
            <param name="interval">####### ######### ####### ###.</param>
            <param name="startDateSourceColumnAlias">######### #######, ########## ######### ######## #### # #######.
            </param>
            <param name="endDateSourceColumnAlias">######### #######, ########## ######## ######## #### # #######.
            </param>
            <returns>#######, ############ ####### ### <paramref name="interval"/> ### #########
            <paramref name="startDateSourceColumnAlias"/> # <paramref name="endDateSourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.DataLength(System.String)">
            <summary>
            ########## ####### ######## ##### ######, ############## ### ############# #########.
            </summary>
            <param name="columnName">### #######.</param>
            <returns>#######, ########### ##### ####### # ######### <paramref name="columnName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Len(System.String)">
            <summary>
            Returns the function of column value length.
            </summary>
            <param name="columnName">Column name.</param>
            <returns>Function that returns text column value lenght.<paramref name="columnName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Cast(System.String,Terrasoft.Core.DBDataValueType)">
            <summary>
            Returns the function which casts the column value with specified alias to specified data type.
            </summary>
            <param name="sourceColumnAlias">Alias of the column.</param>
            <param name="dataValueType">Target data type.</param>
            <returns>Function which casts the column value with specified alias <paramref name="sourceColumnAlias"/>
            to specified data type <paramref name="dataValueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Cast(System.String,System.String,Terrasoft.Core.DBDataValueType)">
            <summary>
            Returns the function which casts the column value with specified column alias of the table with
            specified table alias to specified data type.
            </summary>
            <param name="sourceAlias">Alias of the source.</param>
            <param name="sourceColumnAlias">Alias of the column.</param>
            <param name="dataValueType">Target data type.</param>
            <returns>Function which casts the column value with specified column alias
            <paramref name="sourceColumnAlias"/> of the table with specified table alias
            <paramref name="sourceAlias"/> to specified data type.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Cast(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            Returns the function which casts the column expression to specified data type.
            </summary>
            <param name="expression">Column expression.</param>
            <param name="dataValueType">Target data type.</param>
            <returns>Function which casts the expression <paramref name="expression"/> to specified data type 
            <paramref name="dataValueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Substring(System.String,System.Int32,System.Int32)">
            <summary>
            Returns the function which gets part of a string.
            </summary>
            <param name="sourceColumnAlias">Alias of the column.</param>
            <param name="start">Substring start position.</param>
            <param name="length">Substring length</param>
            <returns>Function which gets part of a string.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Substring(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns the function which gets part of a string.
            </summary>
            <param name="sourceAlias">Alias of the table.</param>
            <param name="sourceColumnAlias">Alias of the column.</param>
            <param name="start">Substring start position.</param>
            <param name="length">Substring length</param>
            <returns>Function which gets part of a string.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.Substring(Terrasoft.Core.DB.QueryColumnExpression,System.Int32,System.Int32)">
            <summary>
            Returns the function which gets part of a string.
            </summary>
            <param name="expression">Column expression.</param>
            <param name="start">Substring start position.</param>
            <param name="length">Substring length</param>
            <returns>Function which gets part of a string.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CustomFunction(System.String,Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            Returns custom query instance.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="expressions">Column expression collection.</param>
            <returns>
            Custom function.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CustomFunction(System.String,Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            Returns custom query instance.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="expressions">Column expressions array.</param>
            <returns>
            Custom function.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Func.CustomFunction(System.String,Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            Returns custom query instance.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="expressions">Column expressions array.</param>
            <returns>
            Custom function.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IBufferingDataReader">
            <summary>
            Provides a means for buffering the data from <see cref="T:System.Data.IDataReader" />.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IBufferingDataReader.LoadToBuffer">
            <summary>
            Loading all data from current <see cref="T:System.Data.IDataReader" /> to buffer,
            disposing it and creating new DataReader instead.
            For example, allows to release a db-connection to be able to open next DBDataReader
            when MARS is not allowed.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.ICacheableQuery">
            <summary>
            ############# ###### # ######## ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ICacheableQuery.IsCacheEnabled">
            <summary>
            ##########, ########## ## ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ICacheableQuery.CachedSqlText">
            <summary>
            ############ ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ICacheableQuery.ResetCachedSqlText">
            <summary>
            ####### ############ ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IConnectionModifier.GetModifiedConnectionString(System.String,Terrasoft.Common.QueryKind)">
            <summary>
            Modifies given connection string for the given <see cref="T:Terrasoft.Common.QueryKind"/>
            </summary>
            <param name="initialConnectionString">initial connection string</param>
            <param name="queryKind">quey kind for wich the connection string should be modified</param>
            <returns>connection string</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IDataValueTypeFactory">
            <summary>
            Provides functionality to creating instance of a data value class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IDataValueTypeFactory.CreateDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Returns a new instance of the DBDataValueType class.
            </summary>
            <param name="dataValueTypeManager">Data value type manager.</param>
            <returns>A new instance of the DBDataValueType class that corresponds .</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDataValueTypeFactory.CreateDataValueType(Terrasoft.Core.DataValueTypeManager,Terrasoft.Core.ISchemaColumnsInfoDataReader)">
            <summary>
            Returns a new instance of the DBDataValueType class.
            </summary>
            <param name="dataValueTypeManager">Data value type manager.</param>
            <param name="dataReader">Data reader that contains schema columns information.</param>
            <returns>A new instance of the DBDataValueType class that corresponds .</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IDBCommand">
            <summary>
            ############ ##### ####### SQL.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBCommand.Execute(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            ######### ####### SQL, ######### ######## ######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/> # ########## ########## 
            #####, ############### ### ########## #######.
            </summary>
            <param name="dbExecutor">######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, # ####### ######## ########### ###### # #### 
            ######.</param>
            <returns>########## #####, ############### ### ########## #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBCommand.Execute">
            <summary>
            ######### ####### SQL # ########## ########## #####, ############### ### ########## #######.
            </summary>
            <returns>########## #####, ############### ### ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IDbCommentEngine">
            <summary>
            Provides methods for working with DB meta propeties based on DB comments.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IDBReadableCommand">
            <summary>
            ############ ##### ######## SQL, ############### ### ###### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBReadableCommand.ExecuteReader(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            ######### ########## ######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, ######### ########	SQL # ########## 
            <see cref="T:System.Data.IDataReader"/> # ############## ####### #####.
            </summary>
            <param name="dbExecutor">######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, # ####### ######## ########### ###### # #### 
            ######.</param>
            <returns>######### <see cref="T:System.Data.IDataReader"/> # ############## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBReadableCommand.ExecuteScalar``1(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            ######### ########## ######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, ######### ######## SQL # ########## ############## 
            ###### ####### ###### ###### ############### ######, ############# ########.
            </summary>
            <typeparam name="TResult">### ############# ######## #######.</typeparam>
            <param name="dbExecutor">######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, # ####### ######## ########### ###### # #### 
            ######.</param>
            <returns>###### ####### ###### ###### # ############## ###### #### <typeparamref name="TResult"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IDBReadableCommand.ExecuteScalar``1">
            <summary>
            ######### ######## SQL # ########## ############## ###### ####### ###### ###### ############### ######, 
            ############# ########.
            </summary>
            <typeparam name="TResult">### ############# ######## #######.</typeparam>
            <returns>###### ####### ###### ###### # ############## ###### #### <typeparamref name="TResult"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.INonMarsDbExecutor">
            <summary>
            Provides a means for executing commands for DBs without MARS support.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.INonMarsDbExecutor.CurrentOpenedReader">
            <summary>
            Current opened data reader.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Insert">
            <summary>
            ###### ## ########## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Insert"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.#ctor(Terrasoft.Core.DB.Insert)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>, ########## ###### ########### #######.
            </summary>
            <param name="source">###### ## ##########, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Insert.ColumnValues">
            <summary>
            A collection of query column values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Insert.ColumnValuesCollection">
            <summary>
            A collection of query column values for a batch query.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.Insert"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.GetSqlText">
            <summary>
            ########## sql-##### ######## #######.
            </summary>
            <returns>Sql-##### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            ######### ##### ####### # ############## ######### ########## <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.GetUsingParameters">
            <summary>
            ########## ######### ########## #######.
            </summary>
            <returns>######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Into(System.String)">
            <summary>
            ######### # ####### ###### ########### INTO, ############ # ######## ######### ###### ####### ##### # 
            ######## ######.
            </summary>
            <param name="schemaName">### #####.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Into(Terrasoft.Core.DB.ModifyQuerySource)">
            <summary>
            ######### # ####### ###### ########### INTO, ############ # ######## ######### ###### ####### ########## 
            ######## ######.
            </summary>
            <param name="source">######## ######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ######### ### 
            ########### ########## ## #######.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="subSelect">######### ## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ######### ### 
            ############# ##########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="subSelectQuery">############ #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ########### 
            ######### #######.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="columnExpression">######### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ########### 
            #########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="expression">#########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Set(System.String,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ######### ### 
            ########### #########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="parameter">######## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Insert"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Insert.Values">
            <summary>
            Initialize values for batch query.
            </summary>
            <returns>Current instance of <see cref="T:Terrasoft.Core.DB.Insert"/> class.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IOperationRightsChecker">
            <summary>
            Defines methods to check whether particular user can execute particular operation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IOperationRightsChecker.GetCanExecuteOperation(System.String,System.Guid)">
            <summary>
            Gets a value indicating whether a user with administrative unit Id provided by 
            <paramref name="adminUnitId"/> can execute operation with code provided by <paramref name="code"/>.
            </summary>
            <param name="code">Operation code.</param>
            <param name="adminUnitId">Administrative unit Id.</param>
            <returns>Boolean value indicating whether a user can execute operation.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IOperationRightsChecker.GetCanExecuteOperation(System.String)">
            <summary>
            Gets a value indicating whether current user can execute operation with code 
            provided by <paramref name="code"/>.
            </summary>
            <param name="code">Operation code.</param>
            <returns>Boolean value indicating whether current user can execute operation.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IParametrizedQuery">
            <summary>
            ############# ###### # ######## #################### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IParametrizedQuery.Parameters">
            <summary>
            ######### ########## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IParametrizedQuery.HasParameters">
            <summary>
            #######, ##### ## ###### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IParametrizedQuery.BuildParametersAsValue">
            <summary>
            ##########, ######### ## ######### ####### # ##### ####### ### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IParametrizedQuery.GetUsingParameters">
            <summary>
            ########## ######### ########## #######.
            </summary>
            <returns>######### ########## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IParametrizedQuery.ResetParameters">
            <summary>
            ####### ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IParametrizedQuery.InitializeParameters">
            <summary>
            ######### ############# ########## #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IQueryExecutor">
            <summary>
            Provides methods for query execution on persistent storage.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.ExecuteReader(Terrasoft.Core.DB.Select,System.Action{System.Data.IDataReader})">
            <summary>
            Executes a <paramref name="select"/> query and passes <see cref="T:System.Data.IDataReader"/>
            to <paramref name="readAction"/>.
            </summary>
            <param name="select">Select query.</param>
            <param name="readAction">Action which executes on <see cref="T:System.Data.IDataReader"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.ExecuteReader(System.String,Terrasoft.Core.DB.QueryParameterCollection,System.Action{System.Data.IDataReader})">
            <summary>
            Executes a <paramref name="sqlText"/> with <paramref name="parameters"/> and
            passes <see cref="T:System.Data.IDataReader"/> to <paramref name="readAction"/>.
            </summary>
            <param name="sqlText">SQL query text.</param>
            <param name="parameters">Query parameters.</param>
            <param name="readAction">Action which executes on <see cref="T:System.Data.IDataReader"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.ExecuteReaderForCustomQuery(Terrasoft.Core.DB.CustomQuery,System.Action{System.Data.IDataReader})">
            <summary>
            Executes a <paramref name="query"/> query and passes <see cref="T:System.Data.IDataReader"/>
            to <paramref name="readAction"/>.
            </summary>
            <param name="query">Custom query.</param>
            <param name="readAction">Action which executes on <see cref="T:System.Data.IDataReader"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.Execute(Terrasoft.Core.DB.Insert)">
            <summary>
            Executes an <paramref name="insert"/> query.
            </summary>
            <param name="insert">Insert query.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.Execute(Terrasoft.Core.DB.Update)">
            <summary>
            Executes an <paramref name="update"/> query.
            </summary>
            <param name="update">Update query.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.Execute(Terrasoft.Core.DB.Delete)">
            <summary>
            Executes a <paramref name="delete"/> query.
            </summary>
            <param name="delete">Delete query.</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.IQueryExecutor.ExecuteScalar``1(Terrasoft.Core.DB.Select)">
            <summary>
            Executes a <paramref name="select"/> query and returns first column value of the first row in result set.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.IQueryExpression">
            <summary>
            ############# ###### # ######## ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IQueryExpression.Alias">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.ISystemQueryExecutor">
            <summary>
            Provides methods for query execution with system rights on persistent storage.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.JoinType">
            <summary>
            ### ######### Join.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.Inner">
            <summary>
            ########## ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.LeftOuter">
            <summary>
            ##### ####### ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.RightOuter">
            <summary>
            ###### ####### ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.FullOuter">
            <summary>
            ###### ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.JoinType.Cross">
            <summary>
            ############ ##########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Join">
            <summary>
            ######## Join #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Join"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Join"/> ### ######### ############# #######.
            </summary>
            <param name="parentQuery">############ ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor(Terrasoft.Core.DB.Select,Terrasoft.Core.DB.JoinType)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Join"/> ########## #### ### ######### ############# #######.
            </summary>
            <param name="parentSelect">############ ######.</param>
            <param name="joinType">### ######### <c>Join</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.#ctor(Terrasoft.Core.DB.Join)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########## ###### ########### ######### <c>Join</c>.
            </summary>
            <param name="source">######## <c>Join</c>, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Join.SourceExpression">
            <summary>
            ######## ######, ############## ########## <c>Join</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Join.Condition">
            <summary>
            ####### ######### <c>Join</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Join.JoinType">
            <summary>
            ### ######### <c>Join</c>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.Join"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.Join"/>, ############## ##### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.As(System.String)">
            <summary>
            ############# ######### ######### ###### ######### Join. 
            </summary>
            <param name="alias">#########, ############### ######### ###### ######### <c>Join</c>.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Join"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On">
            <summary>
            # ######## ######### <c>Join</c> ######### ###### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(System.String)">
            <summary>
            # ######## ######### <c>Join</c> ######### ####### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(System.String,System.String)">
            <summary>
            # ######## ######### <c>Join</c> ######### ####### ### ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.Select)">
            <summary>
            # ######## ######### <c>Join</c> ######### ####### ### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.Query)">
            <summary>
            # ######## ######### <c>Join</c> ######### ####### ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ######## ######### <c>Join</c> ######### ####### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Join.On(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ######## ######### <c>Join</c> ######### ####### ### ########### ######### ####### #######.
            </summary>
            <param name="columnExpression">######### ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.JoinCollection">
            <summary>
            ######### ########## <c>Join</c> #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.JoinCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.#ctor(Terrasoft.Core.DB.JoinCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.JoinCollection"/>, ########## ###### ########## ######### 
            ########## <c>Join</c>.
            </summary>
            <param name="source">######### ########## <c>Join</c>, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.JoinCollection"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.JoinCollection"/>, ############## ##### ######## ##########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.FindByAlias(System.String)">
            <summary>
            # ####### ######### ########## <c>Join</c> ############ ##### ######### ## ######### ########## 
            ############### ######### ######.
            </summary>
            <param name="alias">######### ######### ######, ############## ####### ##########.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.DB.Join"/> # ########### ######### ###### <paramref name="alias"/> 
            #### <c>null</c>, #### ######## ## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.GetByAlias(System.String)">
            <summary>
            ## ####### ######### ########## <c>Join</c> ########## ######## # ######## ########### ############### 
            ######### ######. #### ######## ## ###### # #########, ############ ##########. 
            </summary>
            <param name="alias">######### ######### ######, ############## ########## <c>Join</c>.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.DB.Join"/> # ########### ######### ###### <paramref name="alias"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### ########## <c>Join</c> ## ###### ######## 
            # ########### ######### ###### <paramref name="alias"/>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="alias"/> ######## 
            ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.JoinCollection.Exists(System.String)">
            <summary>
            ##########, #### ## # ####### ######### ######## <c>Join</c> # ######## ########### ############### 
            ######### ######.
            </summary>
            <param name="alias">######### ######### ######, ############### ####### ##########.</param>
            <returns><c>true</c>, #### # ####### ######### ########## #### ########, ############## ######## ###### # 
            ########### <paramref name="alias"/>; ##### - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.LoggingDataReader">
            <summary>
            Proxy for <see cref="T:System.Data.IDataReader"/> that logs it's usage.
            </summary>
            <seealso cref="T:System.Data.IDataReader" />
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.#ctor(System.Data.IDataReader,System.Data.Common.DbCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.LoggingDataReader"/> class.
            </summary>
            <param name="dataReader">The data reader to log.</param>
            <param name="command">The command asosiated with reader.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.LoggingDataReader.FieldCount">
            <summary>Gets the number of columns in the current row.</summary>
            <returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current
            record.
            The default is -1.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.LoggingDataReader.System#Data#IDataRecord#Item(System.Int32)">
            <summary>Gets the column located at the specified index.</summary>
            <returns>The column located at the specified index as an <see cref="T:System.Object" />.</returns>
            <param name="i">The zero-based index of the column to get. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="P:Terrasoft.Core.DB.LoggingDataReader.System#Data#IDataRecord#Item(System.String)">
            <summary>Gets the column with the specified name.</summary>
            <returns>The column with the specified name as an <see cref="T:System.Object" />.</returns>
            <param name="name">The name of the column to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.DB.LoggingDataReader.Depth">
            <summary>Gets a value indicating the depth of nesting for the current row.</summary>
            <returns>The level of nesting.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.LoggingDataReader.IsClosed">
            <summary>Gets a value indicating whether the data reader is closed.</summary>
            <returns>true if the data reader is closed; otherwise, false.</returns>
        </member>
        <member name="P:Terrasoft.Core.DB.LoggingDataReader.RecordsAffected">
            <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary>
            <returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement
            failed;
            and -1 for SELECT statements.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.</summary>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetName(System.Int32)">
            <summary>Gets the name for the field to find.</summary>
            <returns>The name of the field or the empty string (""), if there is no value to return.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetDataTypeName(System.Int32)">
            <summary>Gets the data type information for the specified field.</summary>
            <returns>The data type information for the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetFieldType(System.Int32)">
            <summary>Gets the <see cref="T:System.Type" /> information corresponding to the type of
            <see cref="T:System.Object" /> that would be returned from
            <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</summary>
            <returns>The <see cref="T:System.Type" /> information corresponding to the type of
            <see cref="T:System.Object" /> that would be returned from
            <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)" />.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetValue(System.Int32)">
            <summary>Return the value of the specified field.</summary>
            <returns>The <see cref="T:System.Object" /> which will contain the field value upon return.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetValues(System.Object[])">
            <summary>Populates an array of objects with the column values of the current record.</summary>
            <returns>The number of instances of <see cref="T:System.Object" /> in the array.</returns>
            <param name="values">An array of <see cref="T:System.Object" /> to copy the attribute fields into. </param>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetOrdinal(System.String)">
            <summary>Return the index of the named field.</summary>
            <returns>The index of the named field.</returns>
            <param name="name">The name of the field to find. </param>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetBoolean(System.Int32)">
            <summary>Gets the value of the specified column as a Boolean.</summary>
            <returns>The value of the column.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetByte(System.Int32)">
            <summary>Gets the 8-bit unsigned integer value of the specified column.</summary>
            <returns>The 8-bit unsigned integer value of the specified column.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at
            the given buffer offset.</summary>
            <returns>The actual number of bytes read.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <param name="fieldOffset">The index within the field from which to start the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation. </param>
            <param name="length">The number of bytes to read. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetChar(System.Int32)">
            <summary>Gets the character value of the specified column.</summary>
            <returns>The character value of the specified column.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Reads a stream of characters from the specified column offset into the buffer as an array,
            starting at the given buffer offset.</summary>
            <returns>The actual number of characters read.</returns>
            <param name="i">The zero-based column ordinal. </param>
            <param name="fieldoffset">The index within the row from which to start the read operation. </param>
            <param name="buffer">The buffer into which to read the stream of bytes. </param>
            <param name="bufferoffset">The index for <paramref name="buffer" /> to start the read operation. </param>
            <param name="length">The number of bytes to read. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetGuid(System.Int32)">
            <summary>Returns the GUID value of the specified field.</summary>
            <returns>The GUID value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetInt16(System.Int32)">
            <summary>Gets the 16-bit signed integer value of the specified field.</summary>
            <returns>The 16-bit signed integer value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetInt32(System.Int32)">
            <summary>Gets the 32-bit signed integer value of the specified field.</summary>
            <returns>The 32-bit signed integer value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetInt64(System.Int32)">
            <summary>Gets the 64-bit signed integer value of the specified field.</summary>
            <returns>The 64-bit signed integer value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetFloat(System.Int32)">
            <summary>Gets the single-precision floating point number of the specified field.</summary>
            <returns>The single-precision floating point number of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetDouble(System.Int32)">
            <summary>Gets the double-precision floating point number of the specified field.</summary>
            <returns>The double-precision floating point number of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetString(System.Int32)">
            <summary>Gets the string value of the specified field.</summary>
            <returns>The string value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetDecimal(System.Int32)">
            <summary>Gets the fixed-position numeric value of the specified field.</summary>
            <returns>The fixed-position numeric value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetDateTime(System.Int32)">
            <summary>Gets the date and time data value of the specified field.</summary>
            <returns>The date and time data value of the specified field.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetData(System.Int32)">
            <summary>Returns an <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</summary>
            <returns>The <see cref="T:System.Data.IDataReader" /> for the specified column ordinal.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.IsDBNull(System.Int32)">
            <summary>Return whether the specified field is set to null.</summary>
            <returns>true if the specified field is set to null; otherwise, false.</returns>
            <param name="i">The index of the field to find. </param>
            <exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through
            <see cref="P:System.Data.IDataRecord.FieldCount" />. </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.Close">
            <summary>Closes the <see cref="T:System.Data.IDataReader" /> Object.</summary>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.GetSchemaTable">
            <summary>Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the
            <see cref="T:System.Data.IDataReader" />.</summary>
            <returns>A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</returns>
            <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader" /> is
            closed.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.NextResult">
            <summary>Advances the data reader to the next result, when reading the results of batch SQL statements.
            </summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.LoggingDataReader.Read">
            <summary>Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</summary>
            <returns>true if there are more rows; otherwise, false.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.MetaDescriptionQueryBuilder">
            <summary>
            Provides creating a query for getting object meta descriptions from DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.MetaDescriptionQueryBuilder.GetQueryByUId(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <summary>
            Gets meta description query by entity UId in specified action.
            </summary>
            <param name="action">Meta property action.</param>
            <returns>Meta description query.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.MetaDescriptionQueryBuilder.GetQueryByName(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <summary>
            Gets meta description query by entity name in specified action.
            </summary>
            <param name="action">Meta property action.</param>
            <returns>Meta description query.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.EntitySchemaMetaDescriptionQueryBuilder">
            <summary>
            Provides creating a query for getting entity schema meta descriptions from DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.EntitySchemaMetaDescriptionQueryBuilder.#ctor(Terrasoft.Core.DB.IDbCommentEngine,Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the EntitySchemaMetaDescriptionQueryBuilder.
            </summary>
            <param name="dbCommentEngine">DB comment engine.</param>
            <param name="userConnection">UserConnection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.EntitySchemaMetaDescriptionQueryBuilder.GetQueryByUId(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.EntitySchemaMetaDescriptionQueryBuilder.GetQueryByName(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DB.ColumnMetaDescriptionQueryBuilder">
            <summary>
            Provides creating a query for getting column descriptions from DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ColumnMetaDescriptionQueryBuilder.#ctor(Terrasoft.Core.DB.IDbCommentEngine,Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the ColumnMetaDescriptionQueryBuilder.
            </summary>
            <param name="dbCommentEngine">DB comment engine.</param>
            <param name="userConnection">UserConnection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ColumnMetaDescriptionQueryBuilder.GetQueryByUId(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.ColumnMetaDescriptionQueryBuilder.GetQueryByName(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DB.IndexMetaDescriptionQueryBuilder">
            <summary>
            Provides creating a query for getting composite index descriptions from DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexMetaDescriptionQueryBuilder.#ctor(Terrasoft.Core.DB.IDbCommentEngine,Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the IndexMetaDescriptionQueryBuilder.
            </summary>
            <param name="dbCommentEngine">DB comment engine.</param>
            <param name="userConnection">UserConnection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IndexMetaDescriptionQueryBuilder.GetQueryByUId(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.IndexMetaDescriptionQueryBuilder.GetQueryByName(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DB.ColumnIndexMetaDescriptionQueryBuilder">
            <summary>
            Provides creating a query for getting column index descriptions from DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ColumnIndexMetaDescriptionQueryBuilder.#ctor(Terrasoft.Core.DB.IDbCommentEngine,Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the ColumnIndexMetaDescriptionQueryBuilder.
            </summary>
            <param name="dbCommentEngine">DB comment engine.</param>
            <param name="userConnection">UserConnection.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.ConstraintMetaDescriptionQueryBuilder">
            <summary>
            Provides creating a query for getting constraint descriptions from DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ConstraintMetaDescriptionQueryBuilder.#ctor(Terrasoft.Core.DB.IDbCommentEngine,Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the ConstraintMetaDescriptionQueryBuilder.
            </summary>
            <param name="dbCommentEngine">DB comment engine.</param>
            <param name="userConnection">UserConnection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ConstraintMetaDescriptionQueryBuilder.GetQueryByUId(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DB.ConstraintMetaDescriptionQueryBuilder.GetQueryByName(Terrasoft.Core.DB.DBMetaPropertyAction)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DB.ModifyQuerySourceType">
            <summary>
            Type of select into statement.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.ModifyQuerySourceType.RegularTable">
            <summary>
            Into regular table.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.ModifyQuerySourceType.TemporaryTable">
            <summary>
            Into temporary table.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ModifyQuerySource.ModifyQuerySourceType">
            <summary>
            Type of modify query source.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ModifyQuerySource.Hints">
            <summary>
            ######### ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.ModifyQuerySource.HasHints">
            <summary>
            #######, ############, ### ########## ######### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.OrderByItem">
            <summary>
            ############ #########, ## ######## ########### ########## ########### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.#ctor(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Common.OrderDirectionStrict)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItem"/> ### ######### ######### ####### # ######### 
            ######## ##########.
            </summary>
            <param name="expression">######### #######, ## ######## ########### ##########.</param>
            <param name="direction">####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.#ctor(Terrasoft.Core.DB.OrderByItem)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItem"/>, ########## ###### ########### #########.
            </summary>
            <param name="source">#########, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.OrderByItem.Expression">
            <summary>
            ######### #######, ## ######## ########### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.OrderByItem.Direction">
            <summary>
            ####### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItem.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.OrderByItem"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItem"/>, ############## ##### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.OrderByItemCollection">
            <summary>
            ######### #########, ## ####### ########### ########## ########### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItemCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItemCollection.#ctor(Terrasoft.Core.DB.OrderByItemCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>, ########## ###### ########## ########## 
            ######### ### ##########.
            </summary>
            <param name="source">######### ######### ### ##########, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.OrderByItemCollection.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.OrderByItemCollection"/>, ############## ##### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Query">
            <summary>
            ####### ##### ####### # #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.UserConnection">
            <summary>
            ################ ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.RowCount">
            <summary>
            ########## ###### ##### ############### ######, ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.Parameters">
            <summary>
            ######### ########## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasParameters">
            <summary>
            ##########, ##### ## ###### #########. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.BuildParametersAsValue">
            <summary>
            ##########, ######### ## ######### ####### # ##### ####### ### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.Joins">
            <summary>
            ######### ########### Join ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasJoins">
            <summary>
            ##########, #### ## # ###### ####### #### ## #### ########### Join.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.Condition">
            <summary>
            ########## ####### Where #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasCondition">
            <summary>
            ##########, #### ## # ###### ####### ####### Where.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HavingCondition">
            <summary>
            ########## ########### Having #######. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasHavingCondition">
            <summary>
            ##########, #### ## # ###### ####### ########### Having.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.OrderByItems">
            <summary>
            ######### #########, ## ####### ########### ########## ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasOrderByItems">
            <summary>
            #########, ########## ## ######### #######, ## ####### ##### ######### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.GroupByItems">
            <summary>
            ######### #########, ## ####### ########### ########### ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasGroupByItems">
            <summary>
            #########, ########## ## # ####### ######### #######, ## ####### ##### ######### ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.UnionQueries">
            <summary>
            ######### ########, ############ # ###### ######## ########## Union.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.HasUnionQueries">
            <summary>
            ##########, ##### ## ###### ###### ############ # ### ####### ########## Union.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.IsUnionTypeAll">
            <summary>
            ##########, ######### ## # ###### ####### ######## All ### ######### Union.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.IsCacheEnabled">
            <summary>
            ##########, ########## ## ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Query.CachedSqlText">
            <summary>
            ############ ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GetSqlText">
            <summary>
            ########## ##### #######.
            </summary>
            <returns>##### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            ###### ##### #######, ######### ########## ######### <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### 
            ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.Query"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.Query"/>, ############## ##### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Execute">
            <summary>
            ######### ##### ####### # ########## ########## #####, ############### ### ########## #######.
            </summary>
            <returns>########## #####, ############### ### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Execute(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            ######### ##### #######, ######### ######## ######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, # ########## ##### #####, 
            ############### ### ########## #######.
            </summary>
            <param name="dbExecutor">######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, # ####### ######## ########### ######.</param>
            <returns>########## #####, ############### ### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GetUsingParameters">
            <summary>
            ########## ######### ########## #######.
            </summary>
            <returns>######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.ResetParameters">
            <summary>
            ####### ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InitializeParameters">
            <summary>
            ############# ########## #######.
            </summary>
            <returns>######### ##################### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Terrasoft#Core#DB#IParametrizedQuery#InitializeParameters">
            <summary>
            ############# ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,System.String)">
            <summary>
            ######### # ####### ######## ######### #####, ######### ######## ### ##########.
            </summary>
            <param name="joinType">### ##########.</param>
            <param name="schemaName">### ########### #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ##### # ###### 
            <paramref name="schemaName"/>, ######### ### ########## <paramref name="joinType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######## ######### ######### ## ####### ######, ######### ######## ### ##########.
            </summary>
            <param name="joinType">### ##########.</param>
            <param name="subSelect">########### ######### ## ####### ######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### ## 
            ####### ###### <paramref name="subSelect"/>, ######### ### ########## <paramref name="joinType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######## ######### ############ #########, ######### ######## ### ##########.
            </summary>
            <param name="joinType">### ##########.</param>
            <param name="subSelectQuery">########### ############ #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ############ 
            ######### <paramref name="subSelectQuery"/>, ######### ### ########## <paramref name="joinType"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Join(Terrasoft.Core.DB.JoinType,Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ####### ######## ######### #########, ######### ######## ### ##########.
            </summary>
            <param name="joinType">### ##########.</param>
            <param name="sourceExpression">########### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### 
            <paramref name="sourceExpression"/>, ######### ### ########## <paramref name="joinType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(System.String)">
            <summary>
            ######### # ####### ######## ######### #####, ######### ########## ##########.
            </summary>
            <param name="schemaName">### ########### #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ##### # ###### 
            <paramref name="schemaName"/>, ######### ########## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######## ######### ######### ## #######, ######### ########## ##########.
            </summary>
            <param name="subSelect">########### ######### ## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### ## 
            ####### <paramref name="subSelect"/>, ######### ########## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######## ######### ############ #########, ######### ########## ##########. 
            </summary>
            <param name="subSelectQuery">########### ############ #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ############ 
            ######### <paramref name="subSelectQuery"/>, ######### ########## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.InnerJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ####### ######## ######### #########, ######### ########## ##########.
            </summary>
            <param name="sourceExpression">########### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### 
            <paramref name="sourceExpression"/>, ######### ########## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(System.String)">
            <summary>
            ######### # ####### ######## ##### # ######### ######, ######### ##### ####### ##########.
            </summary>
            <param name="schemaName">### ########### #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ##### # ###### 
            <paramref name="schemaName"/>, ######### ##### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######## ######### ######### ## #######, ######### ##### ####### ##########.
            </summary>
            <param name="subSelect">########### ######### ## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### ## 
            ####### <paramref name="subSelect"/>, ######### ##### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######## ######### ############ #########, ######### ##### ####### ##########.
            </summary>
            <param name="subSelectQuery">########### ############ #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ############ 
            ######### <paramref name="subSelectQuery"/>, ######### ##### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.LeftOuterJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ####### ######## ######### #########, ######### ##### ####### ##########.
            </summary>
            <param name="sourceExpression">########### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### 
            <paramref name="sourceExpression"/>, ######### ##### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(System.String)">
            <summary>
            ######### # ####### ######## ##### # ######### ######, ######### ###### ####### ##########.
            </summary>
            <param name="schemaName">### ########### #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ##### # ###### 
            <paramref name="schemaName"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######## ######### ############ #########, ######### ###### ####### ##########.
            </summary>
            <param name="subSelect">########### ############ #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ############ 
            ######### <paramref name="subSelect"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######## ######### ######### ## #######, ######### ###### ####### ##########.
            </summary>
            <param name="subSelectQuery">########### ######### ## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### ## 
            ####### <paramref name="subSelectQuery"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.RightOuterJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ####### ######## ######### #########, ######### ###### ####### ##########.
            </summary>
            <param name="sourceExpression">########### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### 
            <paramref name="sourceExpression"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(System.String)">
            <summary>
            ######### # ####### ######## ##### # ######### ######, ######### ###### ####### ##########.
            </summary>
            <param name="schemaName">### ########### #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ##### # ###### 
            <paramref name="schemaName"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######## ######### ######### ## #######, ######### ###### ####### ##########.
            </summary>
            <param name="subSelect">########### ######### ## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### ## 
            ####### <paramref name="subSelect"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######## ######### ############ #########, ######### ###### ####### ##########.
            </summary>
            <param name="subSelectQuery">########### ############ #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ############ 
            ######### <paramref name="subSelectQuery"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.FullOuterJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ####### ######## ######### #########, ######### ###### ####### ##########.
            </summary>
            <param name="sourceExpression">########### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Join"/>, ########### # ####### ######## ######### 
            <paramref name="sourceExpression"/>, ######### ###### ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where">
            <summary>
            ######### # ####### ###### ###### ######### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ###### ######### ####### ######## #######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(System.String)">
            <summary>
            ######### # ####### ###### ######### ####### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, ### ####### ########### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(System.String,System.String)">
            <summary>
            ######### # ####### ###### ######### ####### ### ####### # ######## ########### ## ######### #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### # ########### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ###### # ######### ####### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######, ### ########### ######## ########### ######### #######.
            </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ########### 
            ########## ## ####### <paramref name="subSelect"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ###### ######### ####### ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########, ### ########### ######## ########### ######### #######.
            </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ########### 
            ############# ########## <paramref name="subSelectQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### # ####### ###### ######### ####### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ######### 
            ####### <paramref name="parameter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### # ####### ###### ######### ####### ### ######## ########### #########. 
            </summary>
            <param name="columnExpression">#########, ### ######## ######## ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### # #### ######### 
            <paramref name="columnExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### # ####### ###### ######### ####### ### ######## ########### #########.
            </summary>
            <param name="expression">#########, ### ######## ######## ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ######## ######### 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Where(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            ######### # ####### ###### # ######## ########## ####### ########## #######.
            </summary>
            <param name="condition">####### #######, ########### # ######## ######### ####### # ######## #######.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And">
            <summary>
            # ######## ####### ####### ######### ###### #######, ######### ########## ######## #. 
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(System.String)">
            <summary>
            # ######## ####### ####### ######### ######## ### ####### # ######## ###########, ######### ########## 
            ######## #.
            </summary>
            <param name="sourceColumnAlias"></param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(System.String,System.String)">
            <summary>
            # ######## ####### ####### ######### ######## ### ####### # ######## ########### ## ########## #########, 
            ######### ########## ######## #.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.Select)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ######### ## #######, ######### 
            ########## ######## #.
            </summary>
            <param name="subSelect">######### ## #######, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.Query)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ######, ######### 
            ########## ######## #.
            </summary>
            <param name="subSelectQuery">######, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ######## ####### ####### ######### ######## ### ########### ######### #######, ######### ########## 
            ######## #.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########.
            </summary>
            <param name="columnExpression">#########, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ########## 
            ######## #.
            </summary>
            <param name="expression">#########, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.And(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ####### #######, ######### ########## 
            ######## #.
            </summary>
            <param name="condition">####### #######, ########### # ######## #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or">
            <summary>
            # ######## ####### ####### ######### ###### #######, ######### ########## ######## ###.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(System.String)">
            <summary>
            # ######## ####### ####### ######### ######## ### ####### # ######## ###########, ######### ########## 
            ######## ###.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(System.String,System.String)">
            <summary>
            # ######## ####### ####### ######### ######## ### ####### # ######## ########### ## ########## #########, 
            ######### ########## ######## ###.
            </summary>
            <param name="sourceAlias">######### #######.</param>
            <param name="sourceColumnAlias">######### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.Select)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ######### ## #######, ######### 
            ########## ######## ###.
            </summary>
            <param name="subSelect">######### ## #######, ########### # ######## ######### # ####### #######. </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.Query)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ########## 
            ######## ###.
            </summary>
            <param name="subSelectQuery">#########, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ######## ####### ####### ######### ######## ### ########### ######### #######, ######### ########## 
            ######## ###.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ########## 
            ######## ###.
            </summary>
            <param name="columnExpression">#########, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ########## 
            ######## ###.
            </summary>
            <param name="expression">#########, ########### # ######## ######### # ####### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Or(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ####### #######, ######### ########## 
            ######## ###.
            </summary>
            <param name="condition">####### #######, ########### # ######## #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### ###### #######, ######### ######### ########## ########.
            </summary>
            <param name="logicalOperation">########## ########, # ####### ####### ########### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(System.String,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### ######## ### ####### # ######## ###########, ######### ######### 
            ########## ########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(System.String,System.String,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### ######## ### ####### # ######## ########### ## ########## #########, 
            ######### ######### ########## ########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.Select,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ######### ## #######, ######### 
            ######## ########## ########. 
            </summary>
            <param name="subSelect">######### ## #######, ####### ########### # ######## ######### # ####### #######.
            </param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.Query,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ######### 
            ########## ########.
            </summary>
            <param name="subSelectQuery">#########, ####### ########### # ######## ######### # ####### #######.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.QueryParameter,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### ######## ### ########### ######### #######, ######### ######### ### 
            ########## ########.
            </summary>
            <param name="parameter">######## #######.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ######### 
            ########## ########.
            </summary>
            <param name="columnExpression">#########, ########### # ######## ######### # ####### #######.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## #########, ######### ######### 
            ########## ########.
            </summary>
            <param name="expression">#########, ########### # ######## ######### # ####### #######.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ############## ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.AddCondition(Terrasoft.Core.DB.QueryCondition,Terrasoft.Common.LogicalOperation)">
            <summary>
            # ######## ####### ####### ######### # ######## ######### ########## ####### #######, ######### ######### 
            ########## ########.
            </summary>
            <param name="condition">####### #######, ########### # ######## #########.</param>
            <param name="logicalOperation">########## ########, # ####### ####### ########### ########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="logicalOperation"/> 
            ########## ############## ### ########## ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.CloseBlock">
            <summary>
            ######### #### ####### #######.
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ####### ####### ## ######## ######## ######.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,System.String)">
            <summary>
            ######### ########## ########### ####### # ######### ####### ## ####### # ######## ###########.
            </summary>
            <param name="direction">####### ########## ########### #######.</param>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,System.String,System.String)">
            <summary>
            ######### ########## ########### ####### # ######### ####### ## ####### # ######## ########### ## ######### 
            #########.
            </summary>
            <param name="direction">####### ########## ########### #######.</param>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ##########.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ######### ########## ########### ####### # ######### #######, ######### # ######## ##### ########## 
            ######## ########## #######.
            </summary>
            <param name="direction">####### ########## ########### #######.</param>
            <param name="queryFunction">#######, ######## ####### ############ # ######## ##### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.Select)">
            <summary>
            ######### ########## ########### ####### # ######### #######, ######### # ######## ##### ########## 
            ########## ########### ########## ## #######.
            </summary>
            <param name="direction">####### ##########.</param>
            <param name="subSelect">######### ## #######, ########## ######## ############ # ######## ##### ##########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.Query)">
            <summary>
            ######### ########## ########### ####### # ######### #######, ######### # ######## ##### ####### ########## 
            ########### ############# ##########.
            </summary>
            <param name="direction">####### ########## ########### #######.</param>
            <param name="subSelectQuery">############ #########, ########## ######## ############ # ######## ##### 
            ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### ########## ########### ####### # ######### #######, ######### # ######## ##### ########## 
            ######## ########### #########.
            </summary>
            <param name="direction">####### ########## ########### #######.</param>
            <param name="columnExpression">#########, ######## ######## ############ # ######## ##### ##########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderBy(Terrasoft.Common.OrderDirectionStrict,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### ########## ########### ####### # ######### #######, ######### # ######## ##### ########## 
            ######## ########### #########.
            </summary>
            <param name="direction">####### ########## ########### #######.</param>
            <param name="expression">#########, ######## ######## ############ # ######## ##### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(System.String)">
            <summary>
            ######### ########## ########### ####### # ####### ########### ## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(System.String,System.String)">
            <summary>
            ######### ########## ########### ####### # ####### ########### ## ####### # ######## ########### ## 
            ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.Select)">
            <summary>
            ######### ########## ########### ####### # ####### ###########, ######### # ######## ##### ########## 
            ########## ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######, ########## ######## ############ # ######## ##### ##########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.Query)">
            <summary>
            ######### ########## ########### ####### # ####### ###########, ######### # ######## ##### ########## 
            ########## ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########, ########## ######## ############ # ######## ##### 
            ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### ########## ########### ####### # ####### ###########, ######### # ######## ##### ########## 
            ######## ########### #########.
            </summary>
            <param name="columnExpression">#########, ######## ######## ############ # ######## ##### ##########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByAsc(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### ########## ########### ####### # ####### ###########, ######### # ######## ##### ########## 
            ######## ########### #########.
            </summary>
            <param name="expression">#########, ######## ######## ############ # ######## ##### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(System.String)">
            <summary>
            ######### ########## ########### ####### # ####### ######## ## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(System.String,System.String)">
            <summary>
            ######### ########## ########### ####### # ####### ######## ## ####### # ######## ########### ## ########## 
            #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.Select)">
            <summary>
            ######### ########## ########### ####### # ####### ########, ######### # ######## ##### ####### ########## 
            ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######, ########## ######## ############ # ######## ##### ##########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.Query)">
            <summary>
            ######### ########## ########### ####### # ####### ########, ######### # ######## ##### ####### ########## 
            ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########, ########## ######## ############ # ######## ##### 
            ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### ########## ########### ####### # ####### ########, ######### # ######## ##### ########## ######## 
            ########### #########.
            </summary>
            <param name="columnExpression">#########, ######## ######## ############ # ######## ##### ##########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.OrderByDesc(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### ########## ########### ####### # ####### ########, ######### # ######## ##### ########## ######## 
            ########### #########.
            </summary>
            <param name="expression">#########, ######## ######## ############ # ######## ##### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(System.String)">
            <summary>
            ######### ########### ########### ####### ## ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ###########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(System.String,System.String)">
            <summary>
            ######### ########### ########### ####### ## ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ###########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### ########### ########### #######, ######### # ######## ##### ########### ######## ########### 
            #########.
            </summary>
            <param name="columnExpression">#########, ######## ######## ############ # ######## ##### ###########.
            </param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.GroupBy(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### ########### ########### #######, ######### # ######## ##### ########### ######## ########### 
            #########.
            </summary>
            <param name="expression">#########, ######## ######## ############ # ######## ##### ###########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having">
            <summary>
            ######### # ####### ###### ###### ######### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(System.String)">
            <summary>
            ######### # ####### ###### ######### ####### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(System.String,System.String)">
            <summary>
            ######### # ####### ###### ######### ####### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######, ## ####### ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### # ########### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ###### ######### ####### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######, ### ########### ######## ########### ######### #######.
            </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ########### 
            ########## ## ####### <paramref name="subSelect"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ###### ######### ####### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########, ### ########### ######## ########### ######### #######.
            </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ########### 
            ############# ########## <paramref name="subSelectQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### # ####### ###### ######### ####### ### ######## ########### #########.
            </summary>
            <param name="expression">#########, ### ######## ######## ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ######## ######### 
            <paramref name="expression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### # ####### ###### ######### ####### ### ######### ######### #######.
            </summary>
            <param name="parameter">######## #######, ### ######## ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ######### ####### 
            <paramref name="parameter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Having(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### # ####### ###### ######### ####### ### ######## ########### #########.
            </summary>
            <param name="columnExpression">#########, ### ######## ######## ########### ######### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ############## ######### ####### ### ######## ######### 
            <paramref name="columnExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Union(Terrasoft.Core.DB.Select)">
            <summary>
            ########## # ############ ######## ####### ########## ########### ####### ## #######, ######## ######### 
            ##### ## ############### ######.
            </summary>
            <param name="unionSelect">###### ## #######, ########## ######## ############ # ############ ######## 
            #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.Union(Terrasoft.Core.DB.Query)">
            <summary>
            ########## # ############ ######## ####### ########## ########### ############# #######, ######## 
            ######### ##### ## ############### ######.
            </summary>
            <param name="unionSelectQuery">############ ######, ########## ######## ############ # ############ 
            ######## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.UnionAll(Terrasoft.Core.DB.Select)">
            <summary>
            ########## # ############ ######## ####### ########## ########### ####### ## #######, ### #### ######### 
            ##### ## ########### ## ############### ######.
            </summary>
            <param name="unionSelect">###### ## #######, ########## ######## ############ # ############ ######## 
            #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.UnionAll(Terrasoft.Core.DB.Query)">
            <summary>
            ########## # ############ ######## ####### ########## ########### ############# #######, ### #### 
            ######### ##### ## ########### ## ############### ######.
            </summary>
            <param name="unionSelectQuery">############ ######, ########## ######## ############ # ############ 
            ######## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Query"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.ResetCachedSqlText">
            <summary>
            ####### ############ ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Query.SetParameterValue(System.String,System.Object)">
            <summary>
            ############# ######## ######### #######.
            </summary>
            <param name="name">### #########.</param>
            <param name="value">######## #########.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryCaseItem">
            <summary>
            ####### ####### ######### CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.#ctor(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/> # ######## ######## ####### # 
            ############## ##########.
            </summary>
            <param name="condition">####### #######.</param>
            <param name="resultExpression">#########, ####### ##### ##########, #### ####### 
            <paramref name="condition"/> ##### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.#ctor(Terrasoft.Core.DB.QueryCaseItem)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>, ########## ###### ########### ########.
            </summary>
            <param name="source">##### ######### <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>, ########## ###### ########### ######## 
            ######### CASE.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCaseItem.Condition">
            <summary>
            ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCaseItem.ResultExpression">
            <summary>
            ############## #########. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryCaseItem"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ######## ######### CASE.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCaseItem.AddCondition(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            ######### # ####### ####### ########## ####### #######.
            </summary>
            <param name="condition">####### #######.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryCase">
            <summary>
            ######### ######### CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.QueryCase"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.#ctor(Terrasoft.Core.DB.QueryCase)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.QueryCase"/>, ########## ###### ########### ######### #########.
            </summary>
            <param name="source">######### ######### CASE, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCase.ElseExpression">
            <summary>
            ######### ########### ELSE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryCase"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,System.String)">
            <summary>
            # ######## ######### ######### ######### ######### ########### WHEN # ######### ######## # ########### 
            ####### ############### #########.
            </summary>
            <param name="condition">####### ########### WHEN.</param>
            <param name="resultSourceColumnAlias">######### ####### ############### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.Select)">
            <summary>
            # ######## ######### ######### ######### ######### ########### WHEN # ######### ######## # ########### ## 
            #######, ####### ########## ############## #########.
            </summary>
            <param name="condition">####### ########### WHEN.</param>
            <param name="resultSubSelect">######### ## #######, ############ ############## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.Query)">
            <summary>
            # ######## ######### ######### ######### ######### ########### WHEN # ######### ######## # ############ 
            ###########, ####### ########## ############## #########.
            </summary>
            <param name="condition">####### ########### ######### WHEN.</param>
            <param name="resultSubSelectQuery">############ #########, ############ ############## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ######## ######### ######### ######### ######### ########### WHEN # ######### ######## # ########## 
            ############### #########.
            </summary>
            <param name="condition">####### ########### WHEN.</param>
            <param name="resultParameter">######## ############### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.AddWhenItem(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ######## ######### ######### ######### ########### WHEN # ######### ######## # ########## ####### 
            ############### #########.
            </summary>
            <param name="condition">####### ########### WHEN.</param>
            <param name="resultColumnExpression">######### ####### ############### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(System.String)">
            <summary>
            ############# # ######## ######### ########### ELSE ######## ######### ######### ####### # ######## 
            ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.Select)">
            <summary>
            ############# # ######## ######### ########### ELSE ######## ######### ######### ####### ### ########### 
            ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.Query)">
            <summary>
            ############# # ######## ########### ELSE ######## ######### ######### ####### ### ########### 
            ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ############# # ######## ########### ELSE ######## ######### ######### ####### ### ######### ######### 
            #######.
            </summary>
            <param name="parameter">######## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCase.SetElseExpression(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############# # ######## ########### ELSE ######## ######### ######## ######### #######.
            </summary>
            <param name="columnExpression">######### #######.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryColumnExpressionType">
            <summary>
            ### ######### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.SourceColumnAlias">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Asterisk">
            <summary>
            ### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Const">
            <summary>
            #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Parameter">
            <summary>
            ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.SubSelect">
            <summary>
            #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Case">
            <summary>
            ##### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.Function">
            <summary>
            #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.ArithmeticOperation">
            <summary>
            ############## ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.SqlText">
            <summary>
            Sql-#####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryColumnExpressionType.BitwiseOperation">
            <summary>
            Bitwise operation.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryColumnExpression">
            <summary>
            ######### ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(System.String,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### # ######## ########### ## 
            ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ######### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Select)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Select,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ########### ########## ## ####### 
            # ######## ###########.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <param name="alias">######### ########## ## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.Query,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ########### ############# ########## 
            # ######## ###########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <param name="alias">######### ############# ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryCase)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ######### ########### <c>Case</c>. 
            </summary>
            <param name="queryCase">########### <c>Case</c> #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryCase,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ######### ########### <c>Case</c> # 
            ######### ###########.
            </summary>
            <param name="queryCase">########### <c>Case</c> #######.</param>
            <param name="alias">######### ########### <c>Case</c> #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ######## ####### #########.
            </summary>
            <param name="queryFunction">####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryFunction,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ######## ####### ######### # 
            ######### ###########.
            </summary>
            <param name="queryFunction">####### #########.</param>
            <param name="alias">######### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Common.ArithmeticOperation,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ############## ######## # ######### 
            ##########.
            </summary>
            <param name="arithmeticOperation">############## ########.</param>
            <param name="leftArithmeticOperand">##### ####### ############## ########.</param>
            <param name="rightArithmeticOperand">###### ####### ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Common.ArithmeticOperation,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ############## ######## # ######### 
            ########## # ######### ###########.
            </summary>
            <param name="arithmeticOperation">############## ########.</param>
            <param name="leftArithmeticOperand">##### ####### ############## ########.</param>
            <param name="rightArithmeticOperand">###### ####### ############## ########.</param>
            <param name="alias">######### ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Common.BitwiseOperation,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Initializes instance of <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> for bitwise operation with two operands.
            </summary>
            <param name="bitwiseOperation">Bitwise operation.</param>
            <param name="leftOperand">Left operand of bitwise operation.</param>
            <param name="rightOperand">Right operand of bitwise operation.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ########## ###### ########### ######### 
            #######.
            </summary>
            <param name="source">######### #######, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SeparateModeOption">
            <summary>
            Gets or sets the separate mode optimization option.
            </summary>
            <value>
            The separate mode option.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.ExpressionType">
            <summary>
            ### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.IsBlock">
            <summary>
            ##########, ########## ## ######### ####### # ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.IsNegative">
            <summary>
            ##########, ######## ## ######### ####### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Alias">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SourceAlias">
            <summary>
            ######### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SourceColumnAlias">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.ConstValue">
            <summary>
            ########### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Parameter">
            <summary>
            ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SubSelect">
            <summary>
            ######### ## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Case">
            <summary>
            ########### <c>Case</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.Function">
            <summary>
            #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.ArithmeticOperation">
            <summary>
            ############## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.BitwiseOperation">
            <summary>
            Bitwise operation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.LeftArithmeticOperand">
            <summary>
            ##### ####### ############## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.RightArithmeticOperand">
            <summary>
            ###### ####### ############## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryColumnExpression.SqlText">
            <summary>
            Sql-#####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Negate(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############# ######### ########### ######## ######### #######.
            </summary>
            <param name="operand">######### #######.</param>
            <returns>######### ######## ######### ####### <paramref name="operand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_UnaryNegation(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######## ######### ########### ######### #######.
            </summary>
            <param name="operand">######### #######.</param>
            <returns>######### ######### ####### <paramref name="operand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Add(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######## ########## ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## ########.</param>
            <returns>##### ######### #######, ############## ##### #########-######### <paramref name="leftOperand"/> # 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Addition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######## ### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## ########.</param>
            <returns>##### ######### #######, ############## ##### #########-######### <paramref name="leftOperand"/> # 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Addition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ############### ######## ### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## ########.</param>
            <returns>##### ######### #######, ############## ##### #########-######### <paramref name="leftOperand"/> # 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Addition(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######## ### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## ########.</param>
            <returns>##### ######### #######, ############## ##### #########-######### <paramref name="leftOperand"/> # 
            <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Subtract(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######### ########### ####### ######### ####### ## ########### ###### 
            ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ######## ##### ###########-########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Subtraction(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######### ####### ######### ####### ## ###### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ######## ##### ########### - ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Subtraction(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ############### ######### ####### ######### ####### ## ###### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ######## ##### ########### - ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Subtraction(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######### ####### ######### ####### ## ###### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ######## ##### ########### - ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_BitwiseAnd(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Returns expression of bitwise AND operation for passed operands.
            </summary>
            <param name="leftOperand">Column expression - left operand of bitwise operation.</param>
            <param name="rightOperand">Column expression - right operand of bitwise operation.</param>
            <returns>Coluln expression that represent bitwise AND operation for operands 
            <paramref name="leftOperand"/> and <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Multiply(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######### ########## ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ############ ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Multiply(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######### #### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ############ ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Multiply(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ############### ######### #### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ############ ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Multiply(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ######### #### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">######### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### #######, ############## ############ ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Divide(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ####### ########### ###### ######### ####### ## ########## ###### 
            ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### ######## #######.</param>
            <param name="rightOperand">######### ####### - ###### ####### ######## #######.</param>
            <returns>##### ######### #######, ############## ####### ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Division(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ############### ####### ###### ######### ####### ## ###### ###### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### ######## #######.</param>
            <param name="rightOperand">######### ####### - ###### ####### ######## #######.</param>
            <returns>##### ######### #######, ############## ####### ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Division(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ########## ######### ############### ####### ###### ######### ####### ## ###### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### ######## #######.</param>
            <param name="rightOperand">######### ####### - ###### ####### ######## #######.</param>
            <returns>##### ######### #######, ############## ####### ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.op_Division(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ########## ######### ####### ###### ######### ####### ## ###### ######### #######.
            </summary>
            <param name="leftOperand">######### ####### - ##### ####### ######## #######.</param>
            <param name="rightOperand">######### ####### - ###### ####### ######## #######.</param>
            <returns>##### ######### #######, ############## ####### ######### - ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ##### ######## ##########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.Block">
            <summary>
            ######## ####### ######### ####### # ####.
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ########## # ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpression.GetQueryColumnExpression">
            <summary>
            ########## ####### ######### #######.
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryColumnExpressionCollection">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.#ctor(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>, ########## ###### ########## 
            ######### ######### #######.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpressionCollection"/>, ############## ##### ######## 
            ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddExpression(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### # ####### ######### ######### ####### ########## #########.
            </summary>
            <param name="expression">######### #######, ####### ########### # ####### #########.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(System.String)">
            <summary>
            ######### # ####### ######### ######### ####### ######### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### ######### #######, ####### ########### # ####### #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(System.String,System.String)">
            <summary>
            ######### # ####### ######### ######### ####### ######### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### # ####### ######### ######### ####### ######### ### ######### ######### #######.
            </summary>
            <param name="parameter">######## #######, ### ######## ########### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######### ######### ####### ######### ### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######, ### ######## ########### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######### ######### ####### ######### ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########, ### ######## ########### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.Add(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ######### # ####### ######### ######### ####### ######### ### ########## ####### #########.
            </summary>
            <param name="queryFunction">####### #########, ### ####### ########### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddExpressionsRange(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.IQueryColumnExpressionConvertible})">
            <summary>
            ######### # ####### ######### ######### ####### ######## ######### ## ######### #############.
            </summary>
            <param name="expressions">############# ######### #######, ####### ########### # ####### #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddRange(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryColumnExpression})">
            <summary>
            ######### # ####### ######### ######### ####### ######## ######### ## ######### #############.
            </summary>
            <param name="columnExpressions">############# ######### #######, ####### ########### # ####### #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ######### # ####### ######### ######### ####### ######## ######### # ############ ## ######### 
            #############.
            </summary>
            <param name="sourceColumnAliases">############# ########### ######### #######, ####### ########### # 
            ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.AddRange(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryParameter})">
            <summary>
            ######### # ####### ######### ######### ####### ######## ######### ### ########## ## ########### 
            #############.
            </summary>
            <param name="parameters">############# ##########, ### ####### ########### ######### # ####### #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.ExistsByAlias(System.String)">
            <summary>
            ##########, #### ## # ####### ######### ######### ####### ######### # ######## ###########.
            </summary>
            <param name="alias">######### ######## ######### #######.</param>
            <returns><c>true</c>, #### # ####### ######### ######### ####### #### ######### # ########### 
            <paramref name="alias"/>; ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.FindByAlias(System.String)">
            <summary>
            ########## ## ####### ######### ######### ####### ######### # ######## ###########.
            </summary>
            <param name="alias">######### ############# ######### #######.</param>
            <returns>######### ####### # ########### <paramref name="alias"/>, ############# ####### #########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.GetByAlias(System.String)">
            <summary>
            ########## ## ####### ######### ######### ####### ######### # ######## ###########. #### ######### ## 
            ####### # #########, ############ ##########.
            </summary>
            <param name="alias">######### ############# ######### #######.</param>
            <returns>######### ####### # ########### <paramref name="alias"/>, ############# ####### #########.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### ######### ####### # ########### 
            <paramref name="alias"/> ## ####### # ####### #########.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ######## ######### <paramref name="alias"/> ######## ###### 
            ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryColumnExpressionCollection.GetUniqueAlias(System.String,System.Int32)">
            <summary>
            ### ######### ########## ######### ####### ########## ########## ######### # ######## ############ ######.
            </summary>
            <param name="alias">######### ######### #######, ### ######## ######### ########## #########.</param>
            <param name="aliasMaxLength">############ ##### ########### ##########.</param>
            <returns>########## ######### ### ######### ####### # ########### <paramref name="alias"/>, ####### ##### 
            ############ ##### <paramref name="aliasMaxLength"/> ########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryConditionType">
            <summary>
            ### ####### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Blank">
            <summary>
            ###### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Block">
            <summary>
            ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.IsNull">
            <summary>
            ######## <c>null</c> # #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Equal">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.NotEqual">
            <summary>
            ## #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Greater">
            <summary>
            ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.GreaterOrEqual">
            <summary>
            ###### ### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Less">
            <summary>
            ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.LessOrEqual">
            <summary>
            ###### ### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Between">
            <summary>
            ######## ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Like">
            <summary>
            ########## ###### # ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.StartWith">
            <summary>
            ########## ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Contain">
            <summary>
            ######## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.EndWith">
            <summary>
            ############# ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.In">
            <summary>
            ###### # ##### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QueryConditionType.Exist">
            <summary>
            ########## ## ######### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryCondition">
            <summary>
            ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ######### #######.
            </summary>
            <param name="parentQuery">######, ### ######## ################ ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.QueryConditionType)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> # ######## ##### ####### #######.
            </summary>
            <param name="conditionType">### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ######### #########.
            </summary>
            <param name="leftExpression">#########, ### ######## ################ ######### 
            <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.#ctor(Terrasoft.Core.DB.QueryCondition)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ########## ###### ######### ########## 
            <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.ParentQuery">
            <summary>
            ######, ######## ########### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.Name">
            <summary>
            ### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.ConditionType">
            <summary>
            ### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.IsNot">
            <summary>
            ##########, ############ ## ######## NOT ##### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.LogicalOperation">
            <summary>
            ########## ########, ####### ######### ###### ####### # ########## ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.LeftExpression">
            <summary>
            ######### ##### ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.RightExpressions">
            <summary>
            ######### ######### ###### ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryCondition.HasRightExpressions">
            <summary>
            ##########, #### ## #### ## #### ######### # ###### ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Not">
            <summary>
            ######### ######### # ####### #######.
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, # ####### ######### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock">
            <summary>
            # ######## ####### ######### #### #######.
            </summary>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> #### ####, ########### # ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(System.String)">
            <summary>
            # ######## ####### ######### #### ####### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, ### ####### ########### #### #########.</param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ####### # ########### 
            <paramref name="sourceColumnAlias"/>, ########### # ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(System.String,System.String)">
            <summary>
            # ######## ####### ######### #### ####### ### ####### # ######## ########### ## ########## 
            #########.</summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######</param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ####### # ########### 
            <paramref name="sourceColumnAlias"/> ## ######### <paramref name="sourceAlias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.Select)">
            <summary>
            # ######## ####### ######### #### ####### ### ########### ######### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######, ### ########### ######## ########### #### #######.</param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ########### ########## ## ####### 
            <paramref name="subSelect"/>, ########### # ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.Query)">
            <summary>
            # ######## ####### ######### #### ####### ### ########### ######### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########, ### ########### ######## ######### #### #######.
            </param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ########### ########## <paramref name="subSelectQuery"/>, 
            ########### # ######## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ######## ####### ######### #### ####### ### ######### ######### #######.
            </summary>
            <param name="parameter">######## #######, ### ######## ########### #### #######.</param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ######### ####### <paramref name="parameter"/>, 
            ########### # ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ######## ####### ######### #### ####### ### ######## ######### #########.
            </summary>
            <param name="columnExpression">#########, ### ######## ######## ########### #### #######.</param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ######## ######### <paramref name="columnExpression"/>, 
            ########### # ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.OpenBlock(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ######## ####### ######### #### ####### ### ######## ######### #########.
            </summary>
            <param name="expression">#########, ### ######## ######## ########### #### #######.</param>
            <returns>####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/> ### ######## ######### <paramref name="expression"/>, 
            ########### # ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.WrapBlock">
            <summary>
            ######## ####### ####### # ####.
            </summary>
            <returns>####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>, ########## # ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNull">
            <summary>
            # ######## ####### ######### ########, ######## ## ######## ######### ####### <c>null</c>.
            </summary>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(System.String)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ######### ### 
            ####### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(System.String,System.String)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ######### ### 
            ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ######### ### 
            ########### ######### #######. 
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="columnExpression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ############# ### ######### [#####] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="expression">#########, ######## ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(System.String)">
            <summary>
            # ####### ####### ############# ### ######### [## #####] # ######### # ###### ##### ####### ######### ### 
            ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(System.String,System.String)">
            <summary>
            # ####### ####### ############# ### ######### [## #####] # ######### # ###### ##### ####### ######### ### 
            ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ############# ### ######### [## #####] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ############# ### ######### [## #####] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### ######### ########### ######## ######### ####### # ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ############# ### ######### [## #####] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="columnExpression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsNotEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ############# ### ######### [## #####] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="expression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(System.String)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(System.String,System.String)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ########## 
            #########. 
            </summary>
            <param name="columnExpression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreater(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="expression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(System.String)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(System.String,System.String)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### 
            ####### ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ########## #########.
            </summary>
            <param name="columnExpression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsGreaterOrEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ########## #########.
            </summary>
            <param name="expression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(System.String)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(System.String,System.String)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### 
            ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ######### ### 
            ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="columnExpression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLess(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ############# ### ######### [######] # ######### # ###### ##### ####### ########## 
            #########.
            </summary>
            <param name="expression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(System.String)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(System.String,System.String)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### #########, ######## ## ######## ######### ####### ####### ### ###### ########### 
            ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ########## #########. 
            </summary>
            <param name="columnExpression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLessOrEqual(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ############# ### ######### [###### ### #####] # ######### # ###### ##### ####### 
            ########## #########.
            </summary>
            <param name="expression">#########, ####### ########### # ###### ##### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(System.String)">
            <summary>
            # ####### ####### ####### ############# ### ######### [######## ########] # ######### # ######## ###### 
            ####### ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(System.String,System.String)">
            <summary>
            # ####### ####### ####### ############# ### ######### [######## ########] # ######### # ######## ###### 
            ####### ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ############# ### ######### [######## ########] # ######### # ######## ###### 
            ####### ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ############# ### ######### [######## ########] # ######### # ######## ###### 
            ####### ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### ############# ### ######### [######## ########] # ######### # ######## ###### 
            ####### ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### #########, ###### ## ######## ######### ####### # ########, ###### ####### 
            ######## ##### ######## ########### #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsBetween(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ####### ############# ### ######### [######## ########] # ######### # ######## ###### 
            ####### ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>####### ####### ####### <see cref="T:Terrasoft.Core.DB.QueryCondition"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(System.String)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ######### ### ####### # ######## ###########. 
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(System.String,System.String)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ########## ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ########## #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.And(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ####### #### [######## #########] ######### # ######## ####### ####### ######### 
            ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(System.String,System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ########## #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.IsLike(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## # ########] # # ######## ####### 
            ############# ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######, .</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(System.String,System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ########## #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.StartsWith(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ####### ######### ######### #### [########## ##########] # # ######## ####### ######### 
            ############# ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(System.String,System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ######### ### ####### # ######## ########### ## ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ########## #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.ConsistsWith(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ####### ######### ######### #### [######## #########] # # ######## ####### ######### 
            ############# ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(System.String,System.String)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ######### ### ####### # ######## ########### ## ########## #########.</summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ######### ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ######### ### ########### ######### #######.
            </summary>
            <param name="parameter">######## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ########## #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.EndsWith(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            # ####### ####### ####### ######### ######### #### [############# ##########] # # ######## ####### 
            ######### ############# ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ############# ########### #######.
            </summary>
            <param name="sourceColumnAliases">############# ########### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.String[])">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ####### ########### #######.
            </summary>
            <param name="sourceColumnAliases">###### ########### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryParameter})">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ############# ########## #######.
            </summary>
            <param name="parameters">############# ########## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.QueryParameter[])">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ####### ########## #######.
            </summary>
            <param name="parameters">###### ########## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.QueryColumnExpression})">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ############# ######### #######.
            </summary>
            <param name="columnExpressions">############# ######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(System.Collections.Generic.IEnumerable{Terrasoft.Core.DB.IQueryColumnExpressionConvertible})">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ############# ######### #######.
            </summary>
            <param name="expressions">############# ######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ####### ######### #######.
            </summary>
            <param name="columnExpressions">###### ######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.In(Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            # ####### ####### ####### ############# ######### #### [###### # ##### ########] # ######### # ###### ##### 
            ####### ######### ### ######### ####### ######### #######.
            </summary>
            <param name="expressions">###### ######### #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Exists(Terrasoft.Core.DB.Select)">
            <summary>
            # ####### ####### ####### ############# ######### #### [########## ## ######### #######] # ######### # 
            ######## ####### ######## ######### ### ########### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Exists(Terrasoft.Core.DB.Query)">
            <summary>
            # ####### ####### ####### ############# ######### #### [########## ## ######### #######] # ######### # 
            ######## ####### ######## ######### ### ########### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryCondition.Exists(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            # ####### ####### ####### ############# ######### #### [########## ## ######### #######] # ######### # 
            ######## ####### ######## ########## #########.
            </summary>
            <param name="columnExpression">#########.</param>
            <returns>######### ####### <see cref="T:Terrasoft.Core.DB.Query"/>, ######## ########### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryExecutor.ExecuteReaderForCustomQuery(Terrasoft.Core.DB.CustomQuery,System.Action{System.Data.IDataReader})">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DB.QueryFunction">
            <summary>
            ####### ##### ####### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Negate(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######### ######## ########## #######.
            </summary>
            <param name="operand">####### #########.</param>
            <returns>######### #######, ############## ######### ####### ######### <paramref name="operand"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_UnaryNegation(Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######### ########## ####### #########.
            </summary>
            <param name="operand">####### #########.</param>
            <returns>######### ######## ####### ######### <paramref name="operand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Add(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ############### ######## ########## ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ######## ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ##### ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Addition(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######## #### ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ######## ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ##### ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Subtract(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######### ########## ###### ####### ######### ## ########## ##### ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ####### #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ######## ##### ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Subtraction(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######### ###### ####### ######### ## ###### ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ######## #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ######## ##### ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Multiply(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######### ########## ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ######## #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ########## ############# ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Multiply(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ######### #### ####### #########.
            </summary>
            <param name="leftOperand">####### ####### - ##### ####### # ######## #########.</param>
            <param name="rightOperand">####### ####### - ###### ####### # ######## #########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ############ ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Divide(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ####### ########## ##### ####### ######### ## ########## ###### ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## #######.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ######## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ####### ## ####### ######## 
            <paramref name="leftOperand"/> ## ####### <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.op_Division(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryFunction)">
            <summary>
            ########## ######### ####### ####### #########.
            </summary>
            <param name="leftOperand">####### ######### - ##### ####### # ######## #######.</param>
            <param name="rightOperand">####### ######### - ###### ####### # ######## #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/>, ############## ####### ## ####### ######## 
            <paramref name="leftOperand"/> ## ####### <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.Clone">
            <summary>
            ####### ##### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.QueryFunction"/>, ############## ##### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ########## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### 
            ##### #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ########## ######### ########## # ######### #######.
            </summary>
            <param name="resultParameters">######### ########## #######, ####### ########### # ######### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.GetQueryColumnExpressions">
            <summary>
            ########## ######### ######### ####### ####### ### ####### ####### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryFunction.GetQueryColumnExpression">
            <summary>
            ########## ######### ####### ####### ### ####### ####### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### ####### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.AggregationEvalType">
            <summary>
            ####### ########## ############ #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.AggregationEvalType.None">
            <summary>
            ####### ## ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.AggregationEvalType.All">
            <summary>
            ########### ## #### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.AggregationEvalType.Distinct">
            <summary>
            ########### # ########## #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.AggregationQueryFunction">
            <summary>
            ############ ####### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/> # ######## ##### ############ ####### 
            ### ########## ######### #######.
            </summary>
            <param name="aggregationType">### ############ #######.</param>
            <param name="expression">######### #######, # ######## ########### ############ #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/> # ######## ##### ############ ####### 
            ### ########## #########.
            </summary>
            <param name="aggregationType">### ############ #######.</param>
            <param name="expression">#########, # ######## ########### ############ #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.#ctor(Terrasoft.Core.DB.AggregationQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>, ########## ###### ########## 
            ############ ####### #########.
            </summary>
            <param name="source">############ ####### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.AggregationQueryFunction.AggregationType">
            <summary>
            ### ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.AggregationQueryFunction.AggregationEvalType">
            <summary>
            ####### ########## ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.AggregationQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########### <see cref="T:System.Text.StringBuilder"/> # 
            ########### #######<see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ########## ######### ########## # ######### #######.
            </summary>
            <param name="resultParameters">######### ########## #######, ####### ########### # ######### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.All">
            <summary>
            ############# ### ####### ############ ####### ####### ########## [## #### #########].
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.AggregationQueryFunction.Distinct">
            <summary>
            ############# ### ####### ############ ####### ####### ########## [# ########## #########].
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.AggregationQueryFunction"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.IsNullQueryFunction">
            <summary>
            ####### ### ###### ######## <c>null</c> ########## ##########. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/> ### ######## ############ ######### # 
            ########### #########.
            </summary>
            <param name="checkExpression">#########, ####### ########### ## ######### <c>null</c>.</param>
            <param name="replacementExpression">#########, ####### ############ ########, #### 
            <paramref name="checkExpression"/> ##### <c>null</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/> ### ######## ############ ######### # 
            ########### #########.
            </summary>
            <param name="checkExpression">#########, ####### ########### ## ######### <c>null</c>.</param>
            <param name="replacementExpression">#########, ####### ############ ########, #### 
            <paramref name="checkExpression"/> ##### <c>null</c>.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ###### ## ########## 
            <paramref name="checkExpression"/> ### <paramref name="replacementExpression"/> ######## ######## 
            <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.#ctor(Terrasoft.Core.DB.IsNullQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>, ########## ###### ########## 
            ####### #########.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.IsNullQueryFunction.CheckExpression">
            <summary>
            ######### ######### #######, ####### ########### ## ######### ######## <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.IsNullQueryFunction.ReplacementExpression">
            <summary>
            ######### ######### #######, ####### ############, #### ########### ######### ##### <c>null</c>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########### <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ########## ######### ########## # ######### #######.
            </summary>
            <param name="resultParameters">######### ########## #######, ####### ########### # ######### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.IsNullQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.IsNullQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CreateGuidQueryFunction">
            <summary>
            ####### ######### ###### ##############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.#ctor(Terrasoft.Core.DB.CreateGuidQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>, ########## ###### ########## 
            #######. 
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########### <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ####### # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CreateGuidQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.CreateGuidQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction">
            <summary>
            ####### ######### ####### #### # #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.#ctor(Terrasoft.Core.DB.CurrentDateTimeQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>, ########## ###### ########## 
            #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########### <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CurrentDateTimeQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.CurrentDateTimeQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CoalesceQueryFunction">
            <summary>
            ####### ######## ####### ######### ## ###### ##########, ## ####### <c>null</c>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.CoalesceQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/> ### ########## ######### ######### 
            #######.
            </summary>
            <param name="expressions">######### ######### ####### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expressions"/> ######## 
            ######## <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### ######### <paramref name="expressions"/> ## ######## ## 
            ###### ######### #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/> ### ########### ####### ######### 
            #######.
            </summary>
            <param name="expressions">###### ######### ####### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expressions"/> ######## 
            ######## <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### ###### <paramref name="expressions"/> ## ######## ## ###### 
            ######### #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/> ### ########### ####### #########
            #######.
            </summary>
            <param name="expressions">###### ######### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expressions"/> ######## 
            ######## <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### ###### <paramref name="expressions"/> ## ######## ## ###### 
            ######### #######.</exception>
        </member>
        <member name="P:Terrasoft.Core.DB.CoalesceQueryFunction.Expressions">
            <summary>
            ######### ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########### <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ###### # # #### ######.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ########## ####### ## ######## ## ###### 
            #########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CoalesceQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.CoalesceQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DatePartQueryFunctionInterval">
            <summary>
            ##### ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Day">
            <summary>
            ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Week">
            <summary>
            ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Month">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Year">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Weekday">
            <summary>
            #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.Hour">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DatePartQueryFunctionInterval.HourMinute">
            <summary>
            ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DatePartQueryFunction">
            <summary>
            ####### ######### ##### ######## #### ####/#####. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/> # ######## ########## ####### #### 
            ####/##### # ######### ###### ####.
            </summary>
            <param name="interval">##### ####.</param>
            <param name="expression">######### ####### #### ####/#####.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/> # ######## ########## ####### #### 
            ####/##### # ######### ###### ####.
            </summary>
            <param name="interval">##### ####.</param>
            <param name="expression">######### ####### #### ####/#####.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.DatePartQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DatePartQueryFunction.Interval">
            <summary>
            ##### ####, ############ ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DatePartQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DateAddQueryFunction">
            <summary>
            ####### ######### ####, ########## ##### ########## ########## ########## ####### # ######## ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/> # ######### ###########.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="number">########, ####### ########### # <paramref name="interval"/>.</param>
            <param name="expression">######### #######, ########## ######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/> # ######### ###########.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="numberExpression">########, ####### ########### # <paramref name="interval"/>.</param>
            <param name="expression">######### #######, ########## ######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DatePartQueryFunctionInterval,System.Int32,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/> # ######### ###########.
            </summary>
            <param name="interval">##### ####, # ####### ########### ######### ##########.</param>
            <param name="number">########, ####### ########### # <paramref name="interval"/>.</param>
            <param name="expression">######### #######, ########## ######## ####.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### ######## ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.#ctor(Terrasoft.Core.DB.DateAddQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.DB.DateAddQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.DateAddQueryFunction.Expression">
            <summary>
            ######### #######, ########## ######## ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateAddQueryFunction.Interval">
            <summary>
            ##### ####, # ####### ########### ######### ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateAddQueryFunction._number">
            <summary>
            ########### ######### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateAddQueryFunction.NumberExpression">
            <summary>
            #########, ########## ########### ######### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Adds the passed parameter collection to the function arguments.
            </summary>
            <param name="resultParameters">A collection of query parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateAddQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DateDiffQueryFunctionInterval">
            <summary>
            ####### ######### ####### ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Year">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Month">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Day">
            <summary>
            ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Hour">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.DateDiffQueryFunctionInterval.Minute">
            <summary>
            ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.DateDiffQueryFunction">
            <summary>
            ####### ######### ####### ###, ########### ##### ######### ######## ###.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/> # ######### ###########.
            </summary>
            <param name="interval">####### ######### ####### ###.</param>
            <param name="startDateExpression">######### #######, ########## ######### ####.</param>
            <param name="endDateExpression">######### #######, ########## ######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor(Terrasoft.Core.DB.DateDiffQueryFunctionInterval,Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/> # ######### ###########.
            </summary>
            <param name="interval">####### ######### ####### ###.</param>
            <param name="startDateExpression">######### #######, ########## ######### ####.</param>
            <param name="endDateExpression">######### #######, ########## ######## ####.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### ######## ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.#ctor(Terrasoft.Core.DB.DateDiffQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.DateDiffQueryFunction.StartDateExpression">
            <summary>
            ######### #######, ########## ######### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateDiffQueryFunction.EndDateExpression">
            <summary>
            ######### #######, ########## ######## ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.DateDiffQueryFunction.Interval">
            <summary>
            ####### ######### ####### ###, ############ ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DateDiffQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.DatePartQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.DateDiffQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CastQueryFunction">
            <summary>
            ####### ########## ######### ######### # ######### #### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/> # ######### ########## ####### # ####### 
            ##### ######.
            </summary>
            <param name="expression">######### #######.</param>
            <param name="castType">####### ### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,Terrasoft.Core.DBDataValueType)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/> # ######### ########## ####### # ####### 
            ##### ######.
            </summary>
            <param name="expression">######### #######.</param>
            <param name="castType">####### ### ######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.#ctor(Terrasoft.Core.DB.CastQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.CastQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.CastQueryFunction.CastType">
            <summary>
            ####### ### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CastQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.CastQueryFunction"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.UpperQueryFunction">
            <summary>
            ####### ### ############## ######## ######### ######### # ######## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.#ctor(Terrasoft.Core.DB.UpperQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.UpperQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.UpperQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.UpperQueryFunction"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.CustomQueryFunction">
            <summary>
            Custom function.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.#ctor">
            <summary>
            Instantiates new intance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.#ctor(System.String,Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            Instantiates new intance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction" /> with function name 
            and given column expressions collection.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="expressions">Column expressions.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.#ctor(System.String,Terrasoft.Core.DB.QueryColumnExpression[])">
            <summary>
            Instantiates new intance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction" /> with function name 
            and given column expressions collection.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="expressions">Column expressions.</param>
            <exception cref="T:System.ArgumentNullException">expressions</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">If array <paramref name="expressions" /> 
            is empty.</exception>
            <exception cref="T:System.ArgumentNullException">If array <paramref name="expressions" />
            is <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.#ctor(System.String,Terrasoft.Core.DB.IQueryColumnExpressionConvertible[])">
            <summary>
            Instantiates new intance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction" /> with function name 
            and given column expressions collection.
            </summary>
            <param name="functionName">Name of the function.</param>
            <param name="expressions">Column expressions.</param>
            <exception cref="T:System.ArgumentNullException">expressions</exception>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">If array <paramref name="expressions" /> is empty.</exception>
            <exception cref="T:System.ArgumentNullException">If array <paramref name="expressions" /> 
            is <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.#ctor(Terrasoft.Core.DB.CustomQueryFunction)">
            <summary>
            Instantiates new intance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction"/> with given custom function.
            </summary>
            <param name="source">Function <see cref="T:Terrasoft.Core.DB.CustomQueryFunction"/>, clone of which will be created.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.CustomQueryFunction.Expressions">
            <summary>
            Function column expression.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Forms sql query text with given <see cref="T:System.Text.StringBuilder"/> and <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Instance of <see cref="T:System.Text.StringBuilder"/>, which forms sql text.</param>
            <param name="dbEngine">Instance of db engine.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Adds given parameters to collection.
            </summary>
            <param name="resultParameters">Query parameters #ollection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.CustomQueryFunction.Clone">
            <summary>
            Clones current instance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction"/>.
            </summary>
            <returns>New cloned instance of <see cref="T:Terrasoft.Core.DB.CustomQueryFunction"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.DataLengthQueryFunction">
            <summary>
            ####### ### ########### ##### ######, ############## ### ############# #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="columnNameExpression">######### ####### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="columnNameExpression"/> 
            ######## ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.#ctor(Terrasoft.Core.DB.DataLengthQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.DataLengthQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.DataLengthQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.TrimQueryFunction">
            <summary>
            ####### ### ######## ######### # ######## ######## ## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.#ctor(Terrasoft.Core.DB.TrimQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.TrimQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.TrimQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.TrimQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.DataLengthQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.LengthQueryFunction">
            <summary>
            ####### ### ######## ##### #########.
            </summary>
            <remarks>##### ########## # ######## #########, ############### #### ###### #########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/> ### ######### ######### #######.
            </summary>
            <param name="expression">######### ####### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expression"/> ######## 
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.#ctor(Terrasoft.Core.DB.LengthQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.LengthQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.LengthQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.LengthQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.SubstringQueryFunction">
            <summary>
            Function which gets part of a string.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SubstringQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.Int32,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.DB.SubstringQueryFunction"/> class with specified column expression,
            substring start position and length.
            </summary>
            <param name="expression">Column expression.</param>
            <param name="start">Substring start position.</param>
            <param name="length">Substring length</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SubstringQueryFunction.#ctor(Terrasoft.Core.DB.IQueryColumnExpressionConvertible,System.Int32,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.DB.SubstringQueryFunction"/> class with specified column expression,
            substring start position and length.
            </summary>
            <param name="expression">Column expression.</param>
            <param name="start">Substring start position.</param>
            <param name="length">Substring length</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SubstringQueryFunction.#ctor(Terrasoft.Core.DB.SubstringQueryFunction)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.DB.SubstringQueryFunction"/> class by source function cloning.
            </summary>
            <param name="source">Source function.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.SubstringQueryFunction.Expression">
            <summary>
            Column expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.SubstringQueryFunction.StartExpression">
            <summary>
            Substring start position.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.SubstringQueryFunction.LengthExpression">
            <summary>
            Substring length
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SubstringQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Generates the request body using <see cref="T:System.Text.StringBuilder"/> and <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">Instance of the <see cref="T:System.Text.StringBuilder"/>, which used in query builder.</param>
            <param name="dbEngine">Instance of the <see cref="T:Terrasoft.Core.DB.DBEngine"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SubstringQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Adds collection of query parameters to the function.
            </summary>
            <param name="resultParameters">Collection of query parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SubstringQueryFunction.Clone">
            <summary>
            Creates clone of the current instance <see cref="T:Terrasoft.Core.DB.SubstringQueryFunction"/>
            </summary>
            <returns>New instance <see cref="T:Terrasoft.Core.DB.SubstringQueryFunction"/>, that is a clone of the current 
            instance</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.ConcatQueryFunction">
            <summary>
            ####### ### ############ ######, ########## ########### ########### ######### ######## ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.#ctor(Terrasoft.Core.DB.QueryColumnExpressionCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/> ### ########## ######### #########.
            </summary>
            <param name="expressions">######### ######### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="expressions"/> ######## 
            ######## <c>null</c> #### ######### <paramref name="expressions"/> ## ######## ## ###### ########.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.#ctor(Terrasoft.Core.DB.ConcatQueryFunction)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>, ########## ###### ########## #######.
            </summary>
            <param name="source">####### <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.ConcatQueryFunction.Expressions">
            <summary>
            ######### ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            ######### ##### ####### # ############## ######## ########## <see cref="T:System.Text.StringBuilder"/> # 
            ########### ######## <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
            <param name="dbEngine">######### ########### ######## # #### ######.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ########## ####### ## ######## ## ###### 
            #########.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.AddUsingParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### # ######### ####### ########## ######### ##########.
            </summary>
            <param name="resultParameters">######### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.ConcatQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.ConcatQueryFunction"/>, ########## ###### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.WindowQueryFunction">
            <summary>
            SQL window function.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.WindowQueryFunction.InnerFunction">
            <summary>
            Function to apply.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.WindowQueryFunction.PartitionByExpression">
            <summary>
            Partition by clause.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.WindowQueryFunction.OrderByExpression">
            <summary>
            Order by clause.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.WindowQueryFunction.BuildSqlText(System.Text.StringBuilder,Terrasoft.Core.DB.DBEngine)">
            <summary>
            Build window function sql text.
            </summary>
            <param name="sb">string builder.</param>
            <param name="dbEngine">DBEngine instance.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.WindowQueryFunction.Clone">
            <summary>
            Clone current object.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryParameter">
            <summary>
            ############ ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.Object)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ######## #########.
            </summary>
            <param name="value">######## ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.Object)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ######### ###### # #########.
            </summary>
            <param name="name">### ######### #######.</param>
            <param name="value">######## ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ######## ###### # ######## ######### 
            ############# #### ######.
            </summary>
            <param name="name">### ######### #######.</param>
            <param name="value">######## ######### #######.</param>
            <param name="valueType">### ###### ######## ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.Object,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ######## ###### # ######## ######### 
            ############# #### ######.
            </summary>
            <param name="name">### ######### #######.</param>
            <param name="value">######## ######### #######.</param>
            <param name="valueTypeName">### #### ###### ######## ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(System.String,System.IO.Stream)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ######## ###### # ######## ######### #### 
            <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="name">### ######### #######.</param>
            <param name="streamValue">######## ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.#ctor(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, ########## ###### ######### ########## 
            <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.
            </summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.Name">
            <summary>
            ### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.IsAutoName">
            <summary>
            #######, ############, ############ ## ### ######### ####### #############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.IsAutoAdded">
            <summary>
            #######, ######## ## ######## ####### ############# ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.Value">
            <summary>
            ######## ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.ValueType">
            <summary>
            ### ######## ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.ValueTypeName">
            <summary>
            ### #### ######## ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.Direction">
            <summary>
            ########### ######## ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameter.ParentParametrizedQuery">
            <summary>
            ############ ######, ######## ########### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.Equals(System.Object)">
            <summary>
            ##########, ##### ## ###### ######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ######## ######### 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">######### <see cref="T:System.Object"/>, ####### ############ # ####### ########### 
            <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.</param>
            <returns><c>true</c>, #### ############ ####### ##### ######## #####, # ### <paramref name="obj"/> 
            ######### # ###### ######## ####### <see cref="T:Terrasoft.Core.DB.QueryParameter"/>; ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.GetHashCode">
            <summary>
            ########## ###-### #######.
            </summary>
            <returns>###-### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameter.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryParameter"/>.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryParameterCollection">
            <summary>
            ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.#ctor(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>, ########## ###### ######## 
            ######### ########## #######.
            </summary>
            <param name="source">######### ########## #######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QueryParameterCollection.ParentParametrizedQuery">
            <summary>
            ############ ######, ######## ########### ###### ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.QueryParameterCollection"/>, ############## ##### ######## ##########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.ResetParameters">
            <summary>
            ####### ######### ########## #######, ####### #### ######### #############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.GenerateUniqueName(System.String)">
            <summary>
            ## ######### ######## ########## ########## ### ######### #######.
            </summary>
            <param name="parameterNamePrefix">####### ##### ######### #######.</param>
            <returns>########## ### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.GenerateUniqueNames">
            <summary>
            ########## ########## ##### ### #### ######### ####### ######### ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.FindByName(System.String)">
            <summary>
            # ####### ######### ########## ####### ######### ##### ######### # ######## ######.
            </summary>
            <param name="name">### ######## ######### #######.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### <paramref name="name"/> #### 
            <c>null</c>, #### ######## # ##### ###### ## ###### # #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.GetByName(System.String)">
            <summary>
            ## ####### ######### ########## ####### ########## ######## # ######## ######. #### ######## ## ###### # 
            #########, ############ ##########.
            </summary>
            <param name="name">### ############# ######### #######.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### <paramref name="name"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### ########## ####### ## ###### 
            ######## # ###### <paramref name="name"/>.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="name"/> ######## 
            ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Add(System.String,System.Object)">
            <summary>
            # ####### ######### ########## ####### ######### ######## # ######### ###### # #########.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="value">######## ############ ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######## <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # 
            ###### <paramref name="name"/> # ######### <paramref name="value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Add(System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            # ####### ######### ########## ####### ######### ######## # ######## ###### # ######## #########, ####### 
            ##### ############ ### ######.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="value">######## ############ ######### #######.</param>
            <param name="parameterType">### ###### ######## ############ ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######## <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### 
            <paramref name="name"/> # ######### <paramref name="value"/>, ####### ##### ### ###### 
            <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.Add(System.String,System.Object,System.String)">
            <summary>
            # ####### ######### ########## ####### ######### ######## # ######## ###### # ######## #########, ####### 
            ##### ### ###### # ######### ######.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="value">######## ############ ######### #######.</param>
            <param name="parameterTypeName">### #### ###### ######## ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######## <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### 
            <paramref name="name"/>, ######### <paramref name="value"/>, ####### ##### ### ###### # ###### 
            <paramref name="parameterTypeName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddOut(System.String,Terrasoft.Core.DataValueType)">
            <summary>
            # ####### ######### ########## ####### ######### ######### ######## # ######## ###### # ######## ##### 
            ###### ######## #########.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="parameterType">### ###### ######## ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######### ######## 
            <see cref="T:Terrasoft.Core.DB.QueryParameter"/>, ######## ######## ##### ### ###### <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddOut(System.String,System.String)">
            <summary>
            # ####### ######### ########## ####### ######### ######### ######## # ######### ###### ######### # ###### 
            #### ###### ######## #########.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="parameterTypeName">### #### ###### ######## ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######## <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### 
            <paramref name="name"/> # ###### ######## #### ###### ######### <paramref name="parameterTypeName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddVar(System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            # ####### ######### ########## ####### ######### ########/######### ######## # ######### ######, ######### 
            # ##### ########.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="value">######## ############ ######### #######.</param>
            <param name="parameterType">### ###### ######## ############ ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######## <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### 
            <paramref name="name"/>, ######### <paramref name="value"/> # ##### ######## 
            <paramref name="parameterType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterCollection.AddVar(System.String,System.Object,System.String)">
            <summary>
            # ####### ######### ########## ######## ######### ########/######### ######## # ######### ######, ######### 
            # ###### #### ###### ######## #########.
            </summary>
            <param name="name">### ############ ######### #######.</param>
            <param name="value">######## ############ ######### #######.</param>
            <param name="parameterTypeName">### #### ###### ######## ############ ######### #######.</param>
            <returns>########### # ####### ######### ########## ####### ######## <see cref="T:Terrasoft.Core.DB.QueryParameter"/> # ###### 
            <paramref name="name"/>, ######### <paramref name="value"/> #### ###### # ###### 
            <paramref name="parameterTypeName"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryParameterUtilities">
            <summary>
            ############# ######### ###### ### ###### # ########### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.JoinCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ########## <c>Join</c> ## ########## ######### ##########.
            </summary>
            <param name="joins">######### ########## <c>Join</c> ########.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ########## ## 
            ######### <paramref name="joins"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryColumnExpressionCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ######### ####### ## ########## ######### #########.
            </summary>
            <param name="columnExpressions">######### ######### ####### #######.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ######### ## 
            ######### <paramref name="columnExpressions"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryCase,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ## ########### ######### <c>Case</c> #######.
            </summary>
            <param name="queryCase">######## <c>Case</c> #######.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ## ######### 
            <paramref name="queryCase"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QuerySourceExpression,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ## ########### ######### ######### ###### #######.
            </summary>
            <param name="sourceExpression">######### ######### ###### #######.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ## ######### 
            <paramref name="sourceExpression"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryFunction,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ## ########## ####### #######.
            </summary>
            <param name="queryFunction">####### #######.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ## ####### 
            <paramref name="queryFunction"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ## ########### ######### ####### #######.
            </summary>
            <param name="columnExpression">######### ####### #######.</param>
            <param name="resultParameters">######### ##########, # ####### ########### ######### ## ######### 
            <paramref name="columnExpression"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.ModifyQueryColumnValueCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ######## ####### ## ########## ######### ########.
            </summary>
            <param name="columnValues">######### ######## #######.</param>
            <param name="resultParameters">######### ##########, # ####### ########### ######### ######## ####### ## 
            ######### <paramref name="columnValues"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.OrderByItemCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ######### ########## ## ########## ######### #########. 
            </summary>
            <param name="orderByItems">######### ######### #######, ## ####### ########### ########## ###########.
            </param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ######### 
            ########## ## ######### <paramref name="orderByItems"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.QueryCondition,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ## ########### ####### #######.
            </summary>
            <param name="condition">####### #######, # ####### ########### ######### ##########.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ## ####### 
            <paramref name="condition"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryParameterUtilities.AddUsingParameters(Terrasoft.Core.DB.SelectQueryCollection,Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            ######### ######## ######### ########### ######## ## ####### ## ########## ######### ########.
            </summary>
            <param name="queries">######### ######## ## #######.</param>
            <param name="resultParameters">######### ########## #######, # ####### ########### ######### ######## ## 
            ####### ## ######### <paramref name="queries"/>.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.QuerySourceExpressionType">
            <summary>
            ### ######### ######### ###### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.SchemaName">
            <summary>
            ### ##### ######### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.SubSelect">
            <summary>
            ######### ## ####### ######### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.SqlText">
            <summary>
            Sql-##### ## ####### ######### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.QuerySourceExpressionType.TemporaryTable">
            <summary>
            Temporary table source.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.QuerySourceExpression">
            <summary>
            ######### ######### ###### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> ### ##### # ######## ######.
            </summary>
            <param name="schemaName">### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(System.String,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> ### ##### # ########## ###### # 
            ######## ########### #########.
            </summary>
            <param name="schemaName">### #####.</param>
            <param name="alias">######### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Select)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> ### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Select,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> ### ########### ########## ## ####### # 
            ######## ########### #########.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <param name="alias">######### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Query)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">#### ### ########## <paramref name="subSelectQuery"/> ######## 
            ## <see cref="T:Terrasoft.Core.DB.Select"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.Query,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/> ### ########### ############# ########## 
            # ######## ########### #########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <param name="alias">######### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.#ctor(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>, ########## ###### ########### #########.
            </summary>
            <param name="source">#########, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.ExpressionType">
            <summary>
            ### ######### ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.Alias">
            <summary>
            ######### ######### ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.SchemaName">
            <summary>
            ### ##### ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.SubSelect">
            <summary>
            ######### ## #######, ########### # ######## ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.QuerySourceExpression.SqlText">
            <summary>
            Sql-#####, ############ ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QuerySourceExpression.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.QuerySourceExpression"/>, ############## ##### ######## ##########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.QueryUtilities">
            <summary>
            Provides utility methods for working with queries to the database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.QueryUtilities.AddDBEngineCompatibleIsEqualCondition(Terrasoft.Core.DB.Query,Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,System.Object,System.Guid,Terrasoft.Common.LogicalOperation)">
            <summary>
            Adds to given query new condition for checking equality of schema column value and specified value, 
            according to column data type.
            </summary>
            <param name="query">Query to add condition to.</param>
            <param name="schema">Entity schema to add condition to.</param>
            <param name="conditionColumn">Entity schema column to add condition to.</param>
            <param name="conditionValue">Value to be compared with <paramref name="conditionColumn"/>.</param>
            <param name="logicalOperation">Logical operation, by which the condition is added to the query.</param>
            <param name="cultureId">Localization culture identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.PageableSelectDirection">
            <summary>
            ########### ############# ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.Prior">
            <summary>
            ########## ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.First">
            <summary>
            ###### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.Current">
            <summary>
            ####### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.PageableSelectDirection.Next">
            <summary>
            ######### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.PageableSelectCondition">
            <summary>
            ############ ####### ### ####### # ############ #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectCondition.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectCondition"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectCondition.#ctor(Terrasoft.Core.DB.PageableSelectCondition)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectCondition"/>, ########## ###### ########### 
            ####### #######.
            </summary>
            <param name="source">####### #######, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectCondition.LeftExpression">
            <summary>
            ######### ##### ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectCondition.OrderByItem">
            <summary>
            #########, ## ######## ########### ########## ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectCondition.LastValueParameter">
            <summary>
            ########, ############ ######## ######### ###### ########## ######## ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.PageableSelectOptions">
            <summary>
            ######### ############# ###### ########### #######. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> # ######### ########### ####### ## 
            ######## ###### # ############ ############# ######.
            </summary>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionColumnName">### #######, ### ####### ########### ####### #######.</param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## 
            ######### ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ######## ######.
            </param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionColumnName">### #######, ### ####### ########### ####### #######.</param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## 
            ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValueType">### ###### ######## ######### ###### ########## 
            ######## ######.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.String,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionColumnName">### #######, ### ####### ########### ####### #######.</param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## 
            ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValueTypeName">### #### ###### ######## ######### ###### 
            ########## ########.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.Int32)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionColumnName">### #######, ### ####### ########### ####### #######.</param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ########### ######## 
            ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ########.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionColumnName">### #######, ### ####### ########### ####### #######.</param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ########### ######## 
            ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValueType">### ###### ######## ######### ###### ########## 
            ########.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(System.String,System.String,System.Object,System.String,System.Int32)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionColumnName">### #######, ### ####### ########### ####### #######.</param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ########### ######## 
            ######### ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValueTypeName">### #### ###### ######## ######### ###### 
            ########## ########.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionSourceExpression">######### #######, ### ####### ########### ####### #######.
            </param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ########### ######## 
            ######### ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ########.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionSourceExpression">######### #######, ### ####### ########### ####### #######.
            </param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ########### ######## 
            ######### ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ######## ######.
            </param>
            <param name="primaryConditionLastValueParameterValueType">### ###### ######## ######### ######## ######.
            </param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.String,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionSourceExpression">######### #######, ### ####### ########### ####### #######.
            </param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## ######### 
            ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ######## ######.
            </param>
            <param name="primaryConditionLastValueParameterValueTypeName">### #### ###### ######## ######### ###### 
            ########## ######## ######.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.Int32)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionSourceExpression">######### #######, ### ####### ########### ####### #######.
            </param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## ######### 
            ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValue">######## ######### ###### ########## ######## ######.
            </param>
            <param name="rowCount">########## ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,Terrasoft.Core.DataValueType,System.Int32)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionSourceExpression">######### #######, ### ####### ########### ####### #######.
            </param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## ######### 
            ###### ########## ########.</param>
            <param name="primaryConditionLastValueParameterValue">######## ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValueType">### ###### ######## ######### ###### ########## 
            ######## ######.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.String,System.Int32)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryConditionSourceExpression">######### #######, ### ####### ########### ####### #######.
            </param>
            <param name="primaryConditionLastValueParameterName">### #########, ####### ######## ######## ######### 
            ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValue">######## ###### ########## ######## ######.</param>
            <param name="primaryConditionLastValueParameterValueTypeName">### #### ######## ######### ###### 
            ########## ######## ######.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.PageableSelectCondition,System.Int32,Terrasoft.Core.DB.PageableSelectDirection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/> ######### ###########.
            </summary>
            <param name="primaryCondition">####### #######.</param>
            <param name="rowCount">########## ####### ######## ######.</param>
            <param name="direction">########### ############# ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.#ctor(Terrasoft.Core.DB.PageableSelectOptions)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/>, ########## ###### ########### 
            ##########.
            </summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.DB.PageableSelectOptions"/>, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.PrimaryCondition">
            <summary>
            ######### ####### ####### # ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.HasPrimaryCondition">
            <summary>
            #######, ############, ##### ## ###### # ############ ####### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.RowCount">
            <summary>
            ########## ####### ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.RowsOffset">
            <summary>
            Number of rows to skip.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.Direction">
            <summary>
            ########### ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.OrderByItemsConditions">
            <summary>
            ######### ####### ### #########, ## ####### ########### ########## ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.PageableSelectOptions.HasOrderByItemsConditions">
            <summary>
            ##########, ############ ## # ####### ####### ### #########, ## ####### ########### ########## ########### 
            #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.SetPrimaryConditionProperties(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object)">
            <summary>
            ############# ######### ########## ####### ####### # ############ ####### ########## ########.
            </summary>
            <param name="leftExpression">######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### ######### ######## ######### ###### ########## ######## ######.
            </param>
            <param name="lastValueParameterValue">######## ######### ######### ###### ########## ######## ######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.SetPrimaryConditionProperties(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ############# ######### ########## ####### ####### # ############ ####### ########## ########.
            </summary>
            <param name="leftExpression">######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### ######### ######## ######### ###### ########## ######## ######.
            </param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <param name="lastValueParameterValueType">### ###### ######## ######### ###### ########## ######## ######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.SetPrimaryConditionProperties(Terrasoft.Core.DB.QueryColumnExpression,System.String,System.Object,System.String)">
            <summary>
            ############# ######### ########## ####### ####### # ############ ####### ########## ########.
            </summary>
            <param name="leftExpression">######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### ######### ######## ######### ###### ########## ######## ######.
            </param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <param name="lastValueParameterValueTypeName">### #### ###### ######## ######### ###### ########## ######## 
            ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.OrderByItem,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### ####### # ######### ########## ### ########### ######### ########## ########### #######.
            </summary>
            <param name="leftExpression">######### ##### ##### #######.</param>
            <param name="orderByItem">#########, ## ######## ########### ########## ########### #######.</param>
            <param name="lastValueParameter">########, ############ ######## ######### ###### ########## ######## 
            ######.</param>
            <returns>####### ### ######### ########## <paramref name="orderByItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(Terrasoft.Core.DB.QueryColumnExpression,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### ####### # ######### ########## ### #########, ## ####### ##### ########### ########## 
            ########### #######.
            </summary>
            <param name="leftExpression">######### ##### ##### #######.</param>
            <param name="lastValueParameter">########, ############ ######## ######### ###### ########## ######## 
            ######.</param>
            <returns>####### ### ######### ########## ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.Object)">
            <summary>
            ######### ####### # ######### ########## ### ######### ####### # ######### ######, ## ####### ##### 
            ########### ########## ########### #######.
            </summary>
            <param name="columnName">### #######, ### ####### ########### ######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### #########, ############# ######## ######### ###### ########## 
            ######## ######.</param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <returns>####### ### ######### ########## ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ######### ####### # ######### ########## ### ######### ####### # ######### ######, ## ####### ##### 
            ########### ########## ########### #######.
            </summary>
            <param name="columnName">### #######, ### ####### ########### ######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### #########, ############# ######## ######### ###### ########## 
            ######## ######.</param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <param name="lastValueParameterValueType">### ###### ######## ######### ###### ########## 
            ######## ######.</param>
            <returns>####### ### ######### ########## ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.Object,System.String)">
            <summary>
            ######### ####### # ######### ########## ### ######### ####### # ######### ######, ## 
            ####### ##### ########### ########## ########### #######.
            </summary>
            <param name="columnName">### #######, ### ####### ########### ######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### #########, ############# ######## ######### ###### 
            ########## ######## ######.</param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <param name="lastValueParameterValueTypeName">### #### ###### ######## ######### ###### ######## ######.
            </param>
            <returns>####### ### ######### ########## ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.String,System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ######### ####### # ######### ########## ### ######### ####### # ######### ###### ## 
            ########## #########, ## ####### ##### ########### ########## ########### #######.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnName">### #######, ### ####### ######### ######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### #########, ############# ######## ######### ###### ######## ######.
            </param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <param name="lastValueParameterValueType">### ###### ######## ######### ###### ######## ######.</param>
            <returns>####### ### ######### ########## ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.PageableSelectOptions.AddCondition(System.String,System.String,System.String,System.Object,System.String)">
            <summary>
            ######### ####### # ######### ########## ### ######### ####### # ######### ###### ## ########## #########, 
            ## ####### ##### ########### ########## ########### #######.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnName">### #######, ### ####### ########### ######### ##### ##### #######.</param>
            <param name="lastValueParameterName">### #########, ############# ######## ######### ###### ######## ######.
            </param>
            <param name="lastValueParameterValue">######## ######### ###### ########## ######## ######.</param>
            <param name="lastValueParameterValueTypeName">### #### ######## ######### ###### ######## ######.</param>
            <returns>####### ### ######### ########## ########### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.HierarchicalSelectOptions">
            <summary>
            ######### ########## ############# ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.HierarchicalSelectOptions.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.HierarchicalSelectOptions"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.HierarchicalSelectOptions.#ctor(Terrasoft.Core.DB.HierarchicalSelectOptions)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.HierarchicalSelectOptions"/>, ########## ###### ########### 
            ##########.
            </summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.DB.HierarchicalSelectOptions"/>, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.RootSourceAlias">
            <summary>
            Root table alias. Should be used for avoiding column name ambiguity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.PrimaryColumnName">
            <summary>
            Primary key column name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.ParentColumnName">
            <summary>
            Parent column name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.StartingPrimaryColumnCondition">
            <summary>
            ####### ## ######### #######, ############ ######### ###### # ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.HasStartingPrimaryColumnCondition">
            <summary>
            ####### ############, ##### ## ###### ####### ### ########### ######### ###### # ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.SelectType">
            <summary>
            Hierarchical select type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.MaxDepthParameter">
            <summary>
            ############ ####### ########### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.IsDistinct">
            <summary>
            ##########, ########## ## ###### ###### ########## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.IncludeLevelColumn">
            <summary>
            ##########, ##### ## ###### ########## ####### # ####### ###### ###### # ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.LevelColumnAlias">
            <summary>
            ######### ####### # ####### ###### ###### # ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.CreateCommonTableExpression">
            <summary>
            ##########, ##### ## ####### ### ####### ############## ####### ########## ######### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.HierarchicalSelectOptions.CommonTableExpressionName">
            <summary>
            ### ########### ########## ######### ############## #######.
            </summary>
            <remarks>## ######### ##### &lt;HierarchicalSelect&gt;</remarks>
        </member>
        <member name="T:Terrasoft.Core.DB.Select">
            <summary>
            ###### ## ####### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Select.ExecuteReaderReadMethod">
            <summary>
            ########## ######### ###### ########, ########### ### ###### ####### ###### #######.
            </summary>
            <param name="dataReader"></param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Select"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initialises a new instance of <see cref="T:Terrasoft.Core.DB.Select"/>, using given user's connection.
            </summary>
            <param name="userConnection">User's connection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.#ctor(Terrasoft.Core.UserConnection,System.Threading.CancellationToken)">
            <summary>
            Initialises a new instance of <see cref="T:Terrasoft.Core.DB.Select"/>, using given user's connection 
            and a <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
            <param name="userConnection">User's connection.</param>
            <param name="cancellationToken">Cancellation token to be passed to requests.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.#ctor(Terrasoft.Core.DB.Select)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Select"/>, ########## ###### ########### #######.
            </summary>
            <param name="source">###### ## ####### ######, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.IntoTable">
            <summary>
            Table name to store select result.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.IsDistinct">
            <summary>
            ##########, ########## ## ###### ###### ########## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.Columns">
            <summary>
            ######### ######### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.SourceExpression">
            <summary>
            ######### ######### ###### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.CanReadUncommitedData">
            <summary>
            #######, ############, ##### ## ######## # ########## ####### ######, ### ####### ## ######### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.OffsetFetchPaging">
            <summary>
            Determines if offset-fetch paging is using.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.RowsOffset">
            <summary>
            Number of rows to skip.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.QueryKind">
            <summary>
            Query kind, that is used to request special executor.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Select.QueryOptimize">
            <summary>
            Additional information about the query, that can by use to optimization 
            <see cref="T:Terrasoft.Core.DB.DBEngine"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(System.String,Terrasoft.Core.DB.QuerySourceExpressionType)">
            <summary>
            Adds query source expression, depending on storage type.
            </summary>
            <param name="sourceName">Source name</param>
            <param name="expressionType">Expression type.</param>
            <returns>Current <see cref="T:Terrasoft.Core.DB.Select"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Into(System.String)">
            <summary>
            Set regular table to store select execution result.
            </summary>
            <param name="tableName">Table name.</param>
            <returns>Current <see cref="T:Terrasoft.Core.DB.Select"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Into(System.String,Terrasoft.Core.DB.ModifyQuerySourceType)">
            <summary>
            Set table to store select execution result.
            </summary>
            <param name="tableName">Table name.</param>
            <param name="type">Select into type.</param>
            <returns>Current <see cref="T:Terrasoft.Core.DB.Select"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.GetSqlText">
            <summary>
            ########## sql-##### ######## #######.
            </summary>
            <returns>Sql-##### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            ######### ##### ####### # ############## ######### ########## <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.GetUsingParameters">
            <summary>
            ########## ######### ############ ######## ##########.
            </summary>
            <returns>######### ##########, ############ ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.Select"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.Select"/>, ############## ##### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteReader(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Executes SQL query using given instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/> 
            and returns <see cref="T:System.Data.IDataReader"/> for the resulting set of records.
            </summary>
            <param name="dbExecutor">Instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, to be used for SQL query.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/> 
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteReader(Terrasoft.Core.DB.DBExecutor,System.Data.CommandBehavior)">
            <summary>
            Executes SQL query using given instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/> 
            and returns <see cref="T:System.Data.IDataReader"/> for the resulting set of records.
            </summary>
            <param name="dbExecutor">Instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, to be used for SQL query.</param>
            <param name="behavior">Provides a description of the results of the query 
            and its effect on the database.</param>
            <returns>Instance implementing <see cref="T:System.Data.IDataReader"/>
            for the resulting set of records.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteReader(Terrasoft.Core.DB.Select.ExecuteReaderReadMethod)">
            <summary>
            ######### ###### ## ####### # ######## ########## ##### ######## ### ###### ###### ######.
            </summary>
            <param name="readMethod"></param>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteScalar``1">
            <summary>
            ######### ####### ###### ## ####### # ########## ############## ###### ####### ###### ###### 
            ############### ######, ############# ########.
            </summary>
            <typeparam name="TResult">### ############# ######## #######.</typeparam>
            <returns>###### ####### ###### ###### # ############## ###### #### <typeparamref name="TResult"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ExecuteScalar``1(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            ######### ########## ######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, ######### ####### ###### ## ####### # ########## 
            ############## ###### ####### ###### ###### ############### ######, ############# ########.
            </summary>
            <typeparam name="TResult">### ############# ######## #######.</typeparam>
            <param name="dbExecutor">######### <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, # ####### ######## ########### ###### # #### 
            ######.</param>
            <returns>###### ####### ###### ###### # ############## ###### ###### #### <typeparamref name="TResult"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Distinct">
            <summary>
            ######### # ######## ####### ## ####### ######## ##### Distinct. 
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Top(System.Int32)">
            <summary>
            ############# ########## ###### #######, ############ ############## ####### ######.
            </summary>
            <param name="rowCount">########## ###### ####### ############### ######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.As(System.String)">
            <summary>
            ######### ######### ######### ### ########## ######### ######### #######.
            </summary>
            <param name="alias">######### ######### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ##### ########## ## ###### ###### ## ####### [From] ### 
            [Columns].</exception>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(System.String)">
            <summary>
            ######### # ######### ######### ####### ######## ####### ######### ### ####### # ######## ###########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(System.String,System.String)">
            <summary>
            ######### # ######### ######### ####### ######## ####### ######### ### ####### # ######## ########### ## 
            ########## #########.
            </summary>
            <param name="sourceAlias">######### #########.</param>
            <param name="sourceColumnAlias">######### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ######### ######### ####### ######## ####### ######### ### ########### ########## ## #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ######### ######### ####### ######## ####### ######### ### ########### ############# ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryCase)">
            <summary>
            ######### # ######### ######### ####### ######## ####### ######### ### ########### ######### Case.
            </summary>
            <param name="queryCase">######## Case #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### # ####### ######### ######### ####### ######### ### ########### ######### #######.
            </summary>
            <param name="queryParameter">######## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### # ####### ######### ######### ####### ########## ######### #######.
            </summary>
            <param name="columnExpression">######### ####### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### # ####### ######### ######### ####### ########## #########.
            </summary>
            <param name="expression">#########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(System.String)">
            <summary>
            ######### # ######## ######### ######### ###### ######## ####### ##### # ######### ######.
            </summary>
            <param name="schemaName">### #####.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ######## ######### ######### ###### ######## ####### ######### ### ########### ########## ## 
            #######.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ######## ######### ######### ###### ######## ####### ######### ### ########### ############# 
            ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.From(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ######## ######### ######### ###### ######## ####### ########## #########.
            </summary>
            <param name="sourceExpression">######### ######### ###### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(System.String)">
            <summary>
            ######### # ####### ######## ##### # ######### ######, ######### ############ ##########.
            </summary>
            <param name="schemaName">### ########### #####.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ######## ######### ######### ## #######, ######### ############ ##########.
            </summary>
            <param name="subSelect">######### ## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ######## ######### ############ ##########, ######### ############ ##########.
            </summary>
            <param name="subSelectQuery">############ #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.CrossJoin(Terrasoft.Core.DB.QuerySourceExpression)">
            <summary>
            ######### # ####### ######## ######### #########, ######### ############ ##########.
            </summary>
            <param name="sourceExpression">######### ### ############### ######### ######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.ToPageable(Terrasoft.Core.DB.PageableSelectOptions)">
            <summary>
            ########### ####### ###### # ####### # ############ ############# ###### # ######### ###########.
            </summary>
            <param name="options">######### ############# ###### ########### #######.</param>
            <returns>###### ## ####### ###### # ############ #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Select.OffsetFetch(System.Int32,System.Int32)">
            <summary>
            Adds offset-fetch clause to select.
            </summary>
            <param name="rowsOffset">Number of rows to skip.</param>
            <param name="rowsCount">Number of rows to select.</param>
            <returns>Modified select.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.SelectQueryCollection">
            <summary>
            ######### ######## ## ####### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SelectQueryCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.SelectQueryCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SelectQueryCollection.#ctor(Terrasoft.Core.DB.SelectQueryCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.SelectQueryCollection"/>, ########## ###### ########## #########.
            </summary>
            <param name="source">######### ######## ## #######, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SelectQueryCollection.Clone">
            <summary>
            ####### #### ####### ######### ######## ## #######.
            </summary>
            <returns>##### ######### ######### ######## ## ####### <see cref="T:Terrasoft.Core.DB.SelectQueryCollection"/>, ########## 
            ###### ####### #########.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Sequence">
            <summary>
            Sequence object in database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Sequence"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.#ctor(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Sequence"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="name">Sequence name.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.#ctor(Terrasoft.Core.DB.Sequence)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Sequence"/> class. 
            Creates a new <see cref="T:Terrasoft.Core.DB.Sequence"/> object that is a copy of the <paramref name="source"/> instance.
            </summary>
            <param name="source"><see cref="T:Terrasoft.Core.DB.Sequence"/> instance.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Sequence.CachedSqlText">
            <summary>
            Cached sql text of next value query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Sequence.UserConnection">
            <summary>
            User connection.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.Sequence._dbEngine">
            <summary>
            Database engine.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Sequence.Name">
            <summary>
            Specifies the unique name by which the sequence is known in the database.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Sequence.StartWith">
            <summary>
            The first value returned by the object sequence.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Sequence.IncrementBy">
            <summary>
            Value that is increased (or decreased if it is negative) 
            value of the sequence of the object at each call <see cref="M:Terrasoft.Core.DB.Sequence.GetNextValue"/> method.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.GetNextValue">
            <summary>
            Generates a sequence number from the specified sequence object.
            </summary>
            <returns>Returns the number using type sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.GetCurrentValue">
            <summary>
            Get a current sequence number from the specified sequence object.
            </summary>
            <returns>Returns the number using type sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.GetCurrentValue(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Get a current sequence number from the specified sequence object.
            </summary>
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/>.</param>
            <returns>Returns the number using type sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.GetNextValue(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Generates a sequence number from the specified sequence object.
            </summary>
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/>.</param>
            <returns>Returns the number using type sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.ReCreate(System.Int32,System.Int32)">
            <summary>
            ReCreate a sequence from the specified sequence object with custom StartWith and IncrementBy property.
            <param name="startWith">Start value.</param>
            <param name="incrementBy">Increment value.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.ReCreate(Terrasoft.Core.DB.DBExecutor,System.Int32,System.Int32)">
            <summary>
            ReCreate a sequence from the specified sequence object with custom StartWith and IncrementBy property.
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/></param>
            <param name="startWith">Start value.</param>
            <param name="incrementBy">Increment value.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.ReCreate">
            <summary>
            ReCreate a sequence from the specified sequence object.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.ReCreate(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            ReCreate a sequence from the specified sequence object.
            </summary>
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Create">
            <summary>
            Creates a sequence object and specifies its properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Create(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Creates a sequence object and specifies its properties.
            </summary>
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Exist">
            <summary>
            Checks sequence existence in database.
            </summary>
            <returns>Returns value that indicates whether sequence object exists in database or not.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Exist(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Checks sequence existence in database.
            </summary>
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/>.</param>
            <returns>Returns value that indicates whether sequence object exists in database or not.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Drop">
            <summary>
            Removes a sequence object from the current database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Sequence.Drop(Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Removes a sequence object from the current database.
            </summary>
            <param name="dbExecutor">Database executor <seealso cref="T:Terrasoft.Core.DB.DBExecutor"/>.</param>
        </member>
        <member name="T:Terrasoft.Core.DB.SequenceMap">
            <summary>
            Sequence map, stores sequence objects.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.SequenceMap"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.#ctor(Terrasoft.Core.UserConnection,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.DB.Sequence})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.SequenceMap"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="sequences">Sequence dictionary.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Store.ICacheStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.SequenceMap"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="cacheStore">Cache store.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.SequenceMap.UserConnection">
            <summary>
            User connection.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.SequenceMap._cacheStore">
            <summary>
            Worspace cache store.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DB.SequenceMap._sequences">
            <summary>
            Sequence dictionary. The dictionary is thread-safe <seealso cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.GetByName(System.String)">
            <summary>
            Get sequence instance from map by sequence name in data base.
            </summary>
            <param name="sequenceName">Sequence name in data base.</param>
            <returns>Returns sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.CreateDefault(System.String)">
            <summary>
            Create default sequence in data base, with first value 1, increment 1 name <paramref name="sequenceName"/> 
            and return sequence instance.
            </summary>
            <param name="sequenceName">Sequence name in data base.</param>
            <returns>Returns sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.GetByNameOrDefault(System.String)">
            <summary>
            Get sequence instance from map by sequence name in data base or create default sequence in data base
            and return sequence instance.
            </summary>
            <param name="sequenceName">Sequence name in data base.</param>
            <returns>Returns sequence.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.CreateOrAlterSequence(System.String,System.Int32,System.Int32)">
            <summary>
            Create or recreate sequence with custom StartWith and IncrementBy property.
            </summary>
            <param name="sequenceName">Name of sequence.</param>
            <param name="startWith">Start value.</param>
            <param name="incrementBy">Increment value.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.Create(System.String,System.Int32,System.Int32)">
            <summary>
            Create sequence in data base and add it to sequence map.
            </summary>
            <param name="sequenceName">Name of sequence.</param>
            <param name="startWith">Start value.</param>
            <param name="incrementBy">Increment value.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.Create(Terrasoft.Core.DB.Sequence)">
            <summary>
            Create sequence in data base and add it to sequence map.
            </summary>
            <param name="sequence">Instance of sequence <see cref="T:Terrasoft.Core.DB.Sequence"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.SequenceMap.ClearCache">
            <summary>
            Clear sequence cache store.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DB.Source">
            <summary>
            ############# ######### ###### ### ###### # ########## ###### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Source.SqlText(System.String)">
            <summary>
            ########## ######### ######### ###### #######, ####### ########### ########## sql-##########.
            </summary>
            <param name="value">Sql-#########, ####### ######### ######## ######.</param>
            <returns>######### ######### ###### #######, ############## sql-########## <paramref name="value"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DB.Update">
            <summary>
            ###### ## ########## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DB.Update"/> class.
            </summary>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Update"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Update"/> ### ##### # ######### ######, ######### ######## 
            ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="schemaName">### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.DB.ModifyQuerySource)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Update"/> ### ########## ######### ######, ######### ######## 
            ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="source">######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.#ctor(Terrasoft.Core.DB.Update)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.DB.Update"/>, ########## ###### ########### #######.
            </summary>
            <param name="source">###### ## ##########, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.Update.Source">
            <summary>
            ######## ###### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.Update.ColumnValues">
            <summary>
            ######### ######## ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.GetSqlText">
            <summary>
            ########## sql-##### ######## #######.
            </summary>
            <returns>Sql-##### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.BuildSqlText(System.Text.StringBuilder)">
            <summary>
            ######### ##### ####### # ############## ######### ########## <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="sb">######### <see cref="T:System.Text.StringBuilder"/>, # ####### ######## ########### ##### 
            #######.</param>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.GetUsingParameters">
            <summary>
            ########## ######### ########## #######.
            </summary>
            <returns>######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.DB.Update"/>.
            </summary>
            <returns>##### ######### <see cref="T:Terrasoft.Core.DB.Update"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.Select)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ######### ### 
            ########### ########## ## #######.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="subSelect">######### ## #######</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.Query)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ######### ### 
            ########### ############# ##########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="subSelectQuery">############ #########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ########### 
            ######### #######.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="columnExpression">######### #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.IQueryColumnExpressionConvertible)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ########### 
            #########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="expression">#########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.Update.Set(System.String,Terrasoft.Core.DB.QueryParameter)">
            <summary>
            ######### # ####### ###### ########### SET ### ########## ####### # ######## ########### ########### 
            #########.
            </summary>
            <param name="sourceColumnAlias">######### #######.</param>
            <param name="parameter">######## #######.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.DB.Update"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DB.UpdateSelect">
            <summary>
            Query for update data from select.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpdateSelect.#ctor(Terrasoft.Core.UserConnection,System.String,System.String)">
            <summary>
            Initializes instance of <see cref="T:Terrasoft.Core.DB.UpdateSelect"/>.
            </summary>
            <param name="userConnection">Instance of user connection.</param>
            <param name="schemaName">Name of the table.</param>
            <param name="alias">Alias of the table.</param>
        </member>
        <member name="P:Terrasoft.Core.DB.UpdateSelect.SourceAlias">
            <summary>
            Alias of table to update.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DB.UpdateSelect.SourceExpression">
            <summary>
            Source expression for select query.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DB.UpdateSelect.GetSqlText">
            <summary>
            Returns sql-text of current query.
            </summary>
            <returns>Sql-text of current query.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.UpdateSelect.Set(System.String,Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            Adds SET expression to query for column with picked alias and expression
            of column value.
            </summary>
            <param name="sourceColumnAlias">Alias of the column.</param>
            <param name="columnExpression">Expression of column value.</param>
            <returns>Instance of current <see cref="T:Terrasoft.Core.DB.UpdateSelect"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DB.UpdateSelect.From(System.String,System.String)">
            <summary>
            Adds query source expression.
            </summary>
            <param name="schemaName">Source name</param>
            <param name="alias">Alias of source table.</param>
            <returns>Current <see cref="T:Terrasoft.Core.DB.UpdateSelect"/> instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition">
            <summary>
            Represents class for the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElement"/> transition, when element should be run
            after other <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElement"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.#ctor(Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition)">
            <summary>
            Creates a new instance with specified AfterDcmSchemaElementTransition.
            </summary>
            <param name="source">Instance that inherites the 
            <see cref="T:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.SourceElement">
            <summary>
            Gets <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElement"/> after which <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> should be run.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.SourceElementUId">
            <summary>
            Gets or sets <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElement"/> UId, after which <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/>
            should be run.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema" /> type.</param>
            <returns>
            Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement" /> type.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.Validate">
            <summary>
            Validates current transition instance
            </summary>
            <returns>
            <c>true</c>, if <see cref="P:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.SourceElementUId"/> is not empty <see cref="T:System.Guid"/>, and
            <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> has same <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaStage"/> as <see cref="P:Terrasoft.Core.DcmProcess.AfterDcmSchemaElementTransition.SourceElement"/>
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask">
            <summary>
            Flow element that that change dcm stage.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessUserTask" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask"/> class.
            <param name="userConnection">The user connection.</param>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.RecordId">
            <summary>
            Gets dcm entity record identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.EntitySchemaUId">
            <summary>
            Gets dcm entity schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.StageColumnUId">
            <summary>
            Gets stage column identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes the current element.
            </summary>
            <param name="context">Process executing context.</param>
            <returns><c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmBaseChangeStageUserTask.GetNextStageId(Terrasoft.Core.Entities.Entity)">
            <summary>
            Returns next stage record identifier.
            </summary>
            <param name="entity">Stage entity.</param>
            <returns>
            The new stage value with <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmChangeStageUserTask">
            <summary>
            Flow element that that change dcm stage.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessUserTask" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmChangeStageUserTask.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmChangeStageUserTask"/> class.
            <param name="userConnection">The user connection.</param>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmChangeStageUserTask.NextStageId">
            <summary>
            Gets next stage identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmChangeStageUserTask.GetNextStageId(Terrasoft.Core.Entities.Entity)">
            <summary>
            Returns next stage record identifier.
            </summary>
            <param name="entity">Stage entity.</param>
            <returns>
            The new stage value with <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmElementExtraDataBuilder">
            <inheritdoc/>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmElementExtraDataBuilder.Instance">
            <summary>
            Instance of the <inheritdoc cref="T:Terrasoft.Core.DcmProcess.DcmElementExtraDataBuilder"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmElementExtraDataBuilder.GetParentSchemaUId(Terrasoft.Core.Process.ProcessElementExtraData,System.Guid)">
            <summary>
            Returns the parent schema identifier from <paramref name="extraData"/> or <paramref name="defValue"/>
            if <paramref name="extraData"/> does not contain ParentSchemaUId property.
            </summary>
            <param name="extraData">The extra data.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmElementExtraDataBuilder.GetParentSchemaElementUId(Terrasoft.Core.Process.ProcessElementExtraData)">
            <summary>
            Returns the parent schema element identifier from <paramref name="extraData"/>.
            </summary>
            <param name="extraData">The extra data.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmElementExtraDataBuilder.Build(Terrasoft.Core.Process.ProcessElementNotification,Terrasoft.Core.Process.ProcessActivity)">
            <inheritdoc/>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmEntityUtilities">
            <summary>
            Utilities for entity dcm process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Constructor for DcmEntityUtilities class.
            </summary>
            <param name="userConnection"> User connection</param>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmEntityUtilities.DcmSchemaManager">
            <summary>
            Gets user connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmEntityUtilities.ProcessEngine">
            <summary>
            Gets process engine.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.GetRequiredUncompletedElements(Terrasoft.Core.DcmProcess.DcmSchemaStage,Terrasoft.Core.Process.Process)">
            <summary>
            Returns collection of required uncompleted elements caption for specified <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaStage"/>.
            </summary>
            <param name="stage">Stage</param>
            <param name="process">DCM process instance.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.GetIsItemEnabledForEntity(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.DcmProcess.DcmSchema},System.Guid)">
            <summary>
            Returns true - when dcm schema enabled and use for entity schema, false - otherwise.
            </summary>
            <param name="item">The dcm schema manager item.</param>
            <param name="entitySchemaUId">The entity schema unique identifier.</param>
            <returns><c>true</c> if dcm schema enabled and use for enitiy schema. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.GetCanEntityUseDcm(System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntityColumnValue})">
            <summary>
            Indicates whether the entity can use DCM process if the given columns changed.
            </summary>
            <param name="entitySchemaUId">The entity schema unique identifier.</param>
            <param name="changedColumns">The changed columns.</param>
            <returns><c>true</c> if the entity can use DCM process. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.FindEnabledDcmSchemas(System.Guid)">
            <summary>
            Finds all enabled DCM schemas for the given entity schema.
            </summary>
            <param name="entitySchemaUId">The entity schema unique identifier.</param>
            <returns>
            Schemas that is enabled for the given entity schema.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.ValidateDcmRequiredElement(Terrasoft.Core.Entities.Entity,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Returns validation information on required uncompleted dcm elements.
            </summary>
            <param name="entity">Entity.</param>
            <param name="processListeners">Process entity listeners</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmEntityUtilities.ValidateDcmStagePermissions(Terrasoft.Core.Entities.Entity,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Check stages permissions.
            </summary>
            <param name="entity">Entity.</param>
            <param name="processListeners">Process entity listeners</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator">
            <summary>
            Flow generator for the DCM process schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1" />
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.DcmFlowSchemaInfo">
            <summary>
            Represents information about DCM schema elements during current flow schema generation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.DcmFlowSchemaInfo.IntermediateCatchSignalUId">
            <summary>
            Gets or sets the intermediate catch signal identifier.
            </summary>
            <value>
            The intermediate catch signal identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.DcmFlowSchemaInfo.StartSignalUId">
            <summary>
            Gets or sets the start signal identifier.
            </summary>
            <value>
            The start signal identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.DcmFlowSchemaInfo.GatewayUId">
            <summary>
            Gets or sets the stage gateway identifier.
            </summary>
            <value>
            The stages gateway identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.DcmFlowSchemaInfo.TerminateEventUId">
            <summary>
            Gets or sets the terminate event identifier.
            </summary>
            <value>
            The terminate event identifier.
            </value>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.#ctor(Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator"/> class with the specified DCM schema.
            </summary>
            <param name="dcmSchema">Schema of the DCM process.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.ForceGetTransition(System.Guid)">
            <summary>
            Forcibly obtains element transition.
            </summary>
            <param name="elementUId">Dcm schema element identifier.</param>
            <returns>If <see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/> contains transition for element, returns it. Otherwise returns
            <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition"/> transition.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.GenerateProcessParameterMappings">
            <summary>
            Creates a table of process parameter mappings.
            </summary>
            <returns>Table of process parameter mappings.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmFlowSchemaGenerator.Generate">
            <summary>
            Generates the process flow schema.
            </summary>
            <returns>
            Process flow schema.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmInterpretationValidator">
            <inheritdoc cref="T:Terrasoft.Core.Process.BaseInterpretationValidator`1"/>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmInterpretationValidator.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instace of the <see cref="T:Terrasoft.Core.DcmProcess.DcmInterpretationValidator"/> type.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmInterpretationValidator.GetDefaultValidationRules(Terrasoft.Core.DcmProcess.DcmSchema)">
            <inheritdoc cref="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.GetDefaultValidationRules(`0)"/>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmPermissions.UserRoles">
            <summary>
            Current user roles identifiers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmPermissions.GetAvailableStagesUId(Terrasoft.Core.DcmProcess.DcmSchema,System.Collections.Generic.List{System.Guid})">
            <summary>
            Gets available stages unique identifiers.
            </summary>
            <param name="dcmSchema">Dcm schema unique identifier.</param>
            <param name="userRoles">List of user roles identifiers.</param>
            <returns>List of available stages unique identifiers.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmPermissions.GetCurrentUserRoles">
            <summary>
            Gets all roles for current user.
            </summary>
            <returns>Current user roles collection.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmPermissions.GetAllowedStagesForCurrentUser(Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Gets available stages unique identifiers for current user.
            </summary>
            <param name="dcmSchema"><see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/> instance.</param>
            <returns>List of available stages unique identifiers.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmPermissions.GetAllowedStagesForCurrentUser(System.Guid)">
            <summary>
            Gets available stages unique identifiers for current user.
            </summary>
            <param name="dcmSchemaUId">Dcm schema unique identifier.</param>
            <returns>List of available stages unique identifiers.</returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmProcessElementFactory">
            <summary>
            Implements interface <see cref="T:Terrasoft.Core.Process.IProcessElementFactory"/> for process based on dcm schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessElementFactory" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmProcessElementFactory.#ctor(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmProcessElementFactory"/> class.
            </summary>
            <param name="process">The process.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmProcessElementFactory.CreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmProcessElementFactory.CreateSubProcess(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchema">
            <summary>
            Represents class for the DCM process diagram.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            Creates a new instance with specified schema manager.
            </summary>
            <param name="schemaManager">Instance that implements the <see cref="T:Terrasoft.Core.ISchemaManager"/> interface.</param>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.DependencyFactory">
            <summary>
            Gets the dependency factory.
            </summary>
            <value>
            The dependency factory.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.BaseElements">
            <summary>
            Gets the base elements.
            </summary>
            <value>
            The base elements.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.UseBackgroundMode">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.StartSignal">
            <summary>
            Gets the start signal event schema.
            </summary>
            <value>
            The start signal event schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.IntermediateCatchSignal">
            <summary>
            Gets the intermediate catch signal event schema.
            </summary>
            <value>
            The intermediate catch signal event schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.DcmStageTransitionUserTask">
            <summary>
            Gets the stage transition user task.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.DefaultStage">
            <summary>
            Gets the default stage.
            </summary>
            <value>
            The default stage.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.TerminateEvent">
            <summary>
            Gets the terminate event schema.
            </summary>
            <value>
            The terminate event schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.SerializeToDB">
            <summary>
            Gets the flag that indicates whether the process needs to be serialized to DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.IsInterpretable">
            <summary>
            Gets whether the process is interpretable.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmSchema._parentSchemaUId">
            <summary>
            Gets or sets unique identifier of the parent schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.EntitySchemaUId">
            <summary>
            Gets stage entity schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.Enabled">
            <summary>
            Gets whether the schema is enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.StageColumnUId">
            <summary>
            Gets stage column identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.ParentSchema">
            <summary>
            Gets or sets the parent schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmSchema._stages">
            <summary>
            Gets stages of the current schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmSchema._stageConnections">
            <summary>
            Gets stage targets of the current schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmSchema._transitions">
            <summary>
            Gets elements transitions of the current schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmSchema._systemElements">
            <summary>
            Gets system elements of the current schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchema.Filters">
            <summary>
            Gets filters of the current schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.FindLastStage">
            <summary>
            Returns the last stage for the current schema.
            </summary>
            <returns>The last stage for the current schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.InitializeProperties">
            <summary>
            Initializes properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.GetStartSignalsMetaInfo">
            <summary>
            Gets the collection of meta information items for each start signal.
            </summary>
            <returns>
            The collection of meta information items for each start signal.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.GetIsEnabled">
            <summary>
            Returns the enabled state.
            </summary>
            <returns><c>true</c> if current schema is enabled; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.GetBaseSchemaElements">
            <summary>
            Gets the base schema elements.
            </summary>
            <returns>The base elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.GetIsFinalStage(Terrasoft.Core.DcmProcess.DcmSchemaStage)">
            <summary>
            Determines whether the specified stage is final.
            </summary>
            <param name="stage">The stage.</param>
            <returns><c>true</c>, if it is the final stage, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Fills collection with items of the meta data.
            </summary>
            <param name="metaItems">Collection of the meta items.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.SynchronizeParameters">
            <summary>
            Synchronizes element parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchema.AssignParentSchema(Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Assigns the given schema as a parent for the current one.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaBaseChangeStageUserTask">
            <summary>
            Element schema that change dcm stage.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask" />
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaBaseChangeStageUserTask.Parameters">
            <summary>
            Gets parameters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaBaseChangeStageUserTask.StageColumnUId">
            <summary>
            Gets stage column identifier.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaBaseElements">
            <summary>
            The class for the base elements of the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaBaseElements.#ctor(Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElements"/> class.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaBaseElements.FindByUId(System.Guid)">
            <summary>
            Finds the element by identifier.
            </summary>
            <param name="uid">The uid of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaBaseElements.FindByName(System.String)">
            <summary>
            Finds the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaChangeStageUserTask">
            <summary>
            Element schema that change dcm stage.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask" />
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaChangeStageUserTask.NextStageId">
            <summary>
            Gets next stage identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaChangeStageUserTask.CreateProcessElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates user task instance.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>User task instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaDependencyFactory">
            <summary>
            The class for the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/> dependency factory.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaDependencyFactory.#ctor(Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaDependencyFactory"/> class.
            </summary>
            <param name="dcmSchema">The DCM schema.</param>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaDependencyFactory.FlowSchemaGenerator">
            <summary>
            Gets the flow schema generator.
            </summary>
            <value>
            The flow schema generator.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaDependencyFactory.ElementExtraDataBuilder">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaDependencyFactory.CreateProcessElementFactory(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Creates the process element factory.
            </summary>
            <param name="process">The process instance.</param>
            <returns>
            The process element factory.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaElement">
            <summary>
            Represents class for the element of the DCM process schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.#ctor(Terrasoft.Core.DcmProcess.DcmSchemaElement)">
            <summary>
            Creates a new instance with specified DcmSchemaElement.
            </summary>
            <param name="source">Instance that inherites the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.#ctor(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <summary>
            Creates a new instance with specified process schema element.
            </summary>
            <param name="flowElement">Instance that inherites the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema" /> type.</param>
            <returns>
            Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement" /> type.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.GetOutgoingsDefaultFlows">
            <summary>
            Returns outgoing default sequence flows for the current element.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.GetOutgoingsDefaultFlows(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Returns outgoing default sequence flows for the specified element.
            </summary>
            <param name="flowNode">Process element.</param>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.GetOutgoingsConditionalFlows">
            <summary>
            Returns outgoing conditional sequence flows for the current element.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.GetOutgoingsConditionalFlows(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Returns outgoing conditional sequence flows for the specified element.
            </summary>
            <param name="flowNode">Process element.</param>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElement.ForceGetParameters">
            <summary>
            Forcibly obtains process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition">
            <summary>
            Represents class for the DcmSchemaElement transition.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.#ctor(Terrasoft.Core.DcmProcess.DcmSchemaElementTransition)">
            <summary>
            Creates a new instance with specified DefaultDcmSchemaElementTransition.
            </summary>
            <param name="source">Instance that inherites the <see cref="T:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition"/> type.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.#ctor">
            <summary>
            Creates new instance of <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.ElementUId">
            <summary>
            Gets or sets <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> UId for which transition
            are created.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.TargetElement">
            <summary>
            Gets <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> for which transition are created.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.SourceElement">
            <summary>
            Gets <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> after which
            <see cref="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.TargetElement"/> should be run. Returns <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaStage"/> of
            <see cref="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.TargetElement"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.IsDefault">
            <summary>
            Gets default transition flag.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.CheckIsValid">
            <summary>
            Throws exception if transition is not valid.
            </summary>
            <exception cref="T:Terrasoft.Common.ValidateException"></exception>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.FindElement(System.Guid)">
            <summary>
            Finds item by the specified unique identifier.
            </summary>
            <param name="elementUId">Element UId</param>
            <returns>
            Instance of <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.Validate">
            <summary>
            Validates current transition instance
            </summary>
            <returns>
            <c>true</c>, if <see cref="P:Terrasoft.Core.DcmProcess.DcmSchemaElementTransition.ElementUId"/> is not empty <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaManager">
            <summary>
            Represents class for the DCM schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaManager.ItemTypeName">
            <summary>
            Gets item name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaManager.CanUseUserProperties">
            <summary>
            Gets a value indicating whether this instance can use user properties.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaManager.SysSchemaUserPropertyRightsOperations">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaManager.ItemCaption">
            <summary>
            Gets item caption.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaManager.ResourceManagerName">
            <summary>
            Gets the name of the resource manager.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManager.InitializeDefSchema">
            <summary>
            Initializes the schema which is used as default parent schema.
            </summary>
            <returns>Default Dcm schema</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManager.CreateInterpretationValidator(Terrasoft.Core.UserConnection)">
            <summary>
            Gets the interpretation validator for process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>
            Interpretation validator instance.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManager.GetSchemaSources(Terrasoft.Core.DcmProcess.DcmSchema,System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Returns entity collection, which contains schema sources. Since the dcm schema has no sources it will
            return an empty collection.
            </summary>
            <param name="schema">The schema.</param>
            <param name="schemaId">The schema Id.</param>
            <param name="userConnection">The user connection.</param>
            <returns>Schema sources.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManager.CreateItem">
            <summary>
            Creates the item.
            </summary>
            <returns>Item instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManager.CheckOperationUserRights(Terrasoft.Core.UserConnection)">
            <summary>
            Checks user rights for manage schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Flag that indicates if user have rights</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManager.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem">
            <summary>
            <see cref="T:Terrasoft.Core.ISchemaManagerItem`1"/> implementation for <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaManager"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem.#ctor(Terrasoft.Core.DcmProcess.DcmSchemaManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem"/> class.
            </summary>
            <param name="manager">The manager.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem.#ctor(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.DcmProcess.DcmSchema},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem"/> class.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
            <param name="isShallowClone">
            Flag that indicates whether the item's instance will not be cloned too.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem.Clone">
            <summary>
            Create a deep copy of current item.
            </summary>
            <returns>Cloned item.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaManagerItem.CloneShallow">
            <summary>
            Create a shallow copy of current item without cloning schema instance.
            </summary>
            <returns>Cloned item.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.#ctor(Terrasoft.Core.DcmProcess.DcmSchemaStage)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmSchemaStage"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.ParentMetaSchema">
            <summary>
            Parent <see cref="T:Terrasoft.Core.MetaSchema"/> that contains this instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.ParentStageUId">
            <summary>
            Parent stage identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.Color">
            <summary>
            Color.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.Permissions">
            <summary>
            Stage permissions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.UsePermissions">
            <summary>
            Mark of stage permissions enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.StageRecordId">
            <summary>
            Stage record identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.IsSuccessful">
            <summary>
            Indicates if stage is successful.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.TransitionType">
            <summary>
            Next stage transition type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DcmProcess.DcmSchemaStage._elements">
            <summary>
            Gets elements of the current stage.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default stage schema. Default stage is used to
            run DCM process when current case entity moved to stage that is not described in current DCM schema.
            </summary>
            <value>
            <c>true</c> if this instance is default stage schema; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStage.IsAlternative">
            <summary>
            Gets flag that indicates alternative stage.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.InitializeLocalizableValues(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Initializes resources from the specified storage from the specified manager and resorce group name.
            </summary>
            <param name="storage">Resource storage.</param>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Returns localizable values list.
            </summary>
            <param name="values">Localizable values list.</param>
            <param name="includeInherited">Flag that indicates include inherited resources or not.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.LoadLocalizableValues">
            <summary>
            Loads localizable value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.CanSkipAutoTransition">
            <summary>
            Returns flag that indicates if stage has after transitions and required elements.
            </summary>
            <returns>Flag.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema" /> type.</param>
            <returns>
            Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement" /> type.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Fills collection with items of the meta data.
            </summary>
            <param name="metaItems">Collection of the meta items.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStage.CreateProcessElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates the process element.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>
            The process element instance.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DcmSchemaStagePermission.Permissions">
            <summary>
            Stage permissions identifiers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStagePermission.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStagePermission.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Reads meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStagePermission.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStagePermission.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStagePermission.GetPermissions">
            <summary>
            Get permissions of stage.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmSchemaStageTransitionUserTask">
            <summary>
            Element schema that moves dcm to the next stage.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaStageTransitionUserTask.CreateProcessElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates user task instance.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>User task instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmSchemaTransitionsTypesProvider.GetMixedCollectionItemTypes(Terrasoft.Core.Configuration.SysWorkspace,System.Collections.Generic.ICollection{System.Type})">
            <summary>
            Fills collection with items of the <see cref="T:System.Type"/> references.
            </summary>
            <param name="workspace">Not uses.</param>
            <param name="itemTypes">Collection of items with the <see cref="T:System.Type"/> references.</param>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmStageTransitionUserTask">
            <summary>
            Flow element that moves dcm to the next stage.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessUserTask" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageTransitionUserTask.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmStageTransitionUserTask"/> class.
            <param name="userConnection">The user connection.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageTransitionUserTask.GetNextStageId(Terrasoft.Core.Entities.Entity)">
            <summary>
            Returns next stage record identifier.
            </summary>
            <param name="entity">Stage entity.</param>
            <returns>
            The new stage value with <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DcmStageUserTask">
            <summary>
            Flow element for stage in DCM process.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessActivity" />
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DcmProcess.DcmStageUserTask"/> class.
            <param name="userConnection">The user connection.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes the current element.
            </summary>
            <param name="context">The context.</param>
            <returns><c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.WriteProcessParameters">
            <summary>
            Writes the process parameters. Current implementation does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.NeedBreakProcessExecuting(Terrasoft.Core.Process.ProcessActivityAfterEventArgs)">
            <summary>
            Checks whether there is a need to break owner process execution after current element execution.
            </summary>
            <param name="e">The <see cref="T:Terrasoft.Core.Process.ProcessActivityAfterEventArgs" /> instance containing the event data.</param>
            <returns>
            <c>True</c> if owner process execution must be ended after current element execution; otherwise
            <c>Fasle</c>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.Initialize(Terrasoft.Core.Process.IProcessFlowElementDispatcher)">
            <summary>
            Initializes current instance.
            </summary>
            <param name="elementDispatcher">The element dispatcher.</param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.CompleteExecuting(System.Object[])">
            <summary>
            Completes the executing.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DcmStageUserTask.CancelExecuting(System.Object[])">
            <summary>
            Cancels execution of the current stage.
            </summary>
            <param name="parameters">Arguments for <see cref="M:Terrasoft.Core.Process.ProcessActivity.CompleteExecuting(System.Object[])" />.</param>
        </member>
        <member name="T:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition">
            <summary>
            Represents class for the DcmSchemaElement default transition.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition.#ctor(Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition)">
            <summary>
            Creates a new instance with specified DefaultDcmSchemaElementTransition.
            </summary>
            <param name="source">Instance that inherites the <see cref="T:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition"/> type.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition.#ctor">
            <summary>
            Creates new instance of <see cref="T:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition.IsDefault">
            <summary>
            Gets default transition flag.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema" /> type.</param>
            <returns>
            Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement" /> type.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DcmProcess.DefaultDcmSchemaElementTransition.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.CompositeSchemaContentSaver.SaveJs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves JavaScript content of schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of JS content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.CompositeSchemaContentSaver.SaveLess(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves LESS content of schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of LESS content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.CompositeSchemaContentSaver.SaveCs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves C#-code of schema
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of source code.</param>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.SchemaContentType">
            <summary>
            Types of content.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DesignMode.SchemaContentType.Js">
            <summary>
            Javascript content type
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DesignMode.SchemaContentType.Css">
            <summary>
            Stylesheets content type
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DesignMode.SchemaContentType.Less">
            <summary>
            Less content type
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DesignMode.SchemaContentType.SourceCode">
            <summary>
            Source code (c#) content type
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.ReadDependencies(Terrasoft.Core.MetaItem,Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Loads dependencies for ClientUnitSchema and adds them to the passed list of dependencies.
            </summary>
            <param name="item">Current schema.</param>
            <param name="dependencies">List of dependencies.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveJs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves JavaScript content of the schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of JS content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveLess(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves Less content of the schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of LESS content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveCs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves C#-code of the schema
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of source code.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.ReadJs(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Gets javascript code of the schema from the database.
            </summary>
            <param name="schema">Specified schema.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.ReadLess(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Gets LESS of the schema from the database.
            </summary>
            <param name="schema">Specified schema.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.ReadCs(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Gets source code of the schema from the database.
            </summary>
            <param name="schema">Specified schema for reading content.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveDependencies(Terrasoft.Core.IManagerItem,Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Saves dependencies for the ClientUnitSchema in the database.
            </summary>
            <param name="item">Current schema.</param>
            <param name="dependencies">List of dependencies.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveMetaData(System.IO.Stream,Terrasoft.Core.Configuration.SysSchema)">
            <summary>
            Saves schema's metadata to the DB.
            </summary>
            <param name="metaData">Metadata.</param>
            <param name="sysSchema">Saving schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveExtraProperties(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Saves schema's properties to the DB.
            </summary>
            <param name="item">Manager's item.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.SaveItem(Terrasoft.Core.Configuration.SysSchema)">
            <summary>
            Saves schema in the database.
            </summary>
            <param name="schema">Saving schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.Dispose">
            <summary>
            Deletes, dispose resources.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.StartTransaction">
            <summary>
            Starts transaction in DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.CommitTransaction">
            <summary>
            Commits transaction in DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSchemaContentProvider.RollbackTransaction">
            <summary>
            Rolls back transaction in DB.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.DBSourceControlOperationProvider">
            <summary>
            Implements source control operations for work in DB design mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSourceControlOperationProvider.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.ISourceControlAuthManager)">
            <summary>
            Initialize an instance of <see cref="T:Terrasoft.Core.DesignMode.DBSourceControlOperationProvider"/>.
            </summary>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="sourceControlManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ISourceControlManager"/>.</param>
            <param name="sourceControlAuthManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ISourceControlAuthManager"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSourceControlOperationProvider.GetPackageStorageChanges(Terrasoft.Core.Configuration.SysPackage)">
            <summary>
            Returns a collection of <see cref="T:Terrasoft.Core.Packages.PackageStorageChange"/> PackageStorage changes.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <returns>Collection of <see cref="T:Terrasoft.Core.Packages.PackageStorageChange"/> PackageStorage changes, instance of
            <see cref="T:Terrasoft.Core.Packages.PackageStorageChangeCollection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBSourceControlOperationProvider.Commit(Terrasoft.Core.Configuration.SysPackage,System.String,Terrasoft.Core.Packages.ILockerManager)">
            <summary>
            Commits changes from specified package to source control system.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <param name="logMessage">Specified message for commit.</param>
            <param name="lockerManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ILockerManager"/> for packages.</param>
            <returns><c>true</c> if commit succeed; otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.DBWorkspaceAssemblyLoader">
            <summary>
            Class for workspace assembly loading from the database
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBWorkspaceAssemblyLoader.LoadAssemblyToWorkspace(Terrasoft.Core.Configuration.SysWorkspace,Terrasoft.Core.Packages.IFileStorageTransactionFactory)">
            <summary>
            Loads assembly from the database and modifies workspace accordingly.
            </summary>
            <param name="workspace">Instance of <see cref="T:Terrasoft.Core.Configuration.SysWorkspace"/>
            from which assembly will be loaded.</param>
            <param name="fileStorage">Instance of <see cref="T:Terrasoft.Core.Packages.FileStorage.IFileStorage"/>
            to which assembly modules will be loaded.</param>
            <returns>Loaded assembly <see cref="T:System.Reflection.Assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBWorkspaceAssemblyLoader.LoadAssemblyToWorkspace(Terrasoft.Core.Configuration.SysWorkspace)">
            <summary>
            Loads assembly from the database and modifies workspace accordingly.
            </summary>
            <param name="workspace">Instance of <see cref="T:Terrasoft.Core.Configuration.SysWorkspace"/>
            to which assembly will be loaded.</param>
            <returns>Loaded assembly <see cref="T:System.Reflection.Assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DBWorkspaceAssemblyLoader.GetIsWorkspaceAssemblyInitialized(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Determines if the workspace assembly is initialized.
            </summary>
            <param name="userConnection">Instance of specified <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="workspaceName">Specified workspace name</param>
            <returns><c>True</c> if assembly is initialized, in othe case - <c>false</c></returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.DesignModeFactory">
            <summary>
            Creates instances of classes that work with schemas and configuration assembly
            based on <see cref="T:Terrasoft.Core.FileDesignModeSection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DesignModeFactory.#ctor(Terrasoft.Core.AppConnection,Terrasoft.IO.IDirectory)">
            <summary>
            Class constructor.
            </summary>
            <param name="appConnection">An instance of <see cref="T:Terrasoft.Core.AppConnection"/> class.</param>
            <param name="directoryWrapper">An instance of <see cref="T:Terrasoft.IO.IDirectory"/> class.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DesignModeFactory.GetSchemaContentReader">
            <summary>
            Returns the instance of the class, that implements
            <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentReader"/>.
            </summary>
            <returns>The instance of implementation of the ISchemaContentReader.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DesignModeFactory.GetSchemaContentSaver">
            <summary>
            Returns the instance of the class, that implements
            <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentSaver"/>.
            </summary>
            <returns>The instance of implementation of the ISchemaContentSaver.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DesignModeFactory.GetSchemaSystemContentChanger">
            <summary>
            Returns the instance of the class, that implements
            <see cref="T:Terrasoft.Core.DesignMode.ISchemaChanger"/> based on FileDesignModeSettings.
            </summary>
            <returns>The instance of implementation of the ISchemaChanger.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DesignModeFactory.GetWorkspaceAssemblyLoader">
            <summary>
            Returns workspace assembly loader based on FileDesignModeSettings
            <see cref="T:Terrasoft.Core.FileDesignModeSection"/>.
            </summary>
            <returns>Instance of IConfigurationAssemblyLoader
            <see cref="T:Terrasoft.Core.IConfigurationAssemblyLoader"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.DesignModeFactory.GetPackageStorage">
            <summary>
            Returns instance of packages storage based on <see cref="T:Terrasoft.Core.PackageStorage"/>.
            </summary>
            <returns>Instance of PackageStorage
            <see cref="T:Terrasoft.Core.PackageStorage"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.FileSchemaContentProvider">
            <summary>
            Class provides methods for saving/deleting/editing schema in the file system.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DesignMode.FileSchemaContentProvider.PackageCopyPath">
            <summary>
            Path to working copy folder.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DesignMode.FileSchemaContentProvider.TargetFolderPath">
            <summary>
            Path to package folder, default value - working copy folder.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.GetMetaDataFileName">
            <summary>
            Returns metadata file name.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.ReadDependencies(Terrasoft.Core.MetaItem,Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Loads dependencies for ClientUnitSchema and adds them to the passed list of dependencies.
            </summary>
            <param name="item">Current schema.</param>
            <param name="dependencies">List of dependencies.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveDependencies(Terrasoft.Core.IManagerItem,Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Saves dependencies for the ClientUnitSchema to a file.
            </summary>
            <param name="item">Current schema.</param>
            <param name="dependencies">List of dependencies.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveJs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves JavaScript content of the schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of JS content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveLess(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves Less content of the schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of Less content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveCs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves C#-code of the schema
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of source code.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.ReadJs(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Gets javascript code of schema from file.
            </summary>
            <param name="schema">Specified schema.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.ReadLess(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Gets javascript code of schema from file.
            </summary>
            <param name="schema">Specified schema.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.ReadCs(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Gets source code of schema from file.
            </summary>
            <param name="schema">Specified schema for reading content.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveItem(Terrasoft.Core.Configuration.SysSchema)">
            <summary>
            Saves current schema to a file.
            </summary>
            <param name="schema">Current schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveMetaData(System.IO.Stream,Terrasoft.Core.Configuration.SysSchema)">
            <summary>
            Saves schema's metadata to a file.
            </summary>
            <param name="metaData">Metadata.</param>
            <param name="sysSchema">Saving schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.SaveExtraProperties(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Saves schema's properties to a file.
            </summary>
            <param name="item">Manager's item.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.Dispose">
            <summary>
            Deletes the temporary folder.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.StartTransaction">
            <summary>
            Creates a temporary folder.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.CommitTransaction">
            <summary>
            Moves files from the temporary folder to the working copy folder.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSchemaContentProvider.RollbackTransaction">
            <summary>
            Rollback current transaction with deleting of temporary folder.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.FileSourceControlOperationProvider">
            <summary>
            Implements source control operations for work in File design mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSourceControlOperationProvider.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.ISourceControlAuthManager)">
            <summary>
            Initialize an instance of <see cref="T:Terrasoft.Core.DesignMode.FileSourceControlOperationProvider"/>.
            </summary>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="sourceControlManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ISourceControlManager"/>.</param>
            <param name="sourceControlAuthManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ISourceControlAuthManager"/>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSourceControlOperationProvider.GetPackageStorageChanges(Terrasoft.Core.Configuration.SysPackage)">
            <summary>
            Returns a collection of a PackageStorage changes.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <returns>Collection of a PackageStorage changes, instance of <see cref="T:Terrasoft.Core.Packages.PackageStorageChangeCollection"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSourceControlOperationProvider.Commit(Terrasoft.Core.Configuration.SysPackage,System.String,Terrasoft.Core.Packages.ILockerManager)">
            <summary>
            Commit changes from specified package to source control system.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <param name="logMessage">Specified message for commit.</param>
            <param name="lockerManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ILockerManager"/> for packages.</param>
            <returns><c>true</c>, if commit succeed, otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.FileSystemWorkspaceAssemblyLoader">
            <summary>
            Class for workspace assembly loading from the file system
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSystemWorkspaceAssemblyLoader.LoadAssemblyToWorkspace(Terrasoft.Core.Configuration.SysWorkspace,System.String)">
            <summary>
            Loads assembly from the file system and modifies workspace accordingly.
            </summary>
            <param name="workspace">Instance of <see cref="T:Terrasoft.Core.Configuration.SysWorkspace"/>
            to which assembly will be loaded.</param>
            <param name="assemblyPath"><see cref="T:System.String"/>Path to assembly.</param>
            <returns>Loaded assembly <see cref="T:System.Reflection.Assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSystemWorkspaceAssemblyLoader.LoadAssemblyToWorkspace(Terrasoft.Core.Configuration.SysWorkspace)">
            <summary>
            Loads assembly from the file system and modifies workspace accordingly.
            </summary>
            <param name="workspace">Instance of <see cref="T:Terrasoft.Core.Configuration.SysWorkspace"/>
            to which assembly will be loaded.</param>
            <returns>Loaded assembly <see cref="T:System.Reflection.Assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.FileSystemWorkspaceAssemblyLoader.GetIsWorkspaceAssemblyInitialized(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Determines if the workspace assembly is initialized.
            </summary>
            <param name="userConnection">Instance of specified <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="workspaceName">Specified workspace name</param>
            <returns><c>true</c> if assembly is initialized, in othe case - <c>false</c></returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.IDesignModeFactory">
            <summary>
            Provides a methods for creating instances of classes that work with schemas depending on the
            <see cref="T:Terrasoft.Core.FileDesignModeSection"/> settings.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IDesignModeFactory.GetSchemaContentReader">
            <summary>
            Returns class instance that implements
            <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentReader"/>.
            </summary>
            <returns>Class instance that implements ISchemaContentReader
            /// <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentReader"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IDesignModeFactory.GetSchemaContentSaver">
            <summary>
            Returns class instance that implements
            <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentSaver"/>.
            </summary>
            <returns>Class instance that implements ISchemaContentSaver
            /// <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentSaver"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IDesignModeFactory.GetSchemaSystemContentChanger">
            <summary>
            Returns class instance that implements
            <see cref="T:Terrasoft.Core.DesignMode.ISchemaChanger"/>.
            </summary>
            <returns>Class instance that implements ISchemaChanger
            /// <see cref="T:Terrasoft.Core.DesignMode.ISchemaChanger"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IDesignModeFactory.GetWorkspaceAssemblyLoader">
            <summary>
            Returns class instance that implements
            <see cref="T:Terrasoft.Core.DesignMode.IWorkspaceAssemblyLoader"/>.
            </summary>
            <returns>Class instance that implements
            <see cref="T:Terrasoft.Core.DesignMode.IWorkspaceAssemblyLoader"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IDesignModeFactory.GetPackageStorage">
            <summary>
            Returns instance of packages storage based on <see cref="T:Terrasoft.Core.PackageStorage"/>.
            </summary>
            <returns>Instance of PackageStorage
            <see cref="T:Terrasoft.Core.PackageStorage"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.ISchemaChanger">
            <summary>
            ######### ###### ### ######## ######, #########, ######## ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaChanger.SaveItem(Terrasoft.Core.Configuration.SysSchema)">
            <summary>
            ######### ##### # #########, # ####### ######## #########,
            ####### ######### #########.
            </summary>
            <param name="schema">########### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaChanger.SaveMetaData(System.IO.Stream,Terrasoft.Core.Configuration.SysSchema)">
            <summary>
            Saves schema's metadata to a storage, provider that implements interface working with.
            </summary>
            <param name="metaData">Metadata.</param>
            <param name="sysSchema">Saving schema.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaChanger.SaveExtraProperties(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Saves schema's properties to a storage, provider that implements interface working with.
            </summary>
            <param name="item">Manager's item.</param>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.ISchemaContentReader">
            <summary>
            Interface for getting content of schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentReader.ReadDependencies(Terrasoft.Core.MetaItem,Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Loads dependencies ofClientUnitSchemas and adds to list.
            </summary>
            <param name="item">Target schema.</param>
            <param name="dependencies">List of dependencies.</param>
            <returns><c>true</c> if success,
            <c>false</c> if failure or dependencies not exist.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentReader.ReadJs(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Reads client's code from reader.
            </summary>
            <param name="schema">Schema for reading content.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentReader.ReadLess(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Reads client's Less from reader.
            </summary>
            <param name="schema">Descriptor of schema.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentReader.ReadCs(Terrasoft.Core.DesignMode.ItemDescriptor)">
            <summary>
            Get source code of schema from database.
            </summary>
            <param name="schema">Specified schema for reading content.</param>
            <returns>Stream of content.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.ISchemaContentSaver">
            <summary>
            Provides methods for saving the content of the schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentSaver.SaveDependencies(Terrasoft.Core.IManagerItem,Terrasoft.Core.ClientUnitSchemaDependencyCollection)">
            <summary>
            Saves dependencies of schema.
            </summary>
            <param name="item">Schema whose dependencies will be saved.</param>
            <param name="dependencies">List of the dependencies.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentSaver.SaveJs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves JavaScript content of the schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of the JS content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentSaver.SaveLess(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves Less content of the schema.
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of the Less content.</param>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaContentSaver.SaveCs(Terrasoft.Core.DesignMode.ItemDescriptor,System.IO.Stream)">
            <summary>
            Saves C# content of the schema
            </summary>
            <param name="schema">Specified schema.</param>
            <param name="content">Stream of the source code.</param>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.ISchemaTransaction">
            <summary>
            #########, ########### ###### # ############ ### ##########/####### ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaTransaction.StartTransaction">
            <summary>
            ####### ##### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaTransaction.CommitTransaction">
            <summary>
            ###### ####### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISchemaTransaction.RollbackTransaction">
            <summary>
            ##### ##########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.ISourceControlOperationProvider">
            <summary>
            Provides source control operations.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISourceControlOperationProvider.GetPackageStorageChanges(Terrasoft.Core.Configuration.SysPackage)">
            <summary>
            Returns a collection of a PackageStorage changes.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <returns>Collection of a PackageStorage changes, instance of <see cref="T:Terrasoft.Core.Packages.PackageStorageChangeCollection"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ISourceControlOperationProvider.Commit(Terrasoft.Core.Configuration.SysPackage,System.String,Terrasoft.Core.Packages.ILockerManager)">
            <summary>
            Commit changes from specified package to source control system.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <param name="logMessage">Specified message for commit.</param>
            <param name="lockerManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ILockerManager"/> for packages.</param>
            <returns><c>true</c>, if commit succeed, otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.ItemDescriptor">
            <summary>
            Structure for initializing main properties of schema in content providers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DesignMode.ItemDescriptor.SkipGeneratedContent">
            <summary>
            If defined as <c>true</c> generated schema content will not be read. 
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DesignMode.ItemDescriptor._name">
            <summary>
            Name of schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DesignMode.ItemDescriptor.UId">
            <summary>
            Schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DesignMode.ItemDescriptor.PackageId">
            <summary>
            PackageId of schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.DesignMode.ItemDescriptor._packageName">
            <summary>
            PackageName of schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ItemDescriptor.GetFromSchema(Terrasoft.Core.Schema,Terrasoft.Core.UserConnection)">
            <summary>
            Creates ItemDescriptor and initializes him from specified instance of
            <see cref="T:Terrasoft.Core.Schema"/> class.</summary>
            <param name="schema">Specified instance of Schema.</param>
            <param name="userConnection">Specified UserConnection.</param>
            <returns>New instance of ItemDescriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ItemDescriptor.GetFromSysSchema(Terrasoft.Core.Configuration.SysSchema,Terrasoft.Core.UserConnection)">
            <summary>
            Creates ItemDescriptor and initializes him from specified instance of 
            <see cref="T:Terrasoft.Core.Configuration.SysSchema"/> class.</summary>
            <param name="sysSchema">Specified instance of SysSchema.</param>
            <param name="userConnection">Specified UserConnection.</param>
            <returns>New instance of ItemDescriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ItemDescriptor.GetFromSchemaDescriptor(Terrasoft.Core.Packages.SchemaDescriptor,System.String)">
            <summary>
            Creates ItemDescriptor and initializes him from specified instance of 
            <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.</summary>
            <param name="schema">Specified instance of SchemaDescriptor.</param>
            <param name="packageName">Name of target package.</param>
            <returns>New instance of ItemDescriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.ItemDescriptor.GetFromSchemaDescriptor(Terrasoft.Core.Packages.SchemaDescriptor,System.String,System.Guid)">
            <summary>
            Creates ItemDescriptor and initializes him from specified instance of 
            <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.</summary>
            <param name="schema">Specified instance of SchemaDescriptor.</param>
            <param name="schemaId">Schema's Id.</param>
            <param name="packageName">Name of target package.</param>
            <returns>New instance of ItemDescriptor.</returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.IWorkspaceAssemblyLoader">
            <summary>
            Provides a mechanism for workspace assembly loading
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IWorkspaceAssemblyLoader.LoadAssemblyToWorkspace(Terrasoft.Core.Configuration.SysWorkspace)">
            <summary>
            Loads assembly and modifies workspace accordingly.
            </summary>
            <param name="workspace">Instance of <see cref="T:Terrasoft.Core.Configuration.SysWorkspace"/>
            to which assembly will be loaded.</param>
            <returns>Loaded assembly <see cref="T:System.Reflection.Assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.IWorkspaceAssemblyLoader.GetIsWorkspaceAssemblyInitialized(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Determines if the workspace assembly is initialized.
            </summary>
            <param name="userConnection">Instance of specified <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="workspaceName">Specified workspace name</param>
            <returns><c>True</c> if assembly is initialized, in othe case - <c>false</c></returns>
        </member>
        <member name="T:Terrasoft.Core.DesignMode.SourceControlOperationProvider">
            <summary>
            Implements base source control operations.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.SourceControlOperationProvider.GetPackageStorageChanges(Terrasoft.Core.Configuration.SysPackage)">
            <summary>
            Returns a collection of a PackageStorage changes.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <returns>Collection of a PackageStorage changes, instance of <see cref="T:Terrasoft.Core.Packages.PackageStorageChangeCollection"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.DesignMode.SourceControlOperationProvider.Commit(Terrasoft.Core.Configuration.SysPackage,System.String,Terrasoft.Core.Packages.ILockerManager)">
            <summary>
            Commit changes from specified package to source control system.
            </summary>
            <param name="package">Specified instance of <see cref="T:Terrasoft.Core.Configuration.SysPackage"/>.</param>
            <param name="logMessage">Specified message for commit.</param>
            <param name="lockerManager">Specified instance of <see cref="T:Terrasoft.Core.Packages.ILockerManager"/> for packages.</param>
            <returns>An instance of <see cref="T:Terrasoft.Common.CommitResult"/>. Success, if validation passed, otherwise -
            a code of problem.</returns>
        </member>
        <member name="T:Terrasoft.Core.DistributedLock">
            <summary>
            Resolves implementation for the provided <type name="IDistributedLock"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DistributedLock.WaitIndefinitely">
            <summary>
            Gets the infinite wait timeout.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.DistributedLock.Instance">
            <summary>
            Gets instance that represents distributed lock.
            </summary>
            <seealso cref="T:Terrasoft.Core.IDistributedLock"/>
        </member>
        <member name="T:Terrasoft.Core.Entities.AsyncOperations.EntityEventAsyncOperationArgs">
            <summary>
            Arguments to pass into executor.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.AsyncOperations.EntityEventAsyncOperationArgs.EntityId">
            <summary>
            Entity identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.AsyncOperations.EntityEventAsyncOperationArgs.EntitySchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.AsyncOperations.EntityEventAsyncOperationArgs.EntityColumnValues">
            <summary>
            Entity column values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.AsyncOperations.EntityEventAsyncOperationArgs.OldEntityColumnValues">
            <summary>
            Entity old column values.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.AsyncOperations.Interfaces.IEntityEventAsyncExecutor">
            <summary>
            Describes entity events async 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.AsyncOperations.Interfaces.IEntityEventAsyncExecutor.ExecuteAsync``1(System.Object)">
            <summary>
            Execute operation asynchronously.
            </summary>
            <param name="parameters">Operation parameters.</param>
            <typeparam name="TOperation">Operation type.</typeparam>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityChangeType">
            <summary>
            Types of entity modifications.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityBeforeEventArgs.IsValidationEnabled">
            <summary>
            Indicates whether validation is enabled.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntity.FetchFromDB(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Loads specified column values from database.
            </summary>
            <param name="columnNamesToFetch">Column names to load.</param>
            <param name="useDisplayValues">Indicate whether to load primary display values.
            If <c>true</c> primary display values will be fetched.</param>
            <returns><c>true</c> if column values loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntity.FetchFromDB(System.Object,System.Boolean)">
            <summary>
            Loads all column values from database.
            </summary>
            <param name="keyValue">Primary column value.</param>
            <param name="useDisplayValues">Indicate whether to load primary display values.
            If <c>true</c> primary display values will be fetched.</param>
            <returns><c>true</c> if column values loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntity.Delete(System.Object)">
            <summary>
            Deletes entity.
            </summary>
            <param name="keyValue">The key value.</param>
            <returns><c>True</c> if entity was deleted, otherwise <c>False</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Entity">
            <summary>
            Provides instance of entity.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Entity._deleteProcessListeners">
            <summary>
            Process listeners that used for process cancellation if entity successfully deleted.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates an object that represents a record in the database table.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.#ctor(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Creates an object that represents a record in the database table.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schemaUId">Unique identifier of the entity schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.#ctor(Terrasoft.Core.Entities.Entity)">
            <summary>
            Creates an object that represents a record in the database table.
            </summary>
            <param name="source">Unique identifier of the entity schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.Entity.DataIsolationHelper">
            <summary>
            Gets or sets the data isolation helper.
            </summary>
            <value>
            The data isolation helper.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Entities.Entity.UseAdminRights">
            <summary>
            Determines whether to take into account rights to insert, 
            update, delete and select data.
            </summary>
            <remarks>Default value is true.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Write(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.String,System.Boolean,System.Action{Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.Boolean})">
            <summary>
            Writes the value of type <see cref="T:Terrasoft.Core.Entities.Entity"/> into the output stream with the given name.
            </summary>
            <param name="dataWriter">The instance of <see cref="T:Terrasoft.Common.DataWriter"/>, providing the methods
            for sequential write values into the output stream.</param>
            <param name="entity">The write value of type <see cref="T:Entity"/>.</param>
            <param name="propertyName">The object name.</param>
            <param name="couldConvertForXml">Allow converting for xml-serialization.</param>
            <param name="writeDataAction">The custom action for writing entity data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteEmptyColumnValues(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.Boolean)">
            <summary>
            Writes the empty entity.
            </summary>
            <param name="dataWriter">The data writer.</param>
            <param name="entity">The entity.</param>
            <param name="couldConvertForXml">Allow converting for xml-serialization.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.IsColumnValueChangeable(Terrasoft.Core.Entities.EntityColumnValue)">
            <summary>
            Determines if column value can be changed.
            </summary>
            <param name="columnValue">Column value.</param>
            <returns>True, if column value can be changed.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.LoadColumnValues(Terrasoft.Core.Entities.EntitySchemaColumn[])">
            <summary>
            Performs loading of the specified column values without cleaning of existing ones.
            </summary>
            <param name="columns">The columns list to load.</param>
            <returns><c>true</c> when successfully fetched; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Write(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.String)">
            <summary>
            ############ ###### ######## #### <see cref="T:Terrasoft.Core.Entities.Entity"/> # ##### ###### # ######### ######.
            </summary>
            <param name="dataWriter">######### ###### <see cref="T:Terrasoft.Common.DataWriter"/>, ############### ######
            ################ ###### ######## # ##### ######.</param>
            <param name="entity">######## ### ###### #### <see cref="T:Entity"/>.</param>
            <param name="propertyName">### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Write(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.Entity,System.String,System.Boolean)">
            <summary>
            ############ ###### ######## #### <see cref="T:Terrasoft.Core.Entities.Entity"/> # ##### ###### # ######### ######.
            </summary>
            <param name="dataWriter">######### ###### <see cref="T:Terrasoft.Common.DataWriter"/>, ############### ######
            ################ ###### ######## # ##### ######.</param>
            <param name="entity">######## ### ###### #### <see cref="T:Entity"/>.</param>
            <param name="propertyName">### #######.</param>
            <param name="couldConvertForXml">######### ############## ### xml-############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Read(Terrasoft.Core.UserConnection,Terrasoft.Common.DataReader)">
            <summary>
            ########## ######## ######## ######## #### <see cref="T:Terrasoft.Core.Entities.Entity"/> ## ###### #####.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="dataReader">######### ###### <see cref="T:Terrasoft.Core.DataReader"/>.</param>
            <returns> ######## ###### <see cref="T:Entity"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.GetBytesValue(System.String)">
            <summary>
            Gets the value of the specified column as a byte array.
            </summary>
            <param name="valueName">Name of the object column.</param>
            <returns>The value of the column with the <paramref name="valueName" />
            name of the <see cref="T:System.Byte" /> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.SetColumnValue(System.String,System.Object)">
            <summary>
            Sets specified column value.
            </summary>
            <param name="valueName">Name of the object column.</param>
            <param name="value">Column value.</param>
            <returns><c>true</c>, if value was changed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.SetColumnValue(Terrasoft.Core.Entities.EntitySchemaColumn,System.Object)">
            <summary>
            Sets specified column value.
            </summary>
            <param name="column">The column.</param>
            <param name="value">The value.</param>
            <returns><c>true</c>, if value was changed; otherwise <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">Column is <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.SetBytesValue(System.String,System.Byte[])">
            <summary>
            Sets passed value of the <see cref="T:System.Byte" /> type for the specified property of an object.
            </summary>
            <param name="valueName">The name of the property of an object.</param>
            <param name="streamBytes">Value of the <see cref="T:System.Byte" />
            type that is set for the property.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(Terrasoft.Core.Entities.EntitySchemaColumn,System.Object,System.Boolean)">
            <summary>
            Fetches entity from database by specified condition column value.
            </summary>
            <param name="conditionColumn">Query condition column name.</param>
            <param name="conditionValue">Query condition column value.</param>
            <param name="useDisplayValues">Indicate whether to get primary display values.
            If <c>true</c> primary display values will be fetched.</param>
            <returns><c>true</c> if entity loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            ## ######### ####### ######### ## #### ###### ###### # ####### ####### # ########## #######.
            </summary>
            <param name="conditionColumnName">######## #######, ### ####### ######## ####### #######.</param>
            <param name="conditionValue">######## ####### ####### ### ########## ######.</param>
            <param name="columnNamesToFetch">###### ######## #######, ####### ##### #######.</param>
            <param name="useDisplayValues">####### ######### # ####### ######### ############ ########.
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.</param>
            <returns>#### ###### ######## - <c>true</c>, ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Loads values for specified columns from database.
            </summary>
            <param name="columnNamesToFetch">Column names to load.</param>
            <param name="useDisplayValues">Indicate whether to get primary display values.
            If <c>true</c> primaty display values will be fetched.</param>
            <returns><c>true</c> if column values loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.String,System.Object,System.Boolean)">
            <summary>
            ## ######### ####### ######### ###### ## #### ######.
            </summary>
            <param name="conditionColumnName">######## #######, ### ####### ######## ####### #######.</param>
            <param name="conditionValue">######## ####### ####### ### ########## ######.</param>
            <param name="useDisplayValues">####### ######### # ####### ######### ############ ########.
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.</param>
            <returns>#### ###### ######## - <c>true</c>, ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.Object,System.Boolean)">
            <summary>
            ## ######### ######## ######### #### ######### ###### ## #### ######.
            </summary>
            <param name="keyValue">######## ######### ####.</param>
            <param name="useDisplayValues">####### ######### # ####### ######### ############ ########.
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.</param>
            <returns>#### ###### ######## - <c>true</c>, ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Fetches entity from database by specified conditions collection.
            </summary>
            <param name="conditions">Key-value collection containing conditions for entity query filtration.</param>
            <param name="useDisplayValues">Indicate whether to get primary display values.
            If <c>true</c> primaty display values will be fetched.</param>
            <returns><c>true</c> if entity loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.FetchFromDB(Terrasoft.Core.Entities.EntitySchemaColumn,System.Object,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean)">
            <summary>
            Fetches entity from database by specified condition column, condition value and columns to fetch.
            </summary>
            <param name="conditionColumn">Query condition column name.</param>
            <param name="conditionValue">Query condition column value.</param>
            <param name="columnsToFetch">Collection of columns to fetch.</param>
            <param name="useDisplayValues">Indicate whether to get primary display values.
            If <c>true</c> primaty display values will be fetched.</param>
            <returns><c>true</c> if entity loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.ExistInDB(Terrasoft.Core.Entities.EntitySchemaColumn,System.Object)">
            <summary>Checks the existence of an entity the in database by specified condition column and
            condition value for entity query filtration.</summary>
            <param name="conditionColumn">Query condition column name.</param>
            <param name="conditionValue">Query condition column value.</param>
            <returns><c>true</c> if entity exists. Otherwise returns <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">conditions</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.ExistInDB(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Checks the existence of an entity the in database by specified conditions collection.</summary>
            <param name="conditions">Key-value collection containing conditions for entity query filtration.</param>
            <returns><c>true</c> if entity exists. Otherwise returns <c>false</c>.</returns>
            <exception cref="T:System.ArgumentNullException">conditions</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.DeleteWithCancelProcess">
            <summary>
            Deletes entity and after delete cancels running process.
            </summary>
            <returns>Flag that indicates successfully deleted entity or not.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Delete(System.Object)">
            <summary>
            Deletes entity.
            </summary>
            <param name="keyValue">The key value.</param>
            <returns>
            <c>True</c> if entity was deleted, otherwise <c>False</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.ReadData(Terrasoft.Common.DataReader,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Reads entity data with the specified data reader.
            </summary>
            <param name="reader">The data reader.</param>
            <param name="schema">Entity schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Write(Terrasoft.Common.DataWriter,System.String)">
            <summary>
            Writes entity data to the specified data writer, regardless it is empty or not.
            </summary>
            <param name="dataWriter">The data writer.</param>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### # ##### ###### ### ####### ##### #######.
            </summary>
            <param name="writer">######### ###### <see cref="T:Terrasoft.Common.DataWriter"/>, ############### ######
            ################ ###### ######## # ##### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteData(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            ############ ###### # ##### ###### ### ######### ##### #######.
            </summary>
            <param name="writer">######### ###### <see cref="T:Terrasoft.Common.DataWriter"/>, ############### ######
            ################ ###### ######## # ##### ######.</param>
            <param name="schema">##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.WriteData(Terrasoft.Common.DataWriter,Terrasoft.Core.Entities.EntitySchema,System.Boolean)">
            <summary>
            ############ ###### # ##### ###### ### ######### ##### #######.
            </summary>
            <param name="writer">######### ###### <see cref="T:Terrasoft.Common.DataWriter"/>, ############### ######
            ################ ###### ######## # ##### ######.</param>
            <param name="schema">##### #######.</param>
            <param name="couldConvertForXml">######### ############## ### xml-############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Terrasoft#Common#ICompositeObject#TryGetValue(System.String,System.Type,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Entities.Entity.Terrasoft#Common#ICompositeObject#TryGetValue``1(System.String,``0@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityCollection.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Creates a set of objects that represent records in the database table.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schema">Instance of the entity schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityCollection.#ctor(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Creates a set of objects that represent records in the database table.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schemaName">Name of the entity schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityCollection.#ctor(Terrasoft.Core.UserConnection,System.String,System.String)">
            <summary>
            Creates a set of objects that represent records in the database table.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schemaName">Name of the entity schema.</param>
            <param name="entitySchemaManagerName">Name of the entity schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityCollection.#ctor(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Creates a set of objects that represent records in the database table.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schemaUId">Unique identifier of the entity schema.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityColumnValue">
            <summary>
            ######## ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/>, ######### ######## ################
            ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.#ctor(Terrasoft.Core.Entities.EntityColumnValue)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntityColumnValue"/>, ####### ######## ###### ######### ########.
            </summary>
            <param name="source">######## ####### #######, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.UserConnection">
            <summary>
            ################ ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.Column">
            <summary>
            ####### #####, ############### ######## ######## ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.Name">
            <summary>
            ### ######## ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.IsVirtual">
            <summary>
            #######, ######## ## ######## ###########, ## #### ## ##### ######### # #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.Value">
            <summary>
            ######## ########.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######## ####### ## #########.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.StreamBytes">
            <summary>
            ######## ######## # #### ####### <see cref="T:System.Byte"/> ### ####### ######### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.OldValue">
            <summary>
            ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.IsLoaded">
            <summary>
            ##########, ######### ## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValue.IsChanged">
            <summary>
            #######, #### ## ######## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.LoadValue(System.Data.IDataReader,System.Int32,System.Int32)">
            <summary>
            ######### ######## ## ########### ########## <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="dataReader">######### <see cref="T:System.Data.IDataReader"/>, ## ######## ###########
            ########.</param>
            <param name="fieldIndex">###### #### # ########## <see cref="T:System.Data.IDataReader"/>, ####### #####
            #########.</param>
            <param name="packageSize">###### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.LoadValue(System.Object)">
            <summary>
            ######### ########## ######## #### <see cref="T:System.Object"/>.
            </summary>
            <param name="value">########### ######## #### <see cref="T:System.Object"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.ResetValue">
            <summary>
            ######## #########, ############ ########## ######## ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.ResetOldValue">
            <summary>
            ######## ###### ######## ####### ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.ClearValue">
            <summary>
            Clears column values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.Validate(Terrasoft.Core.Entities.EntityValidationMessageCollection)">
            <summary>
            ######### ######## ############ ######## #######.
            </summary>
            <param name="validationMessages">######### ######### # ######## ############ ######## #######.</param>
            <returns>
            <c>true</c>, #### ######## ############ ######## ####### ########### #######; ##### - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValue.Clone">
            <summary>
            ####### #### ######## ######## ####### #######.
            </summary>
            <returns>#### ######## ######## ####### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityColumnValueCollection">
            <summary>
            ######### ######## ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntityColumnValueCollection"/>, ######### ########
            ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaColumnCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntityColumnValueCollection"/> ## ######### ######## #########
            ####### ##### #######, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columns">######### ####### ##### #######, ## ######### ####### ######### ######## #######
            ######### ######## ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.#ctor(Terrasoft.Core.Entities.EntityColumnValueCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntityColumnValueCollection"/>, ########## ###### ########
            ######### ######## ####### #######.
            </summary>
            <param name="source">######### ######## ####### #######, #### ####### #########. ###### ####### ###########
            ######### ######## ###### ################ ######## ######### <paramref name="source"/>.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityColumnValueCollection.Count">
            <summary>
            ########## ######### # ######### ######## ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ForceLoadColumnValue(System.String,System.Object)">
            <summary>
            ######### ######## # ######## ###### ## ########### ####### <see cref = "T:System.Object"/>. #### ######## #
            ######## ###### ## #######, # ######### ########### ##### ####### # ######## ######.
            </summary>
            <param name="name">### ######## ####### #######.</param>
            <param name="value">############# ########.</param>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ForceLoadColumnValue(System.String,System.Data.IDataReader,System.Int32,System.Int32)">
            <summary>
            ######### ######## # ######## ###### ## ########### ##########
            <see cref = "T:System.Data.IDataReader"/>. #### ######## # ######## ###### ## #######, # #########
            ########### ##### ####### # ##### ######.
            </summary>
            <param name="name">### ######## ####### #######.</param>
            <param name="dataReader">######### <see cref="T:System.Data.IDataReader"/>, # ####### ######## ###########
            ########.</param>
            <param name="fieldIndex">####### # ########## <see cref = "T:System.Data.IDataReader"/>, ## #######
            ########### ########.</param>
            <param name="packageSize">###### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ForceGetByName(System.String)">
            <summary>
            ########## ## ######### ######### <see cref = "T:Terrasoft.Core.Entities.EntityColumnValue"/> # ######## ######. #### # ######### ###
            ########## # ##### ######, ## #########.
            </summary>
            <param name="name">### ######## ####### #######, ##### ######## ########### # #########.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntityColumnValue"/> # ###### <paramref name = "name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.Add(Terrasoft.Core.Entities.EntityColumnValue)">
            <summary>
            ######### # ######### ######## ######### <see cref = "T:Terrasoft.Core.Entities.EntityColumnValue"/>.
            </summary>
            <param name="item">######### <see cref = "T:Terrasoft.Core.Entities.EntityColumnValue"/>, ####### ########### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.Clear">
            <summary>
            ####### ## ####### ######### ### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.FindByName(System.String)">
            <summary>
            ############ ##### # ######### ######## ####### ####### # ######## ######. #### ######## ####### ## #######,
            ############ <c>null</c>.
            </summary>
            <param name="name">### ######## ######## #######.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntityColumnValue"/> # ###### <paramref name = "name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.GetByName(System.String)">
            <summary>
            ########## ## ######### ######## ####### ####### # ######## ######. #### ##### ####### ## ######,
            ############ ##########.
            </summary>
            <param name="name">### ######## ######## #######.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntityColumnValue"/> # ###### <paramref name = "name"/>.</returns>
            <exceptions name = "ItemNotFoundException">#### ####### # ###### <paramref nmae = "name"/> ## ###### #
            ####### ######### ######## #######.</exceptions>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.Clone">
            <summary>
            ####### #### ####### ######### ######## ####### #######.
            </summary>
            <returns>######### <see cref = "T:System.Object"/>, ########## ###### ####### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.GetEnumerator">
            <summary>
            ########## ############## ############# ######## ####### #######.
            </summary>
            <returns>############## ############# ######## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            ########## ############# ######## ####### #######.
            </summary>
            <returns>############# ######## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityColumnValueCollection.ClearValues">
            <summary>
            Clears column values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityQueryBaseBlockBuilder.BuildBlock(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            ########## ##### ###### ####### ###########
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntityQueryProvider.CanReadUncommitedDataProperty">
            <summary>
            ######## ######## web.config, ########### ## ##### "########" ###### ###### ### ######## 
            <see cref="T:Terrasoft.Core.Entities.EntityQueryProvider"/> ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityQueryProvider.ContinuationToken">
            <summary>
            ######### ########## #####, ####### ########## ########## ### ##############.
            ############ SkipCount ### ##############</summary>
            <remarks>
            ####### # ######### ######## ### ### SkipCount
            ##### #### ########### ######### $skip ## #######</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityQueryProvider.ResetProvider">
            <summary>
            #### ######### ##### ############## ### ########## # ########## ##########,
            ########## ##### #####, ######## ## ###### ##### Entity.
            ######## ### ############# inline count</summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaKind">
            <summary>
            ### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.General">
            <summary>
            #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.RecordRight">
            <summary>
            ##### ## #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.TrackChangesInDB">
            <summary>
            ############ ######### ## #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaKind.Localization">
            <summary>
            Localization schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDBInheritanceType">
            <summary>
            #### ############ #### ## ###### #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDBInheritanceType.IndependentTable">
            <summary>
            ########### ############. ######### ########## ######### ######## ######### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDBInheritanceType.OneToOneParentAssociation">
            <summary>
            ############ #### # ######. ######### ########## ## ######## ######### ########, # ######### ## #### # 
            ######## #### ############# #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.IsVirtualAttribute">
            <summary>
            ########## ####### ############# #####.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.IsDBViewAttribute">
            <summary>
            ####### ####### ########## ##### # #### ############# ## ###### #### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchema">
            <summary>
            ############ ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> # ######## ########## ####.
            </summary>
            <param name="entitySchemaManager">######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.#ctor(Terrasoft.Core.Entities.EntitySchema,System.Boolean)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ###### ### ######## ###### 
            ######## ##### <paramref name="source"/> # ########### ## ######## <paramref name="isShallowClone"/>.
            </summary>
            <param name="source">#####, #### ####### #########.</param>
            <param name="isShallowClone">####### ####### ############ #####. #### <paramref name="isShallowClone"/> 
            ##### <c>true</c>, ## # ########### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> ## ########## ####### ##### 
            <paramref name="source"/>. #### <paramref name="isShallowClone"/> ##### <c>false</c>, ## ######### 
            ########### #### <paramref name="source"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.#ctor(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ###### ###### ######## ##### 
            <paramref name="source"/>.
            </summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.BaseSchemaUId">
            <summary>
            Base schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Manager">
            <summary>
            Schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.UId">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ProcessSchemaManager">
            <summary>
            Process schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Kind">
            <summary>
            ### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DBInheritanceType">
            <summary>
            ### ############ ##### ## ###### #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DeleteOneToOneParentRecord">
            <summary>
            ####### ######## ###### ## ############ ##### ### ######## ####### ######, 
            #### ##### ########### #### # ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ParentSchemaUId">
            <summary>
            ########## ############# ############ #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ParentSchema">
            <summary>
            ############ #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsVirtual">
            <summary>
            ####### ############# #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsDBView">
            <summary>
            #######, ######## ## ##### ############## # #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AutoInitializeColumns">
            <summary>
            ####### ############## ############# #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Columns">
            <summary>
            ######### ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryColumn">
            <summary>
            #######, ############## ######### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryDisplayColumn">
            <summary>
            ######### ####### ### ########### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryImageColumn">
            <summary>
            ######### ####### ### ########### ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.PrimaryOrderColumn">
            <summary>
            ######### ####### ### ##########. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.OneToOneParentAssociationColumn">
            <summary>
            ####### ##### # ######### ### ############ #### # ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.OwnerColumn">
            <summary>
            #######, ########### ## #########. ############ ### ####### #### ## ###### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn">
            <summary>
            Master record entity column. When it set, and current entity is not administrated by records,
            then record rights from master record will be applied.
            When entity is administrated by master record rights, empty master record column considered as
            empty rights.
            When entity is administrated by records and by master records, the master record rights not applied.
            Only lookup columns can be used for this property, required on application level preferably.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsSSPAvailable">
            <summary>
            When this property is set, this Entity can be used on SSP portal as section,
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.UseMasterRecordRights">
            <summary>
            Flag that indicates whether current entity uses master record rights.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordSchemaName">
            <summary>
            Master record entity schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.HierarchyColumn">
            <summary>
            ####### ##### # ############ ####### ### ############# ########. 
            ############ ### ########## ############# ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.CreatedOnColumn">
            <summary>
            ####### ### ######## #### ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.CreatedByColumn">
            <summary>
            ####### ### ######## ###### ## #######, ####### ###### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ModifiedOnColumn">
            <summary>
            ####### ### ######## #### ########### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.ModifiedByColumn">
            <summary>
            ####### ### ######## ###### ## #######, ####### ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Indexes">
            <summary>
            ######### ######## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsTrackChangesInDB">
            <summary>
            ####### ############### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.EntitySchemaManager">
            <summary>
            ######## #### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DataValueTypeManager">
            <summary>
            ######## ##### ###### ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.SystemValueManager">
            <summary>
            ######## ######### ########. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.SystemEntitySchemaManager">
            <summary>
            ######## ######### #### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.Events">
            <summary>
            ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.HasEvents">
            <summary>
            ####### ####### ####### ### ###### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AdministratedByOperations">
            <summary>
            ####### ################# ##### ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AdministratedByColumns">
            <summary>
            ####### ################# ##### ## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.AdministratedByRecords">
            <summary>
            ####### ################# ##### ## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.UseDenyRecordRights">
            <summary>
            ####### ############# ########### #### ### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.HasIndependentProcessListeners">
            <summary>
            ####### ########### ### ##### ##### ########### ####### ######### #########, ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsDynamicallyCreated">
            <summary>
            ####### ########### ######### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.LocalizationSchemaName">
            <summary>
            Localization schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.DesignLocalizationSchemaName">
            <summary>
            Localization schema name in design time.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.IsLocalizable">
            <summary>
            Indicates whether schema is localizable.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchema.UseRecordDeactivation">
            <summary>
            Indicates whether schema should use disabling records.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ####### ######## ####### ##### ## ########## # ####### ######### 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## 
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CompleteApplyingMetaDataValues">
            <summary>
            ########## ############# ############# ####### ##### ##### ####### #### ######## ####### ## ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeProperties">
            <summary>
            ############# ######## #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryColumn">
            <summary>
            ############# ####### # ######### ###### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryDisplayColumn">
            <summary>
            ############# ######### ####### ### ########### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryImageColumn">
            <summary>
            ############# ######### ####### ### ########### ###########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryOrderColumn">
            <summary>
            ############# ######### ####### ### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeOneToOneParentAssociationColumn">
            <summary>
            ############# ####### ##### # ######### ### ############ #### # ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeOwnerColumn">
            <summary>
            ############# ####### ######### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeMasterRecordColumn">
            <summary>
            <see cref="P:Terrasoft.Core.Entities.EntitySchema.MasterRecordColumn"/> property initialization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeHierarchyColumn">
            <summary>
            ############# ####### ##### # ############ ####### ### ############# ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeCreatedOnColumn">
            <summary>
            ############# ####### ### ######## #### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeCreatedByColumn">
            <summary>
            ############# ####### ### ######## ###### ## #######, ####### ###### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeModifiedOnColumn">
            <summary>
            ############# ####### ### ######## #### ########### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeModifiedByColumn">
            <summary>
            ############# #######, ############, ### #### ######### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeColumns">
            <summary>
            ############# #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeIndexes">
            <summary>
            ############# ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeColumnsLocalizableValues">
            <summary>
            ############# ############ ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePredefinedColumnsLocalizableValues(System.Boolean)">
            <summary>
            ############# ################ ############ ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.SetColumnsDefInheritance(System.Guid)">
            <summary>
            #### ########, ### ####### ## ####### #####, ### ### #### #######, ############# ########## 
            ############# #####. 
            </summary>
            <param name="schemaUId">########## ############# #####, # ####### #### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean,Terrasoft.Core.Entities.EntitySchemaColumnMap@,System.Boolean,System.Nullable{System.Guid})">
            <summary>
            Creates and returns select query for specified schema columns enumeration and additionally returns
            columns map. Request may contain primary display values from lookups,
            depending on <paramref name="takeDisplayLookupValues"/>.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="columns">Columns which should be placed in query.</param>
            <param name="takeDisplayLookupValues">Indicate whether to get primary display values.
            If <c>true</c> primaty display values will be fetched.</param>
            <param name="columnMap">Column map for resulting query.</param>
            <param name="useAdminRights">Idicates whether to use administration rights.</param>
            <param name="localizationCultureId">
            System culture identifier specifies in which culture localizable columns will be represented.
            </param>
            <returns>Query for fetching columns from current schema.</returns>
            <exception cref="T:System.Security.SecurityException">Not enough rights for reading data for current schema.</exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">
            There is no schemas list for primary display values or at least one schema is not initialized.
            </exception>
            <remarks>Method is overloaded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializePrimaryInfo">
            <summary>
            ############ ############# ######## ####### ###### #####. 
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ### ###### ##### ###### ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            ############ ####### ##### ## ########## # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############ 
            ########## #####.</param>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ##### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############ 
            ########## #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeCreatedInSchemaUId">
            <summary>
            ### ########### ####### ###### ##### ############# ########## ############# #####, # ####### ### 
            #### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeModifiedInSchemaUId">
            <summary>
            ### ########### ####### ###### ##### ############# ########## ############# #####, # ####### ### 
            #### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.SetDefInheritance">
            <summary>
            ### #### ######### #####, # ####### ## ########## ############# ############ #####, ############# 
            ############# ####### ##### ### ############. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ####### #####.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Performs initialization of localizable values from specified group <paramref name="resourceGroupName"/> in
            <paramref name="resourceManagerName"/> resource manager.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ReInitializeLocalizableValues(System.String,System.String)">
            <summary>
            Performs reinitialization of localizable values from specified group <paramref name="resourceGroupName"/> in
            <paramref name="resourceManagerName"/> resource manager.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            ######### ########## ######### ##### ############## ####### #####.
            <see cref="T:Terrasoft.Core.MetaItem"/>.
            </summary>
            <param name="metaItems">#########, ####### ########### ############## ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CloneShallow">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ###### ####### ##### ### #######.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> - #### ####### ##### ### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateEntity(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ######### #######, ####### ######### #####.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> # #######, ########### ## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateTrackChangesInsertSelect(Terrasoft.Core.UserConnection,System.Object,Terrasoft.Core.Entities.EntityChangeType)">
            <summary>
            ########## ###### ## ########## ###### # #######, #### ##### ######## #############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="primaryColumnValue"></param>
            <param name="changeType">### ######### ######## - #######.</param>
            <returns>###### ## ########## ###### # ####### ######### ## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            ####### ####### ###### ### ######### ####### ####### #####, ######### ######## ################ ###########.
            # ########### ## ######## ######### <paramref name="takeDisplayLookupValues"/> # ####### ##### ############ 
            ######### ############ ######## ## ############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="takeDisplayLookupValues">####### ######### # ####### ######### ############ ########.
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.</param>
            <returns>###### ### ######### ####### ####### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Boolean,Terrasoft.Core.Entities.EntitySchemaColumnMap@)">
            <summary>
            ####### ####### ###### ### ######### ######## #### ####### ####### #####, ######### ######## 
            ################ ###########, ######### ### #### ##### #######. # ########### ## ######### 
            <paramref name="takeDisplayLookupValues"/> # ####### ##### ############ ######### ############ ########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="takeDisplayLookupValues">####### ######### # ####### ######### ############ ########.
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.
            </param>
            <param name="columnMap">##### ####### ## ########## #######.</param>
            <returns>###### ### ######### ####### ####### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean)">
            <summary>
            ####### ####### ###### ### ######### ######## ######### ############# ####### ####### #####, ######### 
            ######## ################ ###########. # ########### ## ######## ######### 
            <paramref name="takeDisplayLookupValues"/> # ####### ##### ############ ######### ############ ######## ## 
            ############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columns">#######, ####### ###### #### ########## # #######.</param>
            <param name="takeDisplayLookupValues">####### ######### # ####### ######### ############ ########.
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.
            </param>
            <returns>###### ### ######### ####### ####### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateSelect(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntitySchemaColumn},System.Boolean,Terrasoft.Core.Entities.EntitySchemaColumnMap@)">
            <summary>
            ####### ####### ###### ### ######### ######### ############# ####### #####, ######### ######## 
            ################ ###########, ######### ### #### ##### #######. # ########### ## ######## ######### 
            <paramref name="takeDisplayLookupValues"/> # ####### ##### ############ ######### ############ ######## 
            ## ############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columns">#######, ####### ###### #### ########## # #######.</param>
            <param name="takeDisplayLookupValues">####### ######### # ####### ######### ############ ########. 
            #### ######## ##### <c>true</c>, # ####### ##### ########## ######### ############ ########.
            </param>
            <param name="columnMap">##### ####### ## ########## #######.</param>
            <returns>###### ### ######### ####### ####### #####.</returns>
            <exception cref="T:System.Security.SecurityException">############ #### ### ###### ########## # ###### #####.</exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### ### ######### ############ ######## ## ###### ###### ####, ## 
            ####### ####### ######## #### #### #### ## #### #### ## ###################.</exception>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.CreateGeneralSelect(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ###### ### ######### #### ####### ####### #####, ######### ######## ################ ###########.
            # #### ###### ## ########## ############ ####### ############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>###### ### ######### #### ####### ####### #####.</returns>
            <exception cref="T:System.Security.SecurityException">############ #### ### ###### ########## ## ###### #####.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindSchemaColumnByMetaPath(System.String)">
            <summary>
            ########### ######## ######## # ####### # ############ #### # ###### ############ ##### # ########## 
            ############### ### #######.
            </summary>
            <param name="columnMetaPath">######## # #######.</param>
            <returns>
            #######, ########## ############### ######## <paramref name="columnMetaPath"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnByMetaPath(System.String)">
            <summary>
            ########### ######## ######## # ####### # ############ #### # ###### ############ ##### # ########## 
            ############### ### #######. #### ##### ####### ## #######, ############ ##########.
            </summary>
            <param name="columnMetaPath">######## # #######.</param>
            <returns>
            #######, ########## ############### ######## <paramref name="columnMetaPath"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name = "columnMetaPath"/>
            ######## ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ####### ## ######## ##### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ##### ########## ## ####### ###### ## 
            #####-##########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindSchemaColumnByPath(System.String)">
            <summary>
            ########### ######## #### # ####### # ############ #### # ###### ############ ##### # ########## 
            ############### ### #######.
            </summary>
            <param name="columnPath">#### # ####### #####.</param>
            <returns>#######, ########## ############### #### <paramref name="columnPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">#### ####### ## ######## ##### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ### ####### # ##### ##########, ## ###### ###### 
            #### - ############.
            </exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException"># ####### # ##### ########## ## ####### ###### ## 
            #####-##########.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnByPath(System.String)">
            <summary>
            ########### ######## #### # ####### # ############ #### # ###### ############ ##### # ##########
            ############### ### #######. #### ##### ####### ## #######, ############ ##########. 
            </summary>
            <param name="columnPath">#### # ####### #####.</param>
            <returns>#######, ########## ############### #### <paramref name="columnPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ## ####### ####### ## ############### ############ #### ### 
            <paramref name="columnPath"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetDBPrimaryColumn">
            <summary>
            ########## ######### ####### ###### #####.
            #### ####### ## #######, ############ ##########.
            </summary>
            <returns>
            #### ##### ########### ##########, ##### ########## ######### ####### ####### #####. ### ############ ##### 
            #### # ###### ##### ########## ####### ##### # ######### ###### #####.
            </returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### # ####### ##### ## ########## ######### ####### #### ####### 
            ### ##### # ############ ######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetPrimaryColumnName">
            <summary>
            ########## ### ######### ####### ###### ##### ## ###### #### ######.
            </summary>
            <returns>### ######### ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetDBPrimaryColumnName">
            <summary>
            ### ######### ####### ###### ##### # ####### #### ######.
            </summary>
            <returns>### ####### # ####### #### ######, ############### ######### ####### #####.</returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### ### ###### ##### ## ################### ######### #######.
            </exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### ### ######### ####### ###### ##### ###### ### <c>null</c>.
            </exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### ### ###### ##### ## ################### ####### ##### # 
            ######### ### ############ #### # ######.</exception>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### ### ####### ##### # ######### ###### ##### ###### ### 
            <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetPrimaryDisplayColumn">
            <summary>
            ########## ######### ####### ### ###########.
            </summary>
            <returns>######### ####### ### ###########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindPrimaryDisplayColumnName">
            <summary>
            ########## ####### # ####### ##### ######### ####### ### ###########.
            </summary>
            <returns>
            ### ######### ####### ### ########### #### <c>null</c>, #### ### ####### # ##### ## ##########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetPrimaryDisplayColumnName">
            <summary>
            ########## ######### ####### ### ###########. #### ##### ####### # ##### ## ##########, 
            ############ ##########.
            </summary>
            <returns>
            ### ######### ####### ### ###########.
            </returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">#### ### ###### ##### ## ################### ######### ####### ### 
            ########### #### #### ### ###### ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetMultiLookupPathParts(System.String)">
            <summary>
            ## ######### #### # lookup-####### ##### ######### ###### ##### ########### ##### # ###, ########### # 
            ###### ############.
            </summary>
            <param name="columnPath">#### # ####### #####.</param>
            <returns>###### ##### #### # ######### ####### ### ###########, ############### # ###### 
            ############.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnReversePathByPath(System.String)">
            <summary>
            ## ######### #### # ####### ######### ###### ############ #### # ######### #######.
            </summary>
            <param name="columnPath">#### # ####### #####.</param>
            <returns>#### # ######### ####### # ####### #####, ############### <paramref name="columnPath"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ####### ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidTypeCastException">#### ####### ## ######## ##### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException"># ####### # ##### ########## ## ####### ###### ## 
            #####-##########</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">####### ###### #### #### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ##### ########## ## ####### ###### ## 
            #####-##########.</exception>
            <exception cref = "T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ##### ########## ## ####### ######### 
            #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnFullCaptionByPath(System.String,System.String)">
            <summary>
            ## ######### #### # ####### ##### ######### ###### ####### ######### ####### ##### ######## ###########.
            </summary>
            <param name="columnPath">#### # ####### #####.</param>
            <param name="delimiter">###########.</param>
            <returns>######, ############## ##### ###### ######### #######, ######## # <paramref name = "columnPath"/>
            ##### ########### <paramref name = "delimiter"/>.</returns>
            <exception cref = "T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ####### ## ######## ##### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ##### ########## ## ####### ###### ## 
            #####-##########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnMetaPathByPath(System.String)">
            <summary>
            ## ######### ############ #### # ####### ######### ###### ######## # ###### #######.
            </summary>
            <param name="columnPath">########### #### # #######.</param>
            <returns>######## # #######, ######## <paramref name = "columnPath"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.FindSchemaColumnPathByMetaPath(System.String)">
            <summary>
            ## ######### ######## # ####### ##### ######### ###### ############ #### # ###, ####### ######## # ######
            #### ############ #####.
            </summary>
            <param name="columnMetaPath">######## # #######.</param>
            <returns>###### ############ #### # #######, ############### ######## <paramref name = "columnMetaPath"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ####### ## ######## ##### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ##### ########## ## ####### ###### ## 
            #####-##########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetSchemaColumnPathByMetaPath(System.String)">
            <summary>
            ## ######### ######## # ####### ##### ######### ###### ############ #### # ###, ####### ######## # ######
            #### ############ #####.
            </summary>
            <param name="columnMetaPath">######## # #######.</param>
            <returns>###### ############ #### # #######, ############### ######## <paramref name = "columnMetaPath"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name = "columnMetaPath"/>
            ######## ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ####### ## ######## ##### ##########.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ##### ########## ## ####### ###### ## 
            #####-##########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String)">
            <summary>
            ######### # ####### ##### ##### ####### # ######### ###### ####.
            </summary>
            <param name="typeName">### #### #######.</param>
            <returns>####### #### <paramref name="typeName"/>.</returns>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String,System.String)">
            <summary>
            ######### # ####### ##### ##### ####### # ########## ###### #### # ###### #######.
            </summary>
            <param name="typeName">### ####.</param>
            <param name="name">### #######.</param>
            <returns>####### # ###### <paramref name="name"/> #### <paramref name="name"/>.</returns>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String,System.String,System.Guid)">
            <summary>
            ######### # ####### ##### ##### ####### # ########## ###### #######, ###### #### # ########## 
            ###############.
            </summary>
            <param name="typeName">### ####.</param>
            <param name="name">### #######.</param>
            <param name="uid">########## ############# #######.</param>
            <returns>####### # ###### <paramref name="name"/> #### <paramref name="name"/> # ############### 
            <paramref name="uid"/>.</returns>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddColumn(System.String,System.String,System.Guid,Terrasoft.Core.Entities.EntitySchemaColumnRequirementType)">
            <summary>
            ######### # ####### ##### ##### ####### # ########## ######, ##### # ########## ###############. ### #### 
            ### ####### ########### ####### ######## ########, ############ ### ##########.
            </summary>
            <param name="typeName">### ####.</param>
            <param name="name">### #######.</param>
            <param name="uid">########## ############# #######.</param>
            <param name="requirementType">####### ######## ############ ########.</param>
            <returns>####### # ###### <paramref name="name"/> #### <paramref name="name"/>, ############### 
            <paramref name="uid"/>, ####### ######## ############ ######## <paramref name="requirementType"/>.</returns>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddLookupColumn(System.String,System.String)">
            <summary>
            ######### # ####### ##### ##### ####### #### ########## # ########## ###### ####### # ###### 
            #####-###########.
            </summary>
            <param name="referenceSchemaName">### #####-###########.</param>
            <param name="name">### #######.</param>
            <returns>####### #### ########## # ###### <paramref name="name"/> #####-########### 
            <paramref name="referenceSchemaName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddSystemLookupColumn(System.String,System.String)">
            <summary>
            ######### # ####### ##### ##### ####### #### ########## # ######### ##### ####### # ##### ######### 
            #####-###########.
            </summary>
            <param name="referenceSchemaName">### ######### #####-###########.</param>
            <param name="name">### #######.</param>
            <returns>
            ####### #### ########## # ###### <paramref name="name"/> ######### #####-########### 
            <paramref name="referenceSchemaName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddLookupColumn(System.String,System.String,System.Guid)">
            <summary>
            ######### ##### ####### #### ########## # ########## ###### # ###############, ####### ######### ## 
            ######## #####.
            </summary>
            <param name="referenceSchemaName">### #####, ## ####### ######### #######.</param>
            <param name="name">### #######.</param>
            <param name="uid">########## ############# #######.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/> # ###### <paramref name = "name"/>, ############### 
            <paramref name = "uid"/>, ####### ######### ## ########## <paramref name = "referenceSchemaName"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AddLookupColumn(System.String,System.String,System.Guid,Terrasoft.Core.Entities.EntitySchemaColumnRequirementType)">
            <summary>
            ######### ##### ####### #### ########## # ########## ######, ###############, ####### ######### ## ######## 
            #####. ### #### ### ####### ########### ####### ######## ########, ############ ### ##########.
            </summary>
            <param name="referenceSchemaName">#####, ## ####### ######### ###### #######.</param>
            <param name="name">### #######.</param>
            <param name="uid">########## #############.</param>
            <param name="requirementType">### ############## #########.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.AssignParentSchema(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Sets the specified schema as parent. 
            </summary>
            <param name="parentSchema">Schema to be set as parent. </param>
            <returns>
            <c>true</c>, if specified in the <paramref name = "parentSchema"/> schema was set as parent. Otherwise
            returns <c>false</c>. 
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.ValidateNames(System.Boolean)">
            <summary>
            Checks current schema and its elements validity.
            </summary>
            <param name="validatePrefixes"><c>true</c> for names prefixes validation. Othervise -
            <c>false</c>.</param>
            <exception cref = "T:Terrasoft.Common.InvalidNameException">Raises when schema or schema elements are invalid.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetTrackChangesInDBSchemaName">
            <summary>
            ########## ### ##### ### ##############.
            </summary>
            <returns>### ##### ### ############## ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetInactiveColumn">
            <summary>
            Returns RecordDisabled column instance.
            </summary>
            <returns><see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetTrackChangesInDBSchema">
            <summary>
            ########## ##### ### ############## ####### #####.
            </summary>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchema"/>, ########## ## ############## ######### ####### #####.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetLocalizationSchema">
            <summary>
            Returns localization schema for current schema.
            </summary>
            <returns>The instance of the <see cref = "T:Terrasoft.Core.Entities.EntitySchema"/> class,
            that provides localization schema for current schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetKindSuffix">
            <summary>
            ########## ####### # ############ # ##### ####### #####, ####### ############ ### ######### ########## #### 
            ######### ######## #### ######.
            </summary>
            <returns>#######, ############### #### ####### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchema.GetEntitySchemaByKind(Terrasoft.Core.Entities.EntitySchemaKind)">
            <summary>
            ## ######### #### ######### ##### ########## ############### ######### ######### #####.
            </summary>
            <param name="kind">### #####.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchema"/> #### <paramref name = "kind"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType">
            <summary>
            ####### ######## ######## #######, ############ ### ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType.None">
            <summary>
            ######## ######## ####### ## ###########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType.ApplicationLevel">
            <summary>
            ######## ######## ####### ## ###### ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnRequirementType.DBLevel">
            <summary>
            ######## ######## ####### ## ###### #### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnUsageType">
            <summary>
            ### ############# #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnUsageType.General">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnUsageType.Advanced">
            <summary>
            ### ############# # ########### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnUsageType.None">
            <summary>
            ## ############.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumn">
            <summary>
            ############ ####### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.#ctor">
            <summary>
            ############## ##### ######### ###### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.#ctor(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.DataValueType)">
            <summary>
            ############## ##### ######### ###### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/> # ######## ##### ###### 
            # ######## #####.
            </summary>
            <param name="entitySchema">#####, # ####### ######### #######.</param>
            <param name="dataValueType">### ###### ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.#ctor(Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            ############## ##### ######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/>, ########## ###### ######## #######.
            </summary>
            <param name="source">#######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsLocalizationText">
            <summary>
            Indicates whether column is localization column.
            </summary>
            <remarks>Is used only in localization schema.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ParentSchema">
            <summary>
            Parent schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.UId">
            <summary>
            Column unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Name">
            <summary>
            Column name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DataValueType">
            <summary>
            ### ###### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceSchema">
            <summary>
            #####, ## ####### ######### ####### ####### #### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceSchemaUId">
            <summary>
            ########## #############, ## ####### ######### ####### ####### #### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceValueListSchemaUId">
            <summary>
            ########## ############# ############ ###### ######, ## ####### ######### ####### ####### # ############# 
            ####### ########. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ReferenceValueListSchema">
            <summary>
            ########### ##### ######, ## ####### ######### ####### ####### # ############# ####### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Caption">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Description">
            <summary>
            ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ColumnValueName">
            <summary>
            ### #######, ############## ## ######### ########, ####### ### ########.
            </summary>
            <exception cref = "T:Terrasoft.Common.InvalidObjectStateException">#### ####### ## ######### ## ###### #####, ## #### ## 
            ######## ##### ##########.</exception>
            <exception cref = "T:Terrasoft.Common.InvalidObjectStateException">#### ### ####### #### ########## ## ####### ###### ## 
            ##### - ##########.</exception>
            <exception cref = "T:Terrasoft.Common.InvalidObjectStateException">#### # ##### - ###########, ## ####### ######### #######, 
            ## ####### ######### #######.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DisplayColumnValueName">
            <summary>
            ######### ###### # ######### ####### ### ########### ## ######### ########, ####### 
            ### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.SourceSchemaUIdColumnValueName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ParentCollection">
            <summary>
            ######### ####### #####, ####### ########### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.RequirementType">
            <summary>
            ####### ############## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsDBRequirement">
            <summary>
            #######, ######## ## ####### ############ ## ###### #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsVirtual">
            <summary>
            #######, ######## ## ####### ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsDBReadOnly">
            <summary>
            #######, ##### ## ######## ###### ####### ######## # ####### #### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsValueCloneable">
            <summary>
            ####### ############# #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsMultiLineText">
            <summary>
            ####### ############# ### ####### ######## ########## MemoEdit.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsSimpleLookup">
            <summary>
            ####### ############# ### ####### ######## ########## ComboBoxEdit.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsLocalizable">
            <summary>
            ####### ############# ############# ######## ### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsIndexed">
            <summary>
            ####### ############### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsTrackChangesInDB">
            <summary>
            ####### ############### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.Index">
            <summary>
            ###### #######. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.ValueType">
            <summary>
            ### ###### ######## #######, ####### ############# ########## #### ##### .NET.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DisplayValueType">
            <summary>
            ### ###### ############# ######## #######, ####### ############# ########## #### ##### .NET.
            </summary>
            <exception cref = "T:Terrasoft.Common.InvalidObjectStateException">#### ### ####### #### ########### ########## ## ####### 
            ###### ####-############.</exception>
            <exception cref = "T:Terrasoft.Common.InvalidObjectStateException">#### # #####-###########, ## ####### ######### #######, 
            ## ####### ######### #######.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.DefValue">
            <summary>
            ######## ## ######### ### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.HasDefValue">
            <summary>
            ##########, ########### ## ### ###### ####### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.HasConstDefValue">
            <summary>
            ##########, ########### ## ### ###### ####### ########### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsWeakReference">
            <summary>
            ##########, ### ### ####### # ##### ########## ##### ## ############ ###### ## ###### #### ######, ## #### 
            ### ######## ##### ### ######## ###########. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.IsCascade">
            <summary>
            ### ####### #### ########## ##########, ####### ## ### ######### ###### # ####### ## ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumn.UsageType">
            <summary>
            ### ############# #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ############## ######## ######## ####### ## ######### ##########.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## 
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ##### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############ ########## #####.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.Clone">
            <summary>
            ########## ####### - #### ###### #######.
            </summary>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/>, ####### ######## ###### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumn.SetName(System.String)">
            <summary>
            ############# ### ###### ####### ######## ###.
            </summary>
            <param name="name">### #######.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnCollection">
            <summary>
            ############# ###### ###### # ########## ####### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            ############## ##### ######### ###### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumnCollection"/> # ######## #####.
            </summary>
            <param name="entitySchema">#####, # ####### ######### ##### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaColumnCollection)">
            <summary>
            ############## ##### ######### ###### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumnCollection"/>, ########## ###### 
            ######## ######### #######.
            </summary>
            <param name="source">######### #######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnCollection.EntitySchema">
            <summary>
            ##### ####### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.InsertItem(System.Int32,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            ######### # ####### ######### ####### ######## ####### # ######## #######.
            </summary>
            <param name="index">#######, # ####### ########### ####### <paramref name = "item"/>.</param>
            <param name="item">#######, ####### ########### # ####### <paramref name = "index"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.RemoveItem(System.Int32)">
            <summary>
            ####### ## ####### ######### ####### ####### # ######## #######.
            </summary>
            <param name="index">#######, ## ####### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.Clone">
            <summary>
            ########## ######### ####### - #### ###### #########.
            </summary>
            <returns>
            ######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumnCollection"/>, ####### ######## ###### ####### ######### #######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.FindByCaption(System.String)">
            <summary>
            ############ ##### ####### # ######### ## ######### ######### #######.
            </summary>
            <param name="caption">######### ####### #######.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/> # ########## <paramref name= "caption"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.FindByColumnValueName(System.String)">
            <summary>
            ############ ##### ####### # ######### ## ######### ######## ####### <c>ColumnValueName</c>.
            </summary>
            <param name="columnValueName">######## ######## <c>ColumnValueName</c> ### ######.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/> # ###### ######## 
            <paramref name = "columnValueName"/>.
            #### ##### ####### ## #######, ############ <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnCollection.GetByColumnValueName(System.String)">
            <summary>
            ########## ####### ## ######### ## ######### ######## ####### <c>ColumnValueName</c>. #### ##### ####### ## 
            #######, ############ ##########.
            </summary>
            <param name="columnValueName">######## ######## <c>ColumnValueName</c> ### ######.</param>
            <returns>######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumn"/> # ###### ######## 
            <paramref name = "columnValueName"/>.
            </returns>
            <exception cref = "T:Terrasoft.Common.ItemNotFoundException">#### ####### # ###### ######## 
            <paramref name = "columnValueName"/> ## ####### # ####### #########.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.UId">
            <summary>
            ########## ############# #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.Name">
            <summary>
            ### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.Caption">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.DataValueTypeUId">
            <summary>
            ############# #### ###### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.IsRequired">
            <summary>
            #######, ######## ## ####### ############ ### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.IsLookup">
            <summary>
            #######, ######## ## ####### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.ClientEntitySchemaColumn.ReferenceSchemaUId">
            <summary>
            ############# #####, ## ####### ######### ####### ####### #### ##########. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnDefSource">
            <summary>
            ######### ######## ## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.None">
            <summary>
            ### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.Const">
            <summary>
            #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.Settings">
            <summary>
            #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSource.SystemValue">
            <summary>
            ######### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource">
            <summary>
            ######### ######### ######## ## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentTime">
            <summary>
            ####### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentDate">
            <summary>
            ####### ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentDateTime">
            <summary>
            ####### #### # #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentUser">
            <summary>
            ####### ############.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentUserContact">
            <summary>
            ####### ######## ############.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.CurrentUserAccount">
            <summary>
            ########## ######## ############.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.GenerateUId">
            <summary>
            ########## #############.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaColumnDefSourceSystemValueSource.GenerateSequentialUId">
            <summary>
            ################ #############.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaColumnDef">
            <summary>
            ############ ######## ## ######### ### ####### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.#ctor(Terrasoft.Core.Entities.EntitySchemaColumnDef)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/>, ####### ######## ###### ######## 
            #######.
            </summary>
            <param name="source">#######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.Source">
            <summary>
            ######## ### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.Value">
            <summary>
            ######## ## #########.
            </summary>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### ######## ### ######## ## ######### ## ######## ### ###### 
            #######.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ValueSource">
            <summary>
            ######## ######### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsDateOrTimeDataValueType">
            <summary>
            ##########, ######## ## ######## ## ######### ######### #### ### #### # #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsValueListDataValueType">
            <summary>
            ##########, ######## ## ######## ## ######### ######### ## ############ ###### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsConstantValue">
            <summary>
            ##########, ######## ## ######## ## ######### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.IsSystemValue">
            <summary>
            ##########, ######## ## ######## ## ######### ######### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ReferenceSchemaUId">
            <summary>
            ###### ## #####, ####### ######## #######, ####### ######## ###### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ReferenceValueListSchemaUId">
            <summary>
            ########## ############# ############ ###### ######, ## ####### ######### ####### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.SystemValue">
            <summary>
            ######### ######## #######.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">
            #### ### ######## ## ######### ########## ######## ############# ########## ########.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.ParentColumn">
            <summary>
            #######, ####### ######## ###### ######## ## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaColumnDef.SystemUserConnection">
            <summary>
            ################ ###########.
            </summary>
            TODO #138944
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ############## ######## ######## ####### ## ######### ##########.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## 
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.GetFilteredSettingsList(Terrasoft.Core.DataValueType,Terrasoft.Core.UserConnection)">
            <summary>
            ########## ############### ###### ######## # ########### ## ########## #### ###### #######.
            </summary>
            <param name="dataValueType">### ###### #######.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>############### ###### ######## ### #### ###### <paramref name="dataValueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.Equals(System.Object)">
            <summary>
            ##########, ##### ## ######## ###### <see cref="T:System.Object"/> ######## ######## ## #########.
            </summary>
            <param name="obj">######, ####### ######### ######## # ####### ######### ## #########.</param>
            <returns>
            <c>true</c>, #### <paramref name="obj"/> ##### ######## ######## ## #########; ##### - <c>false</c>.
            </returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.GetHashCode">
            <summary>
            ########## ###-### ########## ######## ## #########.
            </summary>
            <returns>###-### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.Equals(Terrasoft.Core.Entities.EntitySchemaColumnDef)">
            <summary>
            ##########, ##### ## ######## ######## ## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/> ######## ######## 
            ## #########.
            </summary>
            <param name="comparedValue">######## ## #########, ####### ######### ######## # ####### ######### ## 
            #########.</param>
            <returns>
            <c>true</c>, #### <paramref name="comparedValue"/> ##### ####### #######; ##### - <c>false</c>.
            </returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            ############ ####### ######## ## ######### ## ########## # ####### ######### 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############ ########## 
            ######## ## #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ######## ## ######### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############ ########## ######## 
            ## #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.GetDisplayValue">
            <summary>
            ########## ############ ######## ######## ## #########.
            </summary>
            <returns>
            ############ ######## ######## ## #########.
            </returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### ### ####### ########## ## ############## ######## ######## 
            ## #########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaColumnDef.Clone">
            <summary>
            ########## ######## ## #########, ####### ######## ###### ######## ######## ## #########.
            </summary>
            <returns>
            ######### <see cref = "T:Terrasoft.Core.Entities.EntitySchemaColumnDef"/>, ####### ######## ###### ######## ######## ## 
            #########.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.IEntitySchemaComparer">
            <summary>
            Provides methods to compare schemas.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntitySchemaComparer.IsEqualToDbStructure(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Determines if schema structure is identical to corresponding database table structure.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaComparer">
            <summary>
            Provides methods to compare schemas.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaComparer.GetTableExists(System.String,Terrasoft.Core.UserConnection)">
            <summary>
            Determines if specified table exists.
            </summary>
            <param name="tableName">Table name.</param>
            <param name="userConnection">UserConnection.</param>
            <returns><b>true</b>, if specified table exists; <b>false</b> - otherwise.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaComparer.IsEqualToDbStructure(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Determines if schema structure is identical to corresponding database table structure.
            </summary>
            /// <returns><b>true</b>, if schema structure is identical to corresponding database table structure;
            <b>false</b> - otherwise.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndexColumn">
            <summary>
            ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumn"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.#ctor(Terrasoft.Core.Entities.EntitySchemaIndexColumn)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumn"/>, ########## ###### ######## ####### 
            #######.
            </summary>
            <param name="source">####### #######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.Name">
            <summary>
            ### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.ParentCollection">
            <summary>
            #########, ####### ########### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.ColumnUId">
            <summary>
            ############# ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.Column">
            <summary>
            ######### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumn.OrderDirection">
            <summary>
            ####### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ####### ######## ####### ####### ####### ## ########## # ####### ######### 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## 
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ####### ####### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############ 
            ########## ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumn.Clone">
            <summary>
            ########## #### ####### ####### #######.
            </summary>
            <returns>#### ####### ####### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection">
            <summary>
            ######### ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection"/>, ########## ###### ######## 
            ######### ####### #######.
            </summary>
            <param name="source">######### ####### #######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.ParentIndex">
            <summary>
            ######, ########## ###### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.InsertItem(System.Int32,Terrasoft.Core.Entities.EntitySchemaIndexColumn)">
            <summary>
            ######### # ######### ######## ####### ####### ## ########## #######.
            </summary>
            <param name="index">######, ## ######## ########### ####### ####### # #########.</param>
            <param name="item">####### #######, ####### ########### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.RemoveItem(System.Int32)">
            <summary>
            ####### ## ######### ####### ####### ## ########## #######.
            </summary>
            <param name="index">######, ## ######## ######### ####### ####### ## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexColumnCollection.Clone">
            <summary>
            ########## #### ####### ######### ####### #######.
            </summary>
            <returns>#### ####### ######### ####### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndex">
            <summary>
            ###### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndex"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.#ctor(Terrasoft.Core.Entities.EntitySchemaIndex,System.Boolean)">
            <summary>
            Initializes a clone instance of the <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndex"/>.
            </summary>
            <param name="source">The <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndex"/> object, which will be cloned.</param>
            <param name="isSchemaExtendParent">
            Flag that indicates whether index will be created in the extended or inherited schemes.
            </param>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaIndex._getIndexPrefix">
            <summary>
            ########, ########## #######, ########### ########## ####### ####### ##### ## ####### ## ####### #########
            ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.UId">
            <summary>
            ############# ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.Name">
            <summary>
            ### ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.ParentMetaSchema">
            <summary>
            ############ ######, ########## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.NamePrefix">
            <summary>
            #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.ParentCollection">
            <summary>
            ############ #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsAutoName">
            <summary>
            ####### ############### ########## ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsUnique">
            <summary>
            ##########, ######## ## ###### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsClustered">
            <summary>
            ##########, ######## ## ###### ##########, ## #### ########## ######## ############# #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.Columns">
            <summary>
            ######### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIndex.IsInherited">
            <summary>
            #######, ######## ## ###### ##############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ####### ######## ####### ####### ##### ## ########## # ####### ######### 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## 
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.GetIndexName(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            ########## ############## ########## ### ####### ## ####### ####### #### ######, ####### ######## # #### 
            #######, ############# #####, ############# #######.
            </summary>
            <param name="schema">######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>, ## ######## 
            ############ ############# #####, ########### # ############ ##### #######.</param>
            <param name="column">######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/>, ## ####### 
            ############ ############## ######### ### ############ ##### #######.</param>
            <returns>######, ############## ########## ### ####### ####### #### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ####### ##### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############ 
            ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndex.Clone">
            <summary>
            ########## #### ######## ####### #####.
            </summary>
            <returns>#### ######## ####### #####.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection">
            <summary>
            ######### ######## #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaIndexCollection,System.Boolean)">
            <summary>
            Initializes a clone instance of the <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection"/>.
            </summary>
            <param name="source">The <see cref="T:Terrasoft.Core.Entities.EntitySchemaIndexCollection"/> instance, which will be cloned.</param>
            <param name="isSchemaExtendParent">
            Flag that indicates whether index collection will be created in the extended or inherited schemes.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.InsertItem(System.Int32,Terrasoft.Core.Entities.EntitySchemaIndex)">
            <summary>
            ######### # ######### ######## ####### # ######### #######.
            </summary>
            <param name="index">#######, # ####### ########### <paramref name="item"/>.</param>
            <param name="item">######, ####### ########### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.RemoveItem(System.Int32)">
            <summary>
            ####### ####### ## ######### ## ######## #######.
            </summary>
            <param name="index">#######, ## ####### ######### ####### ## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIndexCollection.Clone">
            <summary>
            ########## #### ####### ######### ########.
            </summary>
            <returns>#### ####### ######### ########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo">
            <summary>
            ##### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.SchemaUId">
            <summary>
            ############# #####, ## ####### ############## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.SchemaName">
            <summary>
            ### #####, ## ####### ############## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.SchemaCaption">
            <summary>
            ######### #####, ## ####### ############## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.ColumnUId">
            <summary>
            ############# #######, ## ####### ############## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo.ColumnCaption">
            <summary>
            ######### #######, ## ####### ############## #####.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollection">
            <summary>
            ######### ###### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollection.Contains(System.Guid)">
            <summary>
            ##########, ########### ## ##### # ######## ############### ######### ###### #####.
            </summary>
            <param name="uid">############# #####, ####### ####### ###########.</param>
            <returns><c>true</c>, #### ##### # ############### <paramref name="uid"/> ####### # #########
            ######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollectionComparer">
            <summary>
            ############# ###### ######### ###### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfoCollectionComparer.Compare(Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo,Terrasoft.Core.Entities.EntitySchemaOppositeReferenceInfo)">
            <summary>
            ########## ##### ##### ######## ##### ## ##### #####.
            </summary>
            <param name="firstItem">###### ##### ### #########.</param>
            <param name="secondItem">###### ##### ### #########.</param>
            <returns>#####, ############ ########### ######### ##### <paramref name="firstItem"/> #
            <paramref name="secondItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaManager"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.ItemCaption">
            <summary>
            ######### ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.ResourceManagerName">
            <summary>
            ### ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.DataValueTypeManager">
            <summary>
            ######## ######## ##### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.SystemValueManager">
            <summary>
            ######## ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManager.HashFunc">
            <summary>
            ####### ###########. ## ######### - MD5.
            </summary>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            #### ############### ######## ##### <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.SaveSchemaContent(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Entities.EntitySchema})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Returns schema source code generator, using specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>Schema source code generator.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetProcessSchemaGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ######### #### #########, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### #### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetMetaDataSerializer(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ############ ########## ####, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>############ ########## ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            ############## ######## ####, ######### ######## ######### # ########## ################# #####.
            </summary>
            <param name="provider">######### ######### ####.</param>
            <param name="configuration">########## ################# #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Actualizes schema manager item descriptor.
            </summary>
            <param name="item">Schema manager item that needs actualization.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Creates an instance of the <see cref="T:Terrasoft.Core.Entities.EntitySchema" /> type schema.
            </summary>
            <param name="schemaManagerItem">Item of manager.</param>
            <param name="assembly">An assembly that contains the type of the schema that is being created.</param>
            <returns>The initialized instance of the schema.</returns>
            <exception cref="T:Terrasoft.Common.NullOrEmptyException">If schema instance is null.</exception>
            <remarks>The method is overloaded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.InitializeSafeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Creates an instance of the <see cref="T:Terrasoft.Core.Entities.EntitySchema" /> type schema.
            If type not found in assembly then returns <c>null</c>.
            </summary>
            <param name="schemaManagerItem">Item of manager.</param>
            <param name="assembly">An assembly that contains the type of the schema that is being created.</param>
            <returns>The initialized instance of the schema or <c>null</c> if the type of
            schema <paramref name="schemaManagerItem"/> not found in <paramref name="assembly"/>.</returns>
            <remarks>The method is overloaded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.SaveSchema(System.Guid,Terrasoft.Core.UserConnection,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Saves schema.
            </summary>
            <param name="uid">Specified designed schema UId.</param>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="validateNamePrefixes">Determines if need to validate prefixes of the schema's and its
            elements names before save.</param>
            <param name="generateBundles">Determines if schema bundles should be generated after save.</param>
            <param name="lockSchemaInSourceControlStorage">Determines if schema bundles should be generated after save.
            </param>
            <returns><c>true</c> if schema is successfully saved; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.Security.SecurityException">If user have no rights to modify schema.</exception>
            <remarks>The method is overloaded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetSchemaOppositeReferences(System.Guid,Terrasoft.Core.Entities.EntitySchemaColumnUsageType,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Returns collection of references to schema with specified <paramref name="schemaUId"/>,
            <paramref name="usageType"/> and <paramref name="userConnection"/>.
            </summary>
            <param name="schemaUId">Referenced schema identifier.</param>
            <param name="usageType">Specifies column usage type.</param>
            <param name="userConnection">User connection.</param>
            <param name="includeSysTable">Specifies whether to use system tables.</param>
            <returns>Collection of references to schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManager.GetSchemaChildren(System.Guid)">
            <summary>
            Returns child schema references collection.
            </summary>
            <param name="schemaUId">Parent schema identifier.</param>
            <returns>Child schema references collection.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor">
            <summary>
            ########## ######## ######### #### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor.MetaDataHash">
            <summary>
            ### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            ######### ############## ###########.
            </summary>
            <param name="reader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ##############.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaManagerItemDescriptor.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ###########.
            </summary>
            <param name="writer">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ############.
            </param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType">
            <summary>
            Type of entity schema request macros.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.None">
            <summary>
            Macros type is not defined.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentUser">
            <summary>
            Current user.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentUserContact">
            <summary>
            Contact of current user.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Yesterday">
            <summary>
            Yesterday.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Today">
            <summary>
            Today.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Tomorrow">
            <summary>
            Tomorrow.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousWeek">
            <summary>
            Previous week.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentWeek">
            <summary>
            Current week.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextWeek">
            <summary>
            Next week.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousMonth">
            <summary>
            Previous month.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentMonth">
            <summary>
            ####### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextMonth">
            <summary>
            ######### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousQuarter">
            <summary>
            ########## #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentQuarter">
            <summary>
            ####### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextQuarter">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousHalfYear">
            <summary>
            ########## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentHalfYear">
            <summary>
            ####### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextHalfYear">
            <summary>
            ######### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousYear">
            <summary>
            ########## ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentYear">
            <summary>
            ####### ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousHour">
            <summary>
            ########## ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.CurrentHour">
            <summary>
            ####### ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextHour">
            <summary>
            ######### ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextYear">
            <summary>
            ######### ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextNDays">
            <summary>
            ######### N ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousNDays">
            <summary>
            ########## N ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextNHours">
            <summary>
            ######### N #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousNHours">
            <summary>
            ########## N #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.DayOfMonth">
            <summary>
            #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.DayOfWeek">
            <summary>
            #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Hour">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.HourMinute">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Month">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.Year">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.DayOfYearToday">
            <summary>
            Anniversary today.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.DayOfYearTodayPlusDaysOffset">
            <summary>
            Anniversary on the date computed as today plus days offset.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.NextNDaysOfYear">
            <summary>
            Anniversary on the next several days.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryMacrosType.PreviousNDaysOfYear">
            <summary>
            Anniversary on the previous several days.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryState">
            <summary>
            Represents EntitySchemaQuery properties that could be changed in GetEntityCollectionByChunks.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryState.ChunkSize">
            <summary>
            Rows count to read from DB in single chunk.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryState.UseOffsetFetchPaging">
            <summary>
            Determines if offset-fetch paging enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryState.QueryKind">
            <summary>
            Kind of the query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryState.CacheItemName">
            <summary>
            Cache element name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryLoadingEventArgs">
            <summary>
            ############# ###### ### #######, ############ ### ######## ###### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryLoadingEventArgs.SelectQuery">
            <summary>
            ######### ## #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryOptions">
            <summary>
            ##### ######## ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryOptions.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryOptions"/>.
            </summary>
            <remarks>
            # ############ ## ######### ######## <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableRowCount"/> ###############
            ######## 14.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableRowCount">
            <summary>
            ########## ####### ######## ############### ###### ######, ############# ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableDirection">
            <summary>
            ########### ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.PageableConditionValues">
            <summary>
            ######## ####### ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.HierarchicalMaxDepth">
            <summary>
            ############ ####### ########### ############## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.HierarchicalColumnName">
            <summary>
            ### #######, ############## ### ########## ############## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryOptions.HierarchicalColumnValue">
            <summary>
            ######### ######## ############# #######, ## ######## ##### ######### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryOptions._rowsOffset">
            <summary>
            Number of rows to skip.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQuery">
            <summary>
            ############ ###### # ##### #######. ### ############### #####, ########### ######## #######
            #######, ######### ###### ####### ##### # ######## ####### ####### (#####) ############
            ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</summary>
            <remarks>############ ############# ### ########## ##### # ## ######## # ############.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchema)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> # ######## ######## ######.</summary>
            <param name="rootSchema">######## #####.</param>
            <remarks># ######## ######## ##### ############### ########## ######### <paramref name="rootSchema"/>. # 
            ######## ######### #### ############### ######## ########### ########## ######## #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchema,System.Threading.CancellationToken)">
            <summary>Initialises instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> whith the given root schema.</summary>
            <param name="rootSchema">Root schema.</param>
            <param name="cancellationToken">The token to monitor for cancellation requests.</param>
            <remarks>The manager of the root schema will be used as a manager 
            for this instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/></remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchemaManager,System.String)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> # ######### ########## #### # ###### 
            ######## #####.</summary>
            <param name="entitySchemaManager">######### ######### ####.</param>
            <param name="sourceSchemaName">### ######## #####.</param>
            <remarks># ######### #### <paramref name="entitySchemaManager"/> ############## ##### ##### # ###### 
            <paramref name="sourceSchemaName"/> # # ######## ######## ##### ########### ######### ######### #####.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, ########## ###### ########### ####### 
            # ##### #######.</summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.CanUseChunk">
            <summary>
            True if query must be read by chunks.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.RootSchemaAlias">
            <summary>
            Gets alias for the root schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.QueryKind">
            <summary>
            Kind of the query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.QueryOptimizationApplied">
            <summary>
            Optimization applied to query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Name">
            <summary>
            ###.
            </summary>
            <exception cref="T:System.ArgumentException">### ####### ######### ##### ######## #############.</exception>
            <exception cref="T:System.ArgumentException">#### ######## ############# ########, ## ########## ############## 
            ###############, ### ###### ######.</exception>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.CacheItemName">
            <summary>
            ### ######## ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ChunkSize">
            <summary>
            Rows to read from DB in single chunk.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ParentCollection">
            <summary>
            ######### ########, ####### ########### ####### ###### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ParentEntitySchema">
            <summary>
            ############ ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.IsInherited">
            <summary>
            #######, ######## ## ###### ##############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.CanReadUncommitedData">
            <summary>
            #######, ############, ##### ## ######## # ########## ####### ######, ### ####### ## ######### ##########.
            </summary>
            <remarks>#### ######## ##### <c>true</c>, ## # ########## ####### ######## ######, ### ####### ## ######### 
            ##########; #### <c>false</c> - # ###### ######## ###### ######, ### ####### ######### ##########.
            ######## ## #########: <c>true</c>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.IgnoreDisplayValues">
            <summary>
            #######, ############, ### # ####### ## ##### ############## ############ ######## #######.
            </summary>
            <remarks>#### ######## ##### <c>true</c>, ## # ####### ############ ############ ######## #######; #### 
            ######## ##### <c>false</c>, ## ###### ########## ######## ######## #######.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Caption">
            <summary>
            #########.
            </summary>
            <remarks>## ######### ################ ########## ##### #######.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.ManagerItem">
            <summary>
            ####### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Manager">
            <summary>
            ######## ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.EntitySchemaManager">
            <summary>
            ######## #### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.DataValueTypeManager">
            <summary>
            ######## ######## ##### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.RootSchema">
            <summary>######## #####.</summary>
            <remarks>### #### # ######## #### ######## ############ #### ######## #####. 
            ######## ################ # ############. ######## ## #########: <c>null</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.PrimaryQueryColumn">
            <summary>#######, ######### ## ######### ####### ######## #####. 
            ########### ### ###### #########.</summary>
            <remarks>######## ## #########: #########, ######### ## ######### ####### ######## #####.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Columns">
            <summary>######### ####### ######## ####### # ##### #######.</summary>
            <remarks>######## ## #########: ######## ####### ## ######## <see cref="P:Terrasoft.Core.Entities.EntitySchemaQuery.PrimaryQueryColumn"/>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Filters">
            <summary>######### ######## ######## ####### # ##### #######.</summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.UseAdminRights">
            <summary>########, ############, ##### ## ########### ##### ### ########## ####### #########
            ######.</summary>
            <remarks>######## ## #########: <c>true</c></remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.UseLocalization">
            <summary>########, ############, ##### ## ############## ############ ######.</summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.UseRecordDeactivation">
            <summary>
            Represent parameter which determines disabling data in filtering.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.HideSecurityValue">
            <summary>
            ########, ############, ##### ## ########## ######## ############# #######.
            </summary>
            <remarks>
            ######## ## #########: <c>false</c>.
            #### ########## ######## # <c>true</c>, ## ######## ############# ####### ##### ##### <c>null</c>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.JoinRightState">
            <summary>########, ############ ####### ######### #### ### ############# ######### ######,
            #### ##### ################ ## #######.</summary>
            <remarks>######## ## #########: ############ ## ######### ######### <see cref="T:Terrasoft.Core.DB.QueryJoinRightLevel"/>.
            #### ######### ## ######, ## ######## ##### <see cref="F:Terrasoft.Core.DB.QueryJoinRightLevel.EnabledForAdditionalColumns"/>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.IsDistinct">
            <summary>#######, ############, ####### ## ##### # ############## ###### ######.</summary>
            <remarks>######## ## #########: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.RowCount">
            <summary>
            ########## #####, ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.SkipRowCount">
            <summary>
            ########## #####, ####### ########## ########## # ############## ###### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.Cache">
            <summary>
            ### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQuery._useOffsetFetchPaging">
            <summary>
            Determines if offset-fetch paging enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.QueryOptimize">
            <summary>
            Allows using query optimization.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQuery.SchemaAliasPrefix">
            <summary>
            Gets or sets the prefix, that is used in schemas aliases generation.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQuery.Loading">
            <summary>
            #######, ########### ### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetRightCondition(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns administration rights condition.
            </summary>
            <param name="schemaName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> name.</param>
            <param name="sourceAlias"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> alias.</param>
            <param name="primaryColumnName"><see cref="T:Terrasoft.Core.Entities.EntitySchema"/> primary column name.</param>
            <param name="useDenyRecordRights">Flag that indicates whether the deny record rights is used.</param>
            <returns><see cref="T:Terrasoft.Core.DB.QueryCondition"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSelect">
            <summary>
            Creates an instance of <see cref="T:Terrasoft.Core.DB.Select"/> initialised with parameters 
            from this instane <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <returns>An initialised instance of <see cref="T:Terrasoft.Core.DB.Select"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntityCollectionByChunks(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            Returns a collection of <see cref="T:Terrasoft.Core.Entities.Entity"/>, 
            that represents the result of the given query 
            against the given user connection read by chunks.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="userOptions">Query options.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Entities.EntityCollection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.SaveEsqState">
            <summary>
            Returns object represending EntitySchemaQuery state.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.RestoreEsqState(Terrasoft.Core.Entities.EntitySchemaQueryState)">
            <summary>
            Restores EntitySchemaQuery state.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.NormalizeQueryOptionsForChunkRead(Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            Returns new EntitySchemaQueryOptions if sourceOptions is null.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnQueryExpression(System.String,Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,System.Boolean)">
            <summary>
            ########## ######### ####### # ##### ####### ## ######## #### # #######, ######## ##### # ########## 
            ####### #####. ### #### ### ####### ##### ##########, ##### ### ## ######## ############ # ######### - 
            ######## ######## ### ######## ### ###########.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <param name="rootSchema">######### ######## #####.</param>
            <param name="schemaColumn">######### #######, ### ####### ######## #########.</param>
            <param name="useDisplayValue">#######, ############ ## ### ####### ######## ### ###########. 
            ############## ########, ## ######### ##### <c>false</c>.</param>
            <returns>######### ####### # ##### #######, ########### ## #### # ####### <paramref name="columnPath"/>, 
            ######## ##### <paramref name="rootSchema"/>, ####### ##### <paramref name="schemaColumn"/> # ###### 
            ######## ######## <paramref name="useDisplayValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnQueryExpression(System.String,Terrasoft.Core.Entities.EntitySchema,System.Boolean)">
            <summary>
            ########## ######### ####### # ##### ####### ## ######## #### # ####### ##### # ######## #####. ### #### 
            ### ####### ##### ##########, ##### ### ## ######## ############ # ######### - ######## ######## ### 
            ######## ### ###########.
            </summary>
            <param name="columnPath">#### # ####### ##### ############ ######## #####.</param>
            <param name="rootSchema">######## #####.</param>
            <param name="useDisplayValue">#######, ############ ## ### ####### ######## ### ###########. 
            ############## ########, ## ######### ##### <c>false</c>.</param>
            <returns>######### ####### # ##### #######, ########### ## #### # ####### <paramref name="columnPath"/>, 
            ######## ##### <paramref name="rootSchema"/> # ###### ######## ######## <paramref name="useDisplayValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpression(System.Object)">
            <summary>
            ########## ######### ####### # ##### ####### ### ######### # ######## #########.
            </summary>
            <param name="parameterValue">######## #########.</param>
            <returns>######### ####### # ##### ####### ### ######### ## ######### <paramref name="parameterValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpression(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ########## ######### ####### # ##### ####### ### ######### # ######## ######### ############# ####.
            </summary>
            <param name="parameterValue">######## #########.</param>
            <param name="valueType">### ######## #########.</param>
            <returns>######### ####### # ##### ####### ### ######### ## ######### <paramref name="parameterValue"/> 
            #### ###### <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpression(System.Object,System.String,Terrasoft.Core.DataValueType)">
            <summary>
            ########## ######### ####### # ##### ####### ### ######### # ######### #########, ############ ##### 
            ###### ######## # ######### ######### ### ###########.
            </summary>
            <param name="parameterValue">######## #########.</param>
            <param name="displayValue">######## ### ########### #########.</param>
            <param name="valueType">### ######## #########.</param>
            <returns>######### ####### # ##### ####### ### ######### ## ######### <paramref name="parameterValue"/> 
            #### ###### <paramref name="valueType"/> # ######### ### ########### <paramref name="displayValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpressions(Terrasoft.Core.DataValueType,System.Object[])">
            <summary>
            ########## ############# ######### ######## ### ########## # ########### ########## ############# #### 
            ######.</summary>
            <param name="valueType">### ###### ######## ##########.</param>
            <param name="parameterValues">###### ######## ##########.</param>
            <returns>############# ######### ######## ### ########## ## ########## <paramref name="parameterValues"/> 
            #### ###### <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateParameterExpressions(Terrasoft.Core.DataValueType,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            ########## ############# ######### ######## ### ########## # ########### ########## ############# #### 
            ######.</summary>
            <param name="valueType">### ###### ######## ##########.</param>
            <param name="parameterValues">############# ######## ##########.</param>
            <returns>############# ######### ######## ### ########## ## ########## <paramref name="parameterValues"/> 
            #### ###### <paramref name="valueType"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCoalesceFunction(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchema,System.String[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> ### ######## ############# 
            #######, ######## ##### # ####### ##### # ########.
            </summary>
            <param name="parentQuery">###### # ##### #######, ### ######## ######### ######### #######.</param>
            <param name="rootSchema">######## #####.</param>
            <param name="columnPaths">###### ##### # ######## ############ ######## #####.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### # ######## ######### <paramref name="columnPaths"/> ######## 
            ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCoalesceFunction(Terrasoft.Core.Entities.EntitySchema,System.String[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> ### ######## ######## ##### # 
            ####### ##### # ########.
            </summary>
            <param name="rootSchema">######## #####.</param>
            <param name="columnPaths">###### ##### # ######## ############ ######## #####.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpression(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchema,System.String,System.Boolean,System.Boolean)">
            <summary>
            ########## ######### ####### ##### ####### ### ######## ####### # ##### #######, ######## #####, #### # 
            ####### ############ ######## #####.
            </summary>
            <param name="parentQuery">###### # ##### #######, ### ######## ######### ######### #######.</param>
            <param name="rootSchema">######## #####.</param>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <param name="useCoalesceFunctionForMultiLookup">#######, ############ ## ### ####### #### ########## 
            ####### <c>COALESCE</c>. ############## ########, ## ######### ##### <c>true</c>.</param>
            <param name="useDisplayValue">#######, ############ ## ### ####### ######## ### ###########. 
            ############## ########, ## ######### ##### <c>false</c>.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpression(Terrasoft.Core.Entities.EntitySchema,System.String,System.Boolean)">
            <summary>
            ########## ######### ####### # ##### ####### ### ######## ######## ##### # #### # ####### ############ 
            ######## #####.
            </summary>
            <param name="rootSchema">######## #####.</param>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <param name="useCoalesceFunctionForMultiLookup">#######, ############ ## ### ####### #### ########## 
            ####### <c>COALESCE</c>. ############## ########, ## ######### ##### <c>true</c>.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.FilterComparisonType,System.Boolean,System.String,System.Object[])">
            <summary>
            ########## ###### # ######### ########### ### ######### ####### # ##### #######.
            </summary>
            <param name="parentQuery">############ ######, ### ######## ######### ######.</param>
            <param name="rootSchema">######## #####.</param>
            <param name="comparisonType">### ######## ######### # #######.</param>
            <param name="useDisplayValue">####### #### ######## #######, ####### ############ # #######: 
            <c>true</c> - ######## ### ###########; <c>false</c> - ######## ########.
            </param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.
            </param>
            <param name="rightExpressionParameterValues">###### ######## ######### ########## # ###### ##### #######.
            </param>
            <returns>######### ####### <seealso cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.FilterComparisonType,System.Boolean,System.String,System.Object[])">
            <summary>
            ########## ###### # ######### ########### ### ######### ####### # ##### #######.
            </summary>
            <param name="rootSchema">######## #####.</param>
            <param name="comparisonType">### ######## ######### # #######.</param>
            <param name="useDisplayValue">####### #### ######## #######, ####### ############ # #######: <c>true</c> - 
            ######## ### ###########; <c>false</c> - ######## ########.
            </param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionParameterValues">###### ######## ######### ########## # ###### ##### #######.
            </param>
            <returns>######### ####### <seealso cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetDayOfWeekNumber(Terrasoft.Core.UserConnection,System.DayOfWeek)">
            <summary>
            ########## ########## ##### ### ###### ### ######### ####### <see cref="T:System.DayOfWeek"/> # ###### ############ 
            ########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="dayOfWeek">######### <see cref="T:System.DayOfWeek"/>, ### ######## ############ ########## 
            #####.</param>
            <returns>########## ##### ### ###### ### ####### <paramref name="dayOfWeek"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ClearDefCache(System.String)">
            <summary>
            ####### ## #### ####### ####### # ######## ######.
            </summary>
            <param name="cacheItemName">### ########## ######## ####.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="cacheItemName"/> 
            ######## ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ClearCache">
            <summary>
            ####### ### ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ####### # ##### #######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpression(System.String,System.Boolean)">
            <summary>
            ########## ######### ####### ##### ####### ## ######### #### # ####### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <param name="useCoalesceFunctionForMultiLookup">#######, ############ ## ### ####### #### ############# 
            ########## ####### <c>COALESCE</c>. ############## ########, ## ######### ##### <c>true</c>.</param>
            <returns>######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpressions(System.String[])">
            <summary>
            ########## ############# ######### ####### ####### # ##### ####### ## ######### ####### ##### # ########.
            </summary>
            <param name="columnPaths">###### ##### # ######## ############ ######## #####.</param>
            <returns>############# ######## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### #######, ############# ## 
            ##### <paramref name="columnPaths"/> ############ ######## #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpressionsWithoutCoalesce(System.String[])">
            <summary>
            ########## ############# ######### ####### ####### # ##### ####### ## ######### ####### ##### # ########. 
            ### ####, #### ####### ##### ### ############# ##########, # ## ######### ## ########### ####### 
            <c>COALESCE</c>.</summary>
            <param name="columnPaths">###### ##### # ######## ############ ######## #####.</param>
            <returns>############# ######## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### #######, ############# ## 
            ##### <paramref name="columnPaths"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSchemaColumnExpressions(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            ########## ############# ######### ####### ####### # ##### ####### ## ######### ###### ##### # ########.
            </summary>
            <param name="columnPaths">############# ##### # ######## ############ ######## #####.</param>
            <param name="useCoalesceFunctionForMultiLookup">#######, ############ ############ ## ### ####### #### 
            ############# ########## ####### <c>COALESCE</c>. ############## ########, ## ######### ##### <c>true</c>.
            </param>
            <returns>############# ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### #######, ############# ## 
            ##### <paramref name="columnPaths"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateDatePartFunctionExpression(Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Returns an instance <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> with nested function
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> returns the specified date range for
            the value of the column located along the specified path relative to the root schema.
            </summary>
            <param name="interval">The date part returned by the function.</param>
            <param name="expression">The expression on the left side of the filter.</param>
            <returns>An instance of an expression from a given function.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateAggregationFunction(Terrasoft.Common.AggregationTypeStrict,System.String)">
            <summary>
            ########## ######### ############ ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> # ######## 
            ##### ### ####### ## ######### #### ############ ######## #####.
            </summary>
            <param name="aggregationType">### ############ #######.</param>
            <param name="columnPath">#### # ####### ##### ############ ######## #####.</param>
            <returns>######### ######### ############ ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ########## ###### ###### ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateIsNullFunction(System.String,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/> ### ####### # ########### # 
            ########## ##########, ####### ########### ## ######## ##### ############ ######## #####.
            </summary>
            <param name="checkColumnPath">#### # #######, ########## ########### ########.</param>
            <param name="replacementColumnPath">#### # #######, ########## ########, ####### ############ ######## # 
            ######, #### ########### ######## ##### <c>null</c>.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ###### ## ########## 
            <paramref name="checkColumnPath"/> ### <paramref name="replacementColumnPath"/> ######## ###### 
            ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateDatePartFunction(Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval,System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ######## 
            ######## #### ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="interval">##### ####, ############ ########.</param>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateDayFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ######## #### 
            [####] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateWeekFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ##### #### 
            [######] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateMonthFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ##### #### 
            [#####] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateYearFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ##### #### 
            [###] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateWeekdayFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ##### #### 
            [#### ######] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateHourFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ##### #### 
            [###] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateHourMinuteFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>, ############ ##### #### 
            [######] ### ######## #######, ############# ## ########## #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCoalesceFunction(System.String[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> ### ######### ####### ##### # 
            ######## ############ ######## #####.
            </summary>
            <param name="columnPaths">###### ##### # ######## ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCaseNotNullQueryFunctionWhenItem(System.String,System.Object)">
            <summary>
            ########## ######### ######### ### sql-########### 
            #### <c>WHEN &lt;#########_1&gt; IS NOT NULL THEN &lt;#########_2&gt;</c>.</summary>
            <param name="whenColumnPath">#### # #######, ########## ######### ########### <c>WHEN</c>.</param>
            <param name="thenParameterValue">#### # #######, ########## ######### ########### <c>THEN</c>.</param>
            <returns>######### ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCaseNotNullFunction(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/> ### ######### ####### 
            ######### #######.
            </summary>
            <param name="whenItems">###### ######### ####### ########### #######.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentDateTimeFunction">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>, ############ ####### 
            #### # #####.
            </summary>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentDateFunction">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/> ############ ####### ####.
            </summary>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentTimeFunction">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>, ############ ####### 
            #####.</summary>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentUserFunction">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>, ############ ######## 
            ############.
            </summary>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentUserContactFunction">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>, ############ 
            ############# ######## ######## ############.
            </summary>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCurrentUserAccountFunction">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>, ############ 
            ############# ########### ######## ############.
            </summary>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateUpperFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/> ### ######### ####### ## 
            ######### #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateTrimFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> ### ######### ####### ## 
            ######### #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ###### ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateTrimFunction(Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> ### ######### ####### #########.
            </summary>
            <param name="expressions">###### #########.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="expressions"/> 
            ######## ######## <c>null</c> ### #### ###### ######### ## ######## ## ###### ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateLengthFunction(System.String)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> ### ######### ####### ## 
            ######### #### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ###### ## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateLengthFunction(Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> ### ######### ####### #########.
            </summary>
            <param name="expressions">###### #########.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="expressions"/> 
            ########## ######## <c>null</c> ### #### ###### ######### ## ######## ## ###### ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateConcatFunction(Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/> ### ######### ####### #########.
            </summary>
            <param name="expressions">###### #########.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="expressions"/> 
            ########## ######## <c>null</c> ### #### ###### ######### ## ######## ## ###### ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateCastFunction(System.String,Terrasoft.Core.DBDataValueType)">
            <summary>
            ########## ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/> ### ######### #######, 
            ############# ## ######### #### ############ ######## #####, # ######### ####### ##### ######.
            </summary>
            <param name="columnPath">#### # ####### ############ ######## #####.</param>
            <param name="castType">####### ### ######.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ###### ### ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateWindowFunction(Terrasoft.Core.Entities.EntitySchemaQueryFunction,System.String,System.String)">
            <summary>
            Create window function instance for specified function, partition by and order by columns.
            </summary>
            <param name="innerFunction">Function to wrap. Using uncompatible function will result 
            in runtime error.</param>
            <param name="partitionByColumn">Partition by column path.</param>
            <param name="orderByColumn">Order by column path.</param>
            <returns>Window function instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,System.String[])">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #### #######, ############# ## ######### ##### 
            ############ ######## #####.</summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionColumnPaths">###### ##### # ########, ########## ######### ###### ##### #######.
            </param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## #### 
            ############ ######## #####, # ########### #########.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpression">######### # ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryFunction)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## #### 
            ############ ######## #####, # ########### ########## #######.</summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionValue">######### ####### ######### # ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.Int32)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######## ######### ##### ##### #######, #### ####### # 
            ########, ####### ############## ######## # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpression">######### # ##### ##### #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="rightValue">########, ####### ############## ######## # ###### ##### #######. ############## 
            ########, ## ######### ##### <c>0</c>.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DateTime,System.Int32)">
            <summary>
            Returns a filter with the specified comparison type for the specified parameters.
            </summary>
            <param name="comparisonType">Comparison type.</param>
            <param name="leftExpression">The expression on the left side of the filter.</param>
            <param name="macrosType">Macros type.</param>
            <param name="dateValue">Type value <see cref="T:System.DateTime"/>, which is processed by 
            a macro on the right side of the filter.</param>
            <param name="daysOffset">Number of days to be added to create filter range boundary.</param>
            <returns>An instance of a filter.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">If unsupported macros type is passed.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DayOfWeek)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######## ######### ##### ##### #######, #### ####### # 
            ######## #### <see cref="T:System.DayOfWeek"/>, ####### ############## ######## # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpression">######### # ##### ##### #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="rightValue">######## #### <see cref="T:System.DayOfWeek"/>, ####### ############## ######## # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### # ######## ######### <paramref name="macrosType"/> ####### 
            ################ ### #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.Int32)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######## #### ####### # ######### ########, ####### ############## ######## # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="rightValue">########, ####### ############## ######## # ###### ##### #######. ############ ### 
            ##### ####### <c>NextNDays</c> # <c>PreviousNDays</c>. ############## ########, ## ######### ##### <c>0</c>.
            </param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DateTime)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ######### ####, #### 
            ####### # ######## #### <see cref="T:System.DateTime"/>, ####### ############## ######## # ###### ##### 
            #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="rightValue">######## #### <see cref="T:System.DateTime"/>, ####### ############## ######## # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.DayOfWeek)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            #### ####### # ######## #### <see cref="T:System.DayOfWeek"/>, ####### ############## ######## # ###### 
            ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="rightValue">######## #### <see cref="T:System.DayOfWeek"/>, ####### ############## ######## # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ######### ####, # 
            ########### ##########.</summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionValue">######### ########## # ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateAggregationEntitySchemaExpression(System.String,Terrasoft.Common.AggregationTypeStrict)">
            <summary>
            ########## ######### ############ ####### ########## #### ### ######### #######, ############# ## 
            ######### ####.
            </summary>
            <param name="leftExprColumnPath">#### # #######, ### ######### ####### ######## ############ #######.
            </param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <returns>######### ######### ######### ############ #######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateSubEntitySchemaExpression(System.String)">
            <summary>
            ########## ######### ########## # ##### ####### ### #######, ############# ## ######### ####.
            </summary>
            <param name="leftExprColumnPath">#### # #######, ### ####### ######### ########.</param>
            <returns>######### ######### ########## ### #######, ############# ## #### 
            <paramref name="leftExprColumnPath"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.Int32)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######### #### ############ ####### # ########### ######## ######### #### <see cref="T:System.Int32"/>, # 
            ######## ########### ############ ####### # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="rightExprParameterValue">######## #########, # ######## ########### ############ ####### # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.Double)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######### #### ############ ####### # ########### ######## ######### #### <see cref="T:System.Double"/>, # 
            ######## ########### ############ ####### # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="rightExprParameterValue">######## #########, # ######## ########### ############ ####### # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.DateTime)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######### #### ############ ####### # ########### ######## ######### #### <see cref="T:System.DateTime"/>, # 
            ######## ########### ############ ####### # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="rightExprParameterValue">######## #########, # ######## ########### ############ ####### # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.String)">
            <summary>
            ########## ###### # ######## ##### ######### ### #######, ############# ## ########## ####, ######### #### 
            ############ ####### # ########### ######## ######### #### <see cref="T:System.String"/>, # ######## 
            ########### ############ ####### # ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="rightExprParameterValue">######## #########, # ######## ########### ############ ####### # 
            ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,System.Object,Terrasoft.Core.Entities.EntitySchemaQuery@)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######### #### ############ ####### # ########### ######## #########, # ######## ########### ############ 
            ####### # ###### ##### #######. ### #### # ######### ######### ############ ######### ### ######### ## 
            ##### ##### ####### #### ######### ### ####### ######### ## ###### ##### #######, #### ##### ######### 
            ####### ##### <c>null</c>.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="rightExprParameterValue">######## #########, # ######## ########### ############ ####### # 
            ###### ##### #######.</param>
            <param name="leftExprSubQuery">########, # ####### ############ ######### ### ######### # ##### ##### 
            ####### (#### ## ## ##### <c>null</c>) #### ######### ### ####### ######### # ###### ##### ####### (#### 
            ######### ##### ##### ####### ##### <c>null</c>).</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,System.Int32)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######### #### ############ #######, ######### #### ####### # ########, # ######## ########### ###### # 
            ###### ##### #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="daysCount">########, # ######## ########### ###### # ###### ##### #######. ############## 
            ########, ## ######### ##### <c>0</c>.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilter(Terrasoft.Core.Entities.FilterComparisonType,System.String,Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQueryMacrosType,Terrasoft.Core.Entities.EntitySchemaQuery@,System.Int32)">
            <summary>
            ########## ###### # ######## ##### ######### ### ######### #######, ############# ## ########## ####, 
            ######### #### ############ #######, ######### #### ####### # ########, # ######## ########### ###### # 
            ###### ##### #######. ### #### # ######### ######### ############ ######### ### ######### ## ##### ##### 
            #######.</summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExprColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="leftExprAggregationType">### ############ #######.</param>
            <param name="macrosType">### #######.</param>
            <param name="leftExprSubQuery">########, # ####### ############ ######### ### ######### # ##### ##### 
            #######.</param>
            <param name="daysCount">########, ####### ############## ######## # ###### ##### #######. ############## 
            ########, ## ######### ##### <c>0</c>.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.FilterComparisonType,System.Boolean,System.String,System.Object[])">
            <summary>
            ########## ################### ###### # ######## ##### ######### ### ######### #######, ############# ## 
            ########## ####, # ########### ###### ######## ########## ## ###### ##### #######. ### #### ### ####### 
            #### ########## ##### ########## ### ## ########, ############# # #######.</summary>
            <param name="comparisonType">### #########.</param>
            <param name="useDisplayValue">####### #### ######## #######-###########, ####### ############ # #######: 
            <c>true</c> - ######## ### ###########; <c>false</c> - ######## ########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionParameterValues">###### ######## ########## ## ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.FilterComparisonType,System.String,System.Object[])">
            <summary>
            ########## ################### ###### # ######## ##### ######### ### ######### #######, ############# ## 
            ########## ####, # ########### ###### ######## ########## ## ###### ##### #######. 
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionParameterValues">###### ######## ########## ## ###### ##### #######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateFilterWithParameters(Terrasoft.Core.Entities.FilterComparisonType,System.String,System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            ########## ################### ###### # ######## ##### ######### ### ######### #######, ############# ## 
            ########## ####, # ###### ######## ########## ## ########### #############. ### #### ### ####### #### 
            ########## ##### ########## ### ## ########, ############# # #######.
            </summary>
            <param name="comparisonType">### #########.</param>
            <param name="leftExpressionColumnPath">#### # #######, ########## ######### ##### ##### #######.</param>
            <param name="rightExpressionParameterValues">############# ######## ########## ## ###### ##### #######.
            </param>
            <param name="useDisplayValue">####### #### ######## #######-###########, ####### ############ # #######: 
            <c>true</c> - ######## ### ###########; <c>false</c> - ######## ########.
            </param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateIsNullFilter(System.String)">
            <summary>
            ### ######## ####### # ##### ####### ########## ###### ######### #### [######## <c>null</c> # #### 
            ######], ############ # ######## ####### ######## ######### #######, ############# ## ########## ####.
            </summary>
            <param name="leftExpressionColumnPath">#### # #######, ### ######### ####### ######## ######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateIsNotNullFilter(System.String)">
            <summary>
            ### ######## ####### # ##### ####### ########## ###### ######### #### [## ######## <c>null</c> # #### 
            ######], ############ # ######## ############ ######## ######### #######, ############# ## ########## ####.
            </summary>
            <param name="leftExpressionColumnPath">#### # #######, ### ####### ######## ######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateExistsFilter(System.String)">
            <summary>
            ### ######## ####### # ##### ####### ########## ###### ######### #### [########## ## ######### #######] # 
            ############# # ######## ############ ######## ######### #######, ############# ## ######### ####.
            </summary>
            <param name="rightExpressionColumnPath">#### # #######, ### ######### ####### ######## ######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.CreateNotExistsFilter(System.String)">
            <summary>
            ### ######## ####### # ##### ####### ########## ###### ######### #### [## ########## ## ######### #######] 
            # ############# # ######## ############ ######## ######### #######, ############# ## ######### ####.
            </summary>
            <param name="rightExpressionColumnPath">#### # #######, ### ######### ####### ######## ######.</param>
            <returns>######### ########## ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.RemoveColumn(System.String)">
            <summary>
            ####### ####### # ######## ###### ## ######### ####### ######## #######.</summary>
            <param name="columnName">### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(System.String,Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQuery@)">
            <summary>
            ####### # ######### ####### # ####### ###### # ##### ####### # #### ##########, ############# ######### 
            ######### ############ #######, ## #### # ####### ##### ############ ######## #####.
            </summary>
            <param name="columnPath">#### # ####### ##### ############ ######## #####.</param>
            <param name="aggregationType">### ############ #######. # ######## ######### ########## ######## 
            ############ ##### ############ ####### <see cref="T:Terrasoft.Common.AggregationTypeStrict"/>.</param>
            <param name="subQuery">###### ## ######### #########, ########## # #######.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(Terrasoft.Core.Entities.EntitySchemaQueryColumn)">
            <summary>
            ######### ########## ####### # ######### ####### ######## ####### # ##### #######.</summary>
            <param name="queryColumn">######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>, ########### # ######### ####### 
            ######## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(System.String)">
            <summary>
            ####### # ######### ####### # ####### ###### # ##### ####### ## ######### #### # ####### ############ 
            ######## #####.</summary>
            <param name="columnPath">#### # ####### ##### ############ ######## #####.</param>
            <returns>######### ######### #######.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(Terrasoft.Core.Entities.EntitySchemaQueryFunction)">
            <summary>
            ####### # ######### ####### # ####### ###### # ##### ####### ## ########## #######.</summary>
            <param name="function">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFunction"/>.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddAllSchemaColumns(System.Boolean)">
            <summary>
            # ######### ####### ######## ####### # ##### ####### ######### ### ####### ######## #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryColumns">
            <summary>
            ########## ######### ######### ### ####### #######, ### ####### ########### ######## ########.
            </summary>
            <returns>######### ######### ####### #######, ### ####### ########### ######## ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryColumns(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ### ######### ####### #### ####### ########## ######### ######### #######, ### ####### ########### ######## 
            ########.
            </summary>
            <param name="columnNames">############# #### ####### #######.</param>
            <returns>######### ######### #######, ### ####### ########### ######## ########.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### # ####### # ###### ## ############# 
            <paramref name="columnNames"/> ## ######### ### ############ ####### #### #### ###### ####### ## 
            ############ ### ########## ############### sql-#######.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSelectQuery(Terrasoft.Core.UserConnection)">
            <summary>
            Returns request to fetch data using specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>Instance <see cref="T:Terrasoft.Core.DB.Select"/> current request to object schema.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">If resulting sample query does not contain any 
            columns. </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSelectQuery(Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Returns request to fetch data using specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="isPrimaryColumnFilterEnabled">Using primary column filter.</param>
            <returns>Instance <see cref="T:Terrasoft.Core.DB.Select"/> current request to object schema.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">If resulting sample query does not contain any 
            columns. </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSelectQuery(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            ########## ###### ## ####### ######, ########### # ###### ######## ########, ######### ######## 
            ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="options">######### ####### # ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Select"/> ### ######## ####### # ##### #######, ########### # ###### 
            ######## <paramref name="options"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ResetSelectQuery">
            <summary>
            ####### ###### ## ####### ### ######## ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection)">
            <summary>
            ########## ###### ## ####### ######## (############) ######## ### ######## ######### ####### ######## 
            ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="summaryColumns">######### #######, ### ####### ######## ###### ## ####### ######## ########.
            </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Select"/> ############ ####### ## #######.</returns>
            <exception cref="T:Terrasoft.Core.Entities.SelectFromVirtualSchemaException">### ####### ########## ####### ## ####### ## ########### 
            #####.</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="summaryColumns"/> 
            ######## ######## <c>null</c> ### #### ######### ####### ## ######## ## ###### ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ###### ## ####### ######## (############) ######## ### #### ####### ######## ########## 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Select"/> ############ ####### ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ########## ###### ## ####### ######## (############) ######## ### ####### ######## ########## 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> # ########## #######, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columnNames">############# #### #######, ### ####### ######## ###### ## ####### ######## 
            ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Select"/> ############ ####### ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummarySelectQuery(Terrasoft.Core.UserConnection,System.String[])">
            <summary>
            ########## ###### ## ####### ######## (############) ######## ### ####### ######## ########## 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> # ########## #######, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columnNames">###### #### #######, ### ####### ######## ###### ## ####### ######## ########.
            </param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.Select"/> ############ ####### ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSchema">
            <summary>
            ########## ######### ##### ####### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntitySchema"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.ResetSchema">
            <summary>
            ####### ##### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntity(Terrasoft.Core.UserConnection,System.Object)">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ## ######### ########## #####, ######### ######## 
            ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="primaryColumnValue">######## ########## #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> # ######### ###### <paramref name="primaryColumnValue"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntityCollection(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            ########## ######### ########, ########## ########### ########## ######## ####### # ##### ####### # ###### 
            ######## ########, ######### ########## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="options">######### ####### # ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntityCollection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetEntityCollection(Terrasoft.Core.UserConnection)">
            <summary>
            Returns a collection of <see cref="T:Terrasoft.Core.Entities.Entity"/>, 
            that represents the result of the given query 
            against the given user connection.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Entities.EntityCollection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection)">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## 
            ######## ### ########## ######### ####### ######## ####### # ############## ######### 
            ################# ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="summaryColumns">######### ####### #######, ### ####### ########## ######## ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## ######## 
            ######### ####### <paramref name="summaryColumns"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## 
            ######## ### #### ####### ######## ####### # ############## ######### ################# ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## ######## 
            #### ####### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## 
            ######## ### ####### # ######### #######, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columnNames">############# #### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## ######## 
            ### ####### # ####### <paramref name="columnNames"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetSummaryEntity(Terrasoft.Core.UserConnection,System.String[])">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## 
            ######## ### ####### # ######### #######, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="columnNames">###### #### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.Entity"/> ### ##########, ############# ######## ## ####### ######## ######## 
            ### ####### # ####### <paramref name="columnNames"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetDataTable(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ######### ########## ######## ####### # ##### ####### # #### ####### ###### # ######, ######### 
            ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### <see cref="T:System.Data.DataTable"/>, ############## ######### ########## ######## 
            ####### # ##### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.LoadDataTableData(Terrasoft.Core.UserConnection,System.Data.DataTable)">
            <summary>
            ######### ######### ########## ######## ####### # ##### ####### # ########## ###### 
            <see cref="T:System.Data.DataTable"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="dataTable">######### <see cref="T:System.Data.DataTable"/>, # ####### ########### ######### 
            ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.LoadDataTableData(Terrasoft.Core.UserConnection,System.Data.DataTable,Terrasoft.Core.Entities.EntitySchemaQueryOptions)">
            <summary>
            ######### ######### ########## ######## ####### # ##### ####### # ########## ###### 
            <see cref="T:System.Data.DataTable"/> # ###### ######## ########, ######### ######## ################ 
            ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="dataTable">######### <see cref="T:System.Data.DataTable"/>, # ####### ########### ######### 
            ########## #######.</param>
            <param name="options">######### ####### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.GetTypedColumnValue``1(Terrasoft.Core.Entities.Entity,System.String)">
            <summary>
            ########## ############## ######## ####### # ######## ###### ## ########### ########## <see cref="T:Terrasoft.Core.Entities.Entity"/>.
            </summary>
            <typeparam name="T">##### ###.</typeparam>
            <param name="entity">######### <see cref="T:Terrasoft.Core.Entities.Entity"/>, ######## ########### #######.</param>
            <param name="columnName">### #######.</param>
            <returns>############## ######## ####### # ###### <paramref name="columnName"/>, ############# 
            <paramref name="entity"/>.</returns>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="entity"/> ######## 
            ######## <c>null</c>. ### #### # ######## ######### <paramref name="columnName"/> ######## ###### ######## 
            ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            ####### # ######### # ####### ###### # ##### ####### ####### #### ######## # ######## ######### 
            ############# ####.
            </summary>
            <param name="parameterValue">######## #########.</param>
            <param name="parameterDataValueType">### ######## #########.</param>
            <returns>######### ######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.AddColumn(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Creates and adds given instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> as a column of current query entity
            schema.
            </summary>
            <param name="subQuery">An instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>, which is added as a column of
            current query.</param>
            <returns>An instance of created column <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQuery.SetLocalizationCultureId(System.Guid)">
            <summary>
            Sets the localization culture Id.
            </summary>
            <param name="cultureId">The culture Id.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection">
            <summary>
            ######### ######## # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryCollection.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryCollection)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection"/>, ########## ###### ########## ######### 
            ######## # ##### #######.
            </summary>
            <param name="source">######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryCollection"/>, #### ####### #########.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryCollection.ParentEntitySchema">
            <summary>
            ##### #######, ####### ########### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryCollection.Clone">
            <summary>
            ########## #### ####### ######### ######## # ##### #######.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### ######### ######## # ##### 
            #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType">
            <summary>
            ### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.SchemaColumn">
            <summary>
            ####### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.Function">
            <summary>
            #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.Parameter">
            <summary>
            ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.SubQuery">
            <summary>
            #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaQueryExpressionType.ArithmeticOperation">
            <summary>
            ############## ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs">
            <summary>
            ############# ###### # ######### ### ####### ######### #### ######### ####### # ##### #######. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionType,Terrasoft.Core.Entities.EntitySchemaQueryExpressionType)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs"/> # ######### 
            ########## # ####### ###### ######### ####### # ##### #######.
            </summary>
            <param name="oldValue">########## ### ######### ####### # ##### #######.</param>
            <param name="value">####### ### ######### ####### # ##### #######.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs.OldValue">
            <summary>
            ########## ### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeChangedEventArgs.Value">
            <summary>
            ####### ### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs">
            <summary>
            ############# ###### # ######### ### ####### ##### ########## #### ######### ####### # ##### #######. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionType,Terrasoft.Core.Entities.EntitySchemaQueryExpressionType)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs"/> # #########
            ########## # ####### ###### ######### ####### # ##### #######.
            </summary>
            <param name="oldValue">########## ### ######### ####### # ##### #######.</param>
            <param name="value">####### ### ######### ####### # ##### #######.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionTypeBeforeChangedEventArgs.Cancel">
            <summary>
            ##########, #### ## ######## ######### #### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1">
            <summary>
            ############# ###### # ######### ### ####### ######### ######## ####### # ##### #######.
            </summary>
            <typeparam name="T">##### #####.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1"/> # ######### 
            ########## # ####### ########## ######## ####### # ##### #######.
            </summary>
            <param name="oldValue">########## ######## ######## ####### # ##### #######.</param>
            <param name="value">####### ######## ######## ####### # ##### #######.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1.OldValue">
            <summary>
            ########## ######## ######## ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryPropertyChangedEventArgs`1.Value">
            <summary>
            ####### ######## ######## ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1">
            <summary>
            ############# ###### # ######### ### ####### ##### ########## ######## ####### # ##### #######.
            </summary>
            <typeparam name="T">##### #####.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1"/> # ######### 
            ########## # ####### ########## ######## ####### # ##### #######.
            </summary>
            <param name="oldValue">########## ######## ######## ####### # ##### #######.</param>
            <param name="value">####### ######## ######## ####### # ##### #######.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryPropertyBeforeChangedEventArgs`1.Cancel">
            <summary>
            ##########, #### ## ######## ######### ######## ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs">
            <summary>
            ############# ###### # ######### ### ####### ######### ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs"/> # ######### ######## 
            ######## ######### # ########## ####### # ##### #######.
            </summary>
            <param name="index">###### ######## # #########.</param>
            <param name="expression">######### ####### # ##### #######.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs.Index">
            <summary>
            ###### ######## # #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionEventArgs.Expression">
            <summary>
            ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs">
            <summary>
            ############# ###### # ######### ### ####### ##### ########## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs"/> c ######### 
            ######## ######## # ######### # ########## ####### # ##### #######.
            </summary>
            <param name="index">###### ######## # #########.</param>
            <param name="expression">######### ####### # ##### #######.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeEventArgs.Cancel">
            <summary>
            ##########, #### ## ######## ######### ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs">
            <summary>
            ############# ###### # ######### ### ####### ######### ######## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs"/> # 
            ######### ######## ######## # #########, ########## # ####### ########## ######## #########.
            </summary>
            <param name="index">###### ######## # #########.</param>
            <param name="expression">####### ######## ######## ######### ######### ####### # ##### #######.</param>
            <param name="oldExpression">########## ######## ######## ######### ######### ####### # ##### #######.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionItemChangedEventArgs.OldExpression">
            <summary>
            ########## ######## ######## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs">
            <summary>
            ############# ###### # ######### ### ####### ##### ########## ######## ######### ######### ####### # ##### 
            #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs.#ctor(System.Int32,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs"/> # 
            ######### ######## ######## # #########, ########## # ####### ########## ######## ######### ######### 
            ####### # ##### #######.
            </summary>
            <param name="index">###### ######## # #########.</param>
            <param name="expression">####### ######## ######## ######### ######### ####### # ##### #######.</param>
            <param name="oldExpression">########## ######## ######## ######### ######### ####### # ##### #######.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollectionBeforeItemChangedEventArgs.Cancel">
            <summary>
            ##########, #### ## ######## ######### ######## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression">
            <summary>
            ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionType)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> # ######## ##### ######### ####### # 
            ##### #######.
            </summary>
            <param name="expressionType">### ######### ####### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchema,System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### #######, ############# ## ########## 
            #### ############ ######## ######## #####.
            </summary>
            <param name="rootSchema">######## #####, ############ ####### ######## #########.</param>
            <param name="schemaColumnPath">###### #### # #######, ### ####### ######## #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### ######### ########## ####### ##### 
            #######, ############# ## ########## #### ############ ######## ######## #####.
            </summary>
            <param name="rootSchema">######## #####, ############ ####### ######## #########.</param>
            <param name="schemaColumn">######### ####### ##### #######, ### ####### ######## #########.</param>
            <param name="schemaColumnPath">###### #### # ####### <paramref name="schemaColumn"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### ######## ####### ####### # ##### 
            #######.
            </summary>
            <param name="function">####### ####### # ##### #######, ### ####### ######## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### ######### ########## # ##### #######.
            </summary>
            <param name="subQuery">######### # ##### #######, ### ######## ######## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Common.ArithmeticOperation,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/> ### ############## ######## # ######### 
            ##########.
            </summary>
            <param name="arithmeticOperation">############## ########.</param>
            <param name="leftArithmeticOperand">##### ####### ############## ########.</param>
            <param name="rightArithmeticOperand">###### ####### ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>, ########## ###### ########### ######### 
            ####### # ##### #######.
            </summary>
            <param name="source">######### ####### # ##### #######, #### ######## #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionType">
            <summary>
            ### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsBlock">
            <summary>
            ##########, ########## ## ######### # ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsNegative">
            <summary>
            ##########, ######## ## ######### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SourceName">
            <summary>
            ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SourceAlias">
            <summary>
            ######### ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.Path">
            <summary>
            ###### #### # ####### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.JoinPath">
            <summary>
            #### # ######### ####### ####### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SchemaColumnName">
            <summary>
            ### ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.RootSchema">
            <summary>
            ######## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SchemaColumn">
            <summary>
            ######### ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.Function">
            <summary>
            ####### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsAggregationFunction">
            <summary>
            #######, ######## ## ######### ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsSubQuery">
            <summary>
            #######, ######## ## ######### ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValue">
            <summary>
            ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedType">
            <summary>
            ############## ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.DisplayValue">
            <exclude/>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SubQuery">
            <summary>
            ######### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.SubQueryOptions">
            <summary>
            ######### ########## # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.QueryColumnAlias">
            <summary>
            ######### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParentQuery">
            <summary>
            ############ ###### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ArithmeticOperation">
            <summary>
            ############## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.LeftArithmeticOperand">
            <summary>
            ##### ####### ############## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.RightArithmeticOperand">
            <summary>
            ###### ####### ############## ########.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanging">
            <summary>
            #######, ########### ##### ########## #### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInExpressionTypeChanging">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanging"/>. 
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanged">
            <summary>
            #######, ########### ##### ######### #### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInExpressionTypeChanged">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ExpressionTypeChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanging">
            <summary>
            #######, ########### ##### ########## ####### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInFunctionChanging">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanged">
            <summary>
            #######, ########### ##### ######### ####### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInFunctionChanged">
            <summary>
            ##########, ########### ## ######### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.FunctionChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanging">
            <summary>
            #######, ########### ##### ########## ######## ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueChanging">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanged">
            <summary>
            #######, ########### ##### ######### ######## ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueChanged">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanging">
            <summary>
            #######, ########### ##### ########## ############### ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueForcedTypeChanging">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanged">
            <summary>
            #######, ########### ##### ######### ############### ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpression.IsInParameterValueForcedTypeChanged">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpression.ParameterValueForcedTypeChanged"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Addition(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ########## ######### ############### ######## ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ##### ####### # ######## ########.</param>
            <param name="rightOperand">######### ####### # ##### ####### - ###### ####### # ######## ########.</param>
            <returns>##### ######### ####### # ##### #######, ############## ##### #########-######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Addition(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            ########## ######### ############### ######## ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ###### ####### # ######## ########.</param>
            <param name="rightOperand">######## #### <see cref="T:System.Double"/> - ##### ####### # ######## ########.
            </param>
            <returns>##### ######### ####### # ##### #######, ############## ##### ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Subtraction(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ########## ######### ############### ######### ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ##### ####### ######## #########.</param>
            <param name="rightOperand">######### ####### # ##### ####### - ###### ####### # ######## #########.</param>
            <returns>##### ######### ####### # ##### #######, ############## ######## ##### ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Subtraction(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            ########## ######### ############### ######### ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ###### ####### # ######## #########.</param>
            <param name="rightOperand">######## #### <see cref="T:System.Double"/> - ##### ####### ######## #########.
            </param>
            <returns>##### ######### ####### # ##### #######, ############## ######## ##### ########## 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Multiply(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ########## ######### ############### ######### ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ##### ####### ######## #########.</param>
            <param name="rightOperand">######### ####### # ##### ####### - ###### ####### ######## #########.</param>
            <returns>##### ######### ####### # ##### #######, ############## ############ ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Multiply(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            ########## ######### ############### ######### ### ######### ######## # ###### ########
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ##### ####### ######## #########.</param>
            <param name="rightOperand">######## #### <see cref="T:System.Double"/> - ###### ####### ######## #########.
            </param>
            <returns>##### ######### ####### # ##### #######, ############## ############ ######### 
            <paramref name="leftOperand"/> # <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Division(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ########## ######### ############### ####### ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ##### ####### ######## #######.</param>
            <param name="rightOperand">######### ####### # ##### ####### - ###### ####### # ######## #######.</param>
            <returns>##### ######### ####### # ##### #######, ############## ####### ######## 
            <paramref name="leftOperand"/> # ######## <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.op_Division(Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Double)">
            <summary>
            ########## ######### ############### ####### ### ######### ######## # ###### ########.
            </summary>
            <param name="leftOperand">######### ####### # ##### ####### - ##### ####### ######## #######.</param>
            <param name="rightOperand">######## #### <see cref="T:System.Double"/> - ###### ####### # ######## #######.
            </param>
            <returns>##### ######### ####### # ##### #######, ############## ####### ######## 
            <paramref name="leftOperand"/> # ######## <paramref name="rightOperand"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.GetJoinPath(System.String)">
            <summary>
            ########## #### # ######### #######, ## ####### ########## ######### #######, ## ######### ####### #### # 
            ####### #########.
            </summary>
            <param name="columnPath">###### #### # ####### #########.</param>
            <returns>#### # ######### ####### ####### #########.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="columnPath"/> 
            ######## ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ######### ####### # ##### ####### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## 
            ########### ############. </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ######## ########## 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## 
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpression"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Creates <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> for current expression with defined access rights.
            </summary>
            <param name="dbSecurityEngine">The instance of the <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/> class that defines
            database access rights to schemas object for current expression.</param>
            <returns>Query column expression.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ######## ######### ####### # ##### #######, ######### ########## ######## ##### 
            ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ######## ######### ####### # ##### #######.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### ####### ######### ####### ##### ################ ###.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpression.GetCaption">
            <summary>
            ########## ######### ### ########### ### ######## ######### ####### # ##### #######.
            </summary>
            <returns>######### ### ########### ### ######## ######### ####### # ##### #######</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### ####### ######### ####### # ##### ####### ##### 
            ################ ###.</exception>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection">
            <summary>
            ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection"/>, ########## ###### ########## 
            ######### #########.
            </summary>
            <param name="source">######### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### ###### ######### #########.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserting">
            <summary>
            #######, ########### ##### ########### ######## # ######### ######### ####### # ##### #######. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionInserting">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserting"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserted">
            <summary>
            #######, ########### ##### ########## ######## # ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionInserted">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionInserted"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanging">
            <summary>
            #######, ########### ##### ########## ######## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionChanging">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanging"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanged">
            <summary>
            #######, ########### ##### ######### ######## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionChanged">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionChanged"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoving">
            <summary>
            #######, ########### ##### ######### ######## ## ######### ######### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionRemoving">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoving"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoved">
            <summary>
            #######, ########### ##### ######## ######## ## ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInQueryExpressionRemoved">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.QueryExpressionRemoved"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionClearing">
            <summary>
            #######, ########### ##### ######### #### ######### ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInCollectionClearing">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionClearing"/>.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionCleared">
            <summary>
            #######, ########### ##### ######## #### ######### ######### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.IsInCollectionCleared">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CollectionCleared"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetMaxQueryColumnAliasLength(System.String)">
            <summary>
            ### ####### ######### ######### ########## ############ ##### ########## ####### #######, ############# ## 
            ######### ####.
            </summary>
            <param name="joinPath">#### # ####### #######.</param>
            <returns>############ ##### ########## ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String)">
            <summary>
            ########## ########## ######### ### ####### ####### # ######## ###########.
            </summary>
            <param name="alias">######### #######, ### ####### ############ ########## #########.</param>
            <returns>########## ######### ####### ####### ### ########## <paramref name="alias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String,System.Int32)">
            <summary>
            ########## ########## ######### ######### ############ ##### ### ####### ####### # ######## ###########.
            </summary>
            <param name="alias">######### #######, ### ####### ############ ########## #########.</param>
            <param name="aliasMaxLength">############ ##### ############# ########### ##########.</param>
            <returns>########## ######### # ############ ###### <paramref name="aliasMaxLength"/> ### ####### # 
            ########### <paramref name="alias"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String,System.String)">
            <summary>
            ########## ########## ######### ### ####### c ######## ###########, ############# ## ######### ####.
            </summary>
            <param name="joinPath">#### # #######, ### ####### ############ ########## #########.</param>
            <param name="alias">######### #######, ### ####### ############ ########## #########.</param>
            <returns>########## ######### ### ####### # ########### <paramref name="alias"/>, ############# ## #### 
            <paramref name="joinPath"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUniqueQueryColumnAlias(System.String,System.String,System.Int32)">
            <summary>
            ########## ########## ######### # ######### ############ ############ ## ##### ### ####### # ######## 
            ###########, ############# ## ######### ####.
            </summary>
            <param name="joinPath">#### # #######, ### ####### ############ ########## #########.</param>
            <param name="alias">######### #######, ### ####### ############ ########## #########.</param>
            <param name="aliasMaxLength">############ ##### ############# ########### ##########.</param>
            <returns>########## ######### # ############ ###### <paramref name="aliasMaxLength"/> ### ####### ####### # 
            ########### <paramref name="alias"/>, ############# ## #### <paramref name="joinPath"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.GetUsingSchemaColumnExpressions">
            <summary>
            ### ####### ######### ######### ######### ######### #########, ####### ##### ############ ### ########## 
            sql-#######.
            </summary>
            <returns>######### #########, ####### ##### ############ ### ########## sql-#######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ### ####### ######### ######### ########## ############# ######### ####### #######, ############## # ###### 
            ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">###### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ ##### ####### # #### 
            ###### ### ######## ######### ####### # ##### #######.</param>
            <returns>############# ######### ####### ####### ### ####### ######### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.ResetQueryColumnAliases">
            <summary>
            ##### ########### ### #### ######### ####### #########. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ####### ######### ######### ####### # 
            ##### #######.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### ######### ######### ####### # 
            ##### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn">
            <summary>
            ####### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.#ctor(System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/> # ######## ######.
            </summary>
            <param name="name">### ####### ####### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryColumn)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>, ########## ###### ########## ####### 
            ####### # ##### #######.
            </summary>
            <param name="source">####### ####### # ##### #######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.Caption">
            <summary>
            ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.ValueExpression">
            <summary>
            ######### ######### ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.ValueQueryAlias">
            <summary>
            ######### ######### ######## # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.DisplayExpression">
            <summary>
            ######### ######## ### ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.DisplayValueQueryAlias">
            <summary>
            ######### ######## ### ########### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.SourceSchemaUIdExpression">
            <summary>
            ######### ### ########### ############## ##### - #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsLookup">
            <summary>
            #######, ######## ## ####### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsVisible">
            <summary>
            #######, ##### ## ###### ####### ############## # ############## ###### ###### #######. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsAlwaysSelect">
            <summary>
            #######, ##### ## ###### ####### ###### ############## # ############## sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsSelecting">
            <summary>
            #######, ############ ## ###### ####### ### ########## ############### sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.UseDisplayValue">
            <summary>
            #######, ############ ## ### ####### ######## ### ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderDirection">
            <summary>
            ####### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderPosition">
            <summary>
            ####### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.IsAggregated">
            <summary>
            #######, ########### ## # ####### ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.SummaryType">
            <summary>
            ### ############ ####### ### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumn.Path">
            <summary>
            #### # #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ####### ####### ####### # ##### #######, ######### ########## ######### 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############ ####### ####### ####### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ####### ####### ####### # ##### #######.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### ####### ####### # ##### #######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.CreateSummaryQueryColumnExpression(Terrasoft.Core.DB.QueryColumnExpression)">
            <summary>
            ####### ######### ############ ####### ### ######### ######### #######.
            </summary>
            <param name="queryColumnExpression">######### ####### #######.</param>
            <returns>######### ############ ####### ### ######### ####### ####### 
            <paramref name="queryColumnExpression"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ### ####### ####### ####### ## ###### ### ############ 
            #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ######### ######## #######, ######### ########## ######## ##### ######. 
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.GetResultDataDisplayValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ######## ### ########### #######, ######### ########## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ######## ### ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByAsc">
            <summary>
            ### ####### ####### ############# ####### ########## ## ###########.
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByAsc(System.Int32)">
            <summary>
            ### ####### ####### ############# ####### ########## ## ########### # ######## #######.
            </summary>
            <param name="orderPosition">####### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/> # ############# ######## ########## ## 
            ###########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByDesc">
            <summary>
            ### ####### ####### ############# ####### ########## ## ########.
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.OrderByDesc(System.Int32)">
            <summary>
            ### ####### ####### ############# ####### ########## ## ######## # ######## #######.
            </summary>
            <param name="orderPosition">####### ##########.</param>
            <returns>####### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumn"/> # ############# ######## ########## ## 
            ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.GetResultSummaryDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ######### ######## #######, ######### ########## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ######### ######## #######.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ### ####### ####### ## ##### ### ######## ############ 
            #######.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.SetForcedQueryColumnValueAlias(System.String)">
            <summary>
            Specifies alias for query column value.
            </summary>
            <param name="alias">Alias for query column with value.</param>
            <returns>Returns true if alias has been changed.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumn.SetForcedQueryDisplayColumnValueAlias(System.String)">
            <summary>
            Specifies alias for query column display value.
            </summary>
            <param name="alias">Alias for query column with display value.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection">
            <summary>
            ######### ####### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection"/>, ########## ###### ########## 
            ######### ####### ####### # ##### #######.
            </summary>
            <param name="source">######### ####### ####### # ##### #######, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.GetUniqueName(System.String)">
            <summary>
            ########## ########## ### ####### ######### ### ####### ## ######### #####.
            </summary>
            <param name="name">### #######, ### ####### ############ ########## ###.</param>
            <returns>########## # ######### ####### ######### ### ### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.RemoveByName(System.String)">
            <summary>
            ####### ## ######### ####### # ######## ######.
            </summary>
            <param name="name">### ######### #######.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="name"/> ######## ###### 
            ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### ### ####### # ###### 
            <paramref name="name"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.GetSelectingExpressions">
            <summary>
            ### ####### ######### ####### ########## ######### ######### #######, ####### ##### ############## ### 
            ########## ############### sql-#######.
            </summary>
            <returns>######### ######### #######, ####### ##### ############ ### ########## 
            ############### sql-#######. </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.GetSelectingValueExpressions">
            <summary>
            ## ####### ######### ########## ######### #######, ######## ######## ####### ########## # ####### # ##### 
            #######.
            </summary>
            <returns>######### #######, ######## ######## ####### ########## # ####### # ##### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.FindSchemaColumnByName(System.String)">
            <summary>
            ############ ##### # ######### ####### ##### # ######## ######. #### ####### ##### ## #######, ############ 
            <c>null</c>.
            </summary>
            <param name="name">### ####### ####### #####.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaColumn"/> # ###### 
            <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.HasAggregationSelectingColumn">
            <summary>
            ##########, #### ## # ######### #######, ########### # ########## #######, # ####### ######### ############
            #######.
            </summary>
            <returns><c>true</c>, #### # ####### ######### #### #### ## #### #######, ########### # ########## #######,
            # ####### ######### ############ ######## ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.ExistsByPath(System.String)">
            <summary>
            ##########, #### ## # ####### ######### ####### # ######## #####.
            </summary>
            <param name="path">#### # #######.</param>
            <returns><c>true</c>, #### # ####### ######### ####### #### ####### # ##### <paramref name="path"/>;
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryColumnCollection.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ####### ######### ####### ####### #
            ##### #######.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### ######### ####### ####### #
            ##### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryExpressionUtilities">
            <summary>
            ############# ######### ###### ### ###### # ########### ######## # ###### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionUtilities.AddUsingSchemaColumnExpressions(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection)">
            <summary>
            ######### ### ######### ####### ####### ## ########### ######### # ######### ######### #########.
            </summary>
            <param name="queryExpression">#########.</param>
            <param name="resultExpressions">######### ############## ######### ####### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryExpressionUtilities.AddUsingSchemaColumnExpressions(Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection,Terrasoft.Core.Entities.EntitySchemaQueryExpressionCollection)">
            <summary>
            ######### ### ######### ####### ####### ## ########## ######### ######### # ######### ######### #########.
            </summary>
            <param name="queryExpressions">######### #########.</param>
            <param name="resultExpressions">######### ############## ######### ####### #######.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.FilterComparisonType">
            <summary>
            ### ######## ######### # #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Between">
            <summary>
            ######## ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.IsNull">
            <summary>
            ######## <c>null</c> # #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.IsNotNull">
            <summary>
            ## ######## <c>null</c> # #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Equal">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotEqual">
            <summary>
            ## #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Less">
            <summary>
            ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.LessOrEqual">
            <summary>
            ###### ### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Greater">
            <summary>
            ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.GreaterOrEqual">
            <summary>
            ###### ### #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.StartWith">
            <summary>
            ########## ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotStartWith">
            <summary>
            ## ########## ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Contain">
            <summary>
            ######## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotContain">
            <summary>
            ## ######## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.EndWith">
            <summary>
            ############# ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotEndWith">
            <summary>
            ## ############# ##########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.Exists">
            <summary>
            ########## ## ######### #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterComparisonType.NotExists">
            <summary>
            ## ########## ## ######### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.FilterAggregationType">
            <summary>
            ### ############ ####### # #######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.None">
            <summary>
            ### ############ ####### ## #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Min">
            <summary>
            ########### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Max">
            <summary>
            ############ ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Sum">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Avg">
            <summary>
            ####### ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.FilterAggregationType.Count">
            <summary>
            ##########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem">
            <summary>
            ######### ######## ####### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.Name">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.IsEnabled">
            <summary>
            ##########, ############ ## ####### # ########## ############### sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            ######### ########## ######### ########### ####### ######## #######, ####### ########## ## ######### ######.
            </summary>
            <param name="expressions">######### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem.GetFilterInstances">
            <summary>
            ########## ############ ########### #######.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter">
            <summary>
            ############ ###### ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.#ctor(Terrasoft.Core.Entities.FilterComparisonType)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/> # ######## ##### ######## #########.
            </summary>
            <param name="comparisonType">### ######## ######### # #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryFilter)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>, ########## ###### ########### #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>, #### ######## #########.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.LeftExpression">
            <summary>
            ######### ##### ##### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.RightExpressions">
            <summary>
            ######### ###### ##### ####### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.ComparisonType">
            <summary>
            ### ######## ######### # #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.AggregationType">
            <summary>
            ### ############ ####### # #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.IsEnabled">
            <summary>
            Determines whether to use the filter in the resulting sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.TrimDateTimeParameterToDate">
            <summary>
            ##########, ######### ## ############## ######### ####### #### ####/##### # #### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.OptimizeFilterMode">
            <summary>
            Describes optimize filter mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ########## ######### <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.CreateQueryCondition(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Creates query condition for the filter with the defined access rights.
            </summary>
            <param name="dbSecurityEngine">The instance of the <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/> class that defines
            database access rights to schemas object for current expression.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.SetEnabled(System.Boolean)">
            <summary>
            ############# ######## <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.IsEnabled"/> ########## ########.
            </summary>
            <param name="isEnabled">########, ############### ######## <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilter.IsEnabled"/>.</param>
            <returns>####### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.Terrasoft#Core#Entities#IEntitySchemaQueryFilterItem#AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            ######### ########## ######### ########### ####### #######, ####### ########## ## ######### ######. 
            </summary>
            <param name="expressions">######### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilter.Terrasoft#Core#Entities#IEntitySchemaQueryFilterItem#GetFilterInstances">
            <summary>
            ########## ############ ########### #######. 
            </summary>
            <returns>############# ########### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection">
            <summary>
            ######### ######## ####### # ##### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### ####### ######### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Common.LogicalOperationStrict)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>, ####### # ####### ############ # 
            ######### ########## #########, ### ######### ####### # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### ####### ######### ########.</param>
            <param name="logicalOperation">### ########## ########, ####### ############ ####### # ####### #########.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Common.LogicalOperationStrict,Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem[])">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/> # ######### ######## ########### #
            ######### ######### # ##### ########## ########, ####### ############ ####### #########.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### ####### ######### ########.</param>
            <param name="logicalOperation">### ########## ########, ####### ############ ####### # #########.</param>
            <param name="items">###### #########, ####### ########### # ####### ######### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem[])">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/> # ######### ######## #########, 
            ####### ########### # ####### #########, ### ######### ####### # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### ####### ######### ########.</param>
            <param name="items">###### #########, ####### ########### # ####### ######### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>, ########## ###### ########## 
            ########## ########.
            </summary>
            <param name="source">######### ######### ######## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>, #### 
            ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.Name">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsEnabled">
            <summary>
            Determines whether to use the filter in the resulting sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsNot">
            <summary>
            ##########, ############ ## ######## NOT ##### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.LogicalOperation">
            <summary>
            ### ########## ########, ####### ############ ####### # #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### ######### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ######### ########, ######### ########## ######### 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############ ######### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            ######### ############## ######### ########, ######### ########## ######### 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ########### 
            ############## ######### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.SetEnabled(System.Boolean)">
            <summary>
            ############# ######## <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsEnabled"/> ########## ########.
            </summary>
            <param name="isEnabled">########, ############### ######## <see cref="P:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.IsEnabled"/>.</param>
            <returns>####### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.FindByName(System.String)">
            <summary>
            ############ ##### ######## # ######## ######.
            </summary>
            <param name="name">### ########.</param>
            <returns>####### # ###### <paramref name="name"/> ### <c>null</c>, #### ##### ####### ## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.GetByName(System.String)">
            <summary>
            ########## ####### # ######## ######. #### ##### ####### ## ######, ############ ##########.
            </summary>
            <param name="name">### ########.</param>
            <returns>####### # ###### <paramref name="name"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="name"/> ######## 
            ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ####### # ###### <paramref name="name"/> ## ###### # #########.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### ######### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            ######### ########## ######### ########### ####### ######### ########, ####### ########## ## ######### 
            ######.
            </summary>
            <param name="expressions">######### ######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection.Terrasoft#Core#Entities#IEntitySchemaQueryFilterItem#GetFilterInstances">
            <summary>
            ########## ############ ########### ######## # #########.
            </summary>
            <returns>############ ########### ######## # #########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaQueryFunction">
            <summary>
            ####### ##### ####### ######### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaQueryFunction.ParentQuery">
            <summary>
            ###### # ##### #######, ######## ########### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">###### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ ##### 
            #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### ####### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ########## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.CheckIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            #########, ##### ## ############ ######## ######### ######### ### ######. # ######### ###### ############ 
            ##########.
            </summary>
            <param name="dataValueType">### ######.</param>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### ############ ######## ######### ##### ### ######, ######## 
            ## <paramref name="dataValueType"/>.</exception>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction">
            <summary>
            ############ ####### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> ######### #### ############ 
            ####### ### ######### ####### # ##### #######.
            </summary>
            <param name="aggregationType">### ############ #######.</param>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Common.AggregationTypeStrict,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/> ### ######## #### ############
            #######, ######### # ####### # ##### #######.</summary>
            <param name="aggregationType">### ############ #######.</param>
            <param name="expression">######### #######.</param>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>, ########## ###### ########### 
            ########## ############ ####### #########.
            </summary>
            <param name="source">######### ############ ####### #########, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.AggregationType">
            <summary>
            ### ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.AggregationEvalType">
            <summary>
            ####### ########## ############ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.Expression">
            <summary>
            ######### ######### ############ #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ############ #######, ######### ######## ######### 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ############ #######, ############## # ###### ######## #### 
            #######.</summary>
            <param name="dbSecurityEngine">###### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ ##### 
            #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ############ ####### #########, ############## # 
            ###### #### ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## ############ #######.
            </summary>
            <returns>######### ######### ########## ############ #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ############ ######## ##########, ######### ######## ######## ##### 
            ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ############ ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ############ ####### ########## ######### #### ###### 
            <paramref name="dataValueType"/>; ##### - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.UnsupportedTypeException">#### ######### ############ ####### ##### ################ ### 
            ######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### ############ #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.All">
            <summary>
            ############# ### ####### ############ ####### ####### ########## [## #### #########].
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction.Distinct">
            <summary>
            ############# ### ####### ############ ####### ####### ########## [# ########## #########].
            </summary>
            <returns>####### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaAggregationQueryFunction"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction">
            <summary>
            ####### ### ###### ######## <c>null</c> ########## ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/> ### ######## ####### # ##### 
            #######, ############ ######### # ########### #########.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="checkExpression">#########, ####### ########### ## ######### <c>null</c>.</param>
            <param name="replacementExpression">#########, ####### ############ ########, #### 
            <paramref name="checkExpression"/> ##### <c>null</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>, ########## ###### ########## 
            ####### #########.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.CheckExpression">
            <summary>
            ######### ######### #######, ####### ########### ## ######### ######## <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.ReplacementExpression">
            <summary>
            ######### ######### #######, ####### ############ ########, #### ########### ######### ##### <c>null</c>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ####### #########, ######### ########## ######### 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############ ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">###### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ ##### 
            #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### ####### #######.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ########### ### ########## ######### ####### 
            ##### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ########## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns>###### ########## <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaIsNullQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction">
            <summary>
            #######, ############ ###### ## ###### <c>null</c> ######### ## ###### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>, ########## ###### ########## 
            #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.Expressions">
            <summary>
            ######### ######### ########## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.HasExpressions">
            <summary>
            #######, ############ ####### #### ## ###### ######## # ######### ######### ########## #######. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ####### #########, ######### ########## ######### 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############ ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### # ######## ######### <paramref name="dbSecurityEngine"/> 
            ######## ######## <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ########## ####### ## ##### ## 
            ###### ######## ### ##### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ########## ####### ## ##### ## 
            ###### ######## ### ##### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns>###### ########## <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCoalesceQueryFunction.SpecifyQueryAlias(System.String)">
            <summary>
            ########## ### ####### ####### ######### ######## ######### # ############## sql-#######.
            </summary>
            <param name="queryAlias">#########, ############ ### ####### #######.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem">
            <summary>
            #####, ########### ######### ####### sql-######### CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.#ctor(Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/> ### ######## #########
            ########### WHEN # THEN.</summary>
            <param name="whenExpression">######### ########### WHEN #######.</param>
            <param name="thenExpression">######### ########### THEN #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.#ctor(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>, ########## ###### 
            ########### ##########.
            </summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>, #### ######## 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.WhenExpression">
            <summary>
            ######### ########### WHEN.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.ThenExpression">
            <summary>
            ######### ########### THEN.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ########## ######### <see cref="T:Terrasoft.Common.DataWriter"/>. 
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItem"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems">
            <summary>
            ######### ######### ####### sql-######### CASE.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems.#ctor(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems"/>, ########## ###### 
            ########## ######### #######.
            </summary>
            <param name="source">######### #######, #### ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunctionWhenItems"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ####### ######### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction">
            <summary>
            #######, ############ #### ## ######### ######### ######## # ########### ## ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>, ########## ###### ########## 
            #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.WhenItems">
            <summary>
            ######### ####### ####### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.HasWhenItems">
            <summary>
            #######, ##### ## ####### #### ## #### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.ElseExpression">
            <summary>
            ######### ########### ELSE. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ####### #########, ######### ########## ######### 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### 
            <paramref name="dbSecurityEngine"/> ######## ###### ######## ### <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ####### ## ##### ## ###### 
            ######## ### ##### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ####### ## ##### ## ###### 
            ######## ### ##### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns>###### ########## <c>true</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCaseNotNullQueryFunction.SpecifyQueryAlias(System.String)">
            <summary>
            ########## ### ####### ####### ######### ######## ######### # ############## sql-#######.
            </summary>
            <param name="queryAlias">#########, ############ ### ####### #######.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction">
            <summary>
            #######, ############ ######### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaSystemValueQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction">
            <summary>
            ####### ######### ####### #### # #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/> ### ######### ####### # 
            ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>, ########## ###### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateTimeQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ##########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateQueryFunction">
            <summary>
            ####### ##### ####### ######### ### ####### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateQueryFunction.Offset">
            <summary>
            ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction">
            <summary>
            ####### ######### ####### ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="expression">Query expression.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>, ########## ###### ########## 
            #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentDateQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction">
            <summary>
            Represents a function that converts the date expression into the same date in the current year.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction"/> 
            which is part of provided <paramref name="parentQuery"/>.
            </summary>
            <param name="parentQuery">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Initializes a new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction"/> 
            for the given date expression.
            </summary>
            <param name="parentQuery">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</param>
            <param name="expression">Query expression.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction"/> which is
            clone of other instance.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction"/> to be cloned.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.QueryAlias">
            <summary>
            Alias function in sql query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.Expression">
            <summary>
            Expression of the function argument.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.AddUsingJoinedExpressions(System.Collections.ObjectModel.Collection{Terrasoft.Core.Entities.EntitySchemaQueryExpression})">
            <summary>
            Add joined expressions.
            </summary>
            <param name="expressions">Expression collection. </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.GetCaption">
            <summary>
            Returns the header of the expression function.
            </summary>
            <returns>The function header line.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            Returns the query column expression for the current function, generated with the specified access rights.
            </summary>
            <param name="dbSecurityEngine">Instance of <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, which defines
            the access rights.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> for the current function, formed with regard to 
            access rights of <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">If the expression of the function argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Returns the data type of the result returned by the function, using the passed data type manager.
            </summary>
            <param name="dataValueTypeManager">Data type manager.</param>
            <returns>The data type of the result returned by the function. </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            Specifies whether the result returned by the function is the specified data type.
            </summary>
            <param name="dataValueType">Data type.</param>
            <returns><c>true</c>, if the function returns a result of the data type <paramref name="dataValueType"/>;
            else - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.GetArguments">
            <summary>
            Returns a collection of function argument expressions.
            </summary>
            <returns>A collection of function argument expressions. </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDateToCurrentYearQueryFunction.Clone">
            <summary>
            Creates a clone of the current instance <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.
            </summary>
            <returns>Instance <see cref="T:System.Object"/>, is a clone of the current instance of the function.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction">
            <summary>
            ####### ######### #### ###### ####### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="expression">Query expression.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/>, ########## ###### 
            ########## ####### #########.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/>, #### 
            ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentWeekQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction">
            <summary>
            ####### ######### #### ###### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="expression">Query expression.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/>, ########## ###### 
            ########## ####### #########.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/>, #### 
            ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentMonthQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction">
            <summary>
            ####### ######### #### ###### ######## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/> with specified
            offset relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/> with specified
            offset relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="expression">Query expression.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/>, ########## ###### 
            ########## ####### #########.
            </summary>
            <param name="source">######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/>, #### ######## 
            #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentQuarterQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction">
            <summary>
            ####### ######### #### ###### ######## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/> with specified
            offset relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/> with specified
            offset relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="expression">Query expression.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/>, ########## ###### 
            ########## ####### #########.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/>, #### 
            ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHalfYearQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction">
            <summary>
            ####### ######### #### ###### ######## ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/> with specified offset
            relatively to base date for a given schema query object.
            </summary>
            <param name="parentQuery">Request to schema object the function belongs to.</param>
            <param name="expression">Query expression.</param>
            <param name="offset">Offset in days relatively to reference date. Default value is zero.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/>, ########## ###### 
            ########## ####### #########. 
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/>, #### 
            ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentYearQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateTimeQueryFunction">
            <summary>
            ####### ##### ####### ######### ####### #### # #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaBaseCurrentDateTimeQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction">
            <summary>
            Represents function for current hour start expression.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/> which is part of 
            provided <paramref name="parentQuery"/> and has specified <paramref name="offset"/> relatively to base date.
            </summary>
            <param name="parentQuery">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</param>
            <param name="offset">Offset in hours relatively to base date.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,System.Int32)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/> which is part of 
            provided <paramref name="parentQuery"/>, has specified function argument <paramref name="expression"/> 
            and <paramref name="offset"/> relatively to base date.
            </summary>
            <param name="parentQuery">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</param>
            <param name="expression">Function argument expression.</param>
            <param name="offset">Offset in hours relatively to base date.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/> which is clone of 
            other instance.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/> to be cloned.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.GetCaption">
            <summary>
            Gets function caption.
            </summary>
            <returns>Function caption string.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction.Clone">
            <summary>
            Clones current instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaStartOfCurrentHourQueryFunction"/>.
            </summary>
            <returns>Clone of current instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction">
            <summary>
            ####### ######### ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentTimeQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction">
            <summary>
            ####### ######### ######## ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/> ### ######### ####### 
            # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction">
            <summary>
            ####### ######### ######## ######## ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/> ### ######### ####### 
            # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>, ########## ###### 
            ########### ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>, #### 
            ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserContactQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction">
            <summary>
            ####### ######### ########### ######## ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/> ### ######### ####### # 
            ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>, ########## ###### 
            ########### ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>, #### 
            ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.SystemValueName">
            <summary>
            ### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCurrentUserAccountQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval">
            <summary>
            ##### ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Day">
            <summary>
            ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Week">
            <summary>
            ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Month">
            <summary>
            #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Year">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Weekday">
            <summary>
            #### ######.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.Hour">
            <summary>
            ###.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval.HourMinute">
            <summary>
            ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction">
            <summary>
            Represents query function for part of date.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> which is part of provided
            <paramref name="parentQuery"/>.
            </summary>
            <param name="parentQuery">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/></param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunctionInterval,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> which is part of provided
            <paramref name="parentQuery"/> with specified part of date <paramref name="interval"/> for query to 
            entity schema and query expression <paramref name="expression"/>.
            </summary>
            <param name="parentQuery">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</param>
            <param name="interval">Part of date.</param>
            <param name="expression">Query expression.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> which is clone of other 
            instance.
            </summary>
            <param name="source">Instance of <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/> to be cloned.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.Interval">
            <summary>
            ##### ####, ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ######## ######### <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">###### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## 
            # ###### #### ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ########## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaDatePartQueryFunction.SpecifyQueryAlias(System.String)">
            <summary>
            Specifies alias of function column in result of sql query.
            </summary>
            <param name="queryAlias">Alias for current function.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction">
            <summary>
            ####### ### ############## ######## ######### ######### # ######## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/> ### ######### ####### # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/> ### ######## ######### # ####### # 
            ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="expression">######### ####### # ##### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>, #### ####### #########.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ######## ######### <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # 
            ###### #### ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaUpperQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction">
            <summary>
            ####### ########## ######### ######### # ######### #### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.DBDataValueType)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/> ### ######### ####### # ##### ####### 
            # ######### ####### ##### ######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="castType">####### ### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression,Terrasoft.Core.DBDataValueType)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/> # ######### ########## # ####### ##### 
            ######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="expression">######### #######.</param>
            <param name="castType">####### ### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaCastQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>, #### ####### #########.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.CastType">
            <summary>
            ####### ### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ########## ######### <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######,############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaCastQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction">
            <summary>
            ####### ### ######## ######### # ######## ######## ## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> ### ######### ####### # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/> ### ######## ######### # ####### # 
            ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="expression">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>, #### ####### #########.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ########## ######### <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ########## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaTrimQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction">
            <summary>
            ####### ### ######## ##### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/> ### ######## ######### # ####### # 
            ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="expression">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.Expression">
            <summary>
            ######### ######### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ####### # ####### ########### ########## <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ####### ######## <c>null</c>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, #### ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaLengthQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction">
            <summary>
            ####### ### ############ ######, ########## ########### ########### ######### ######## ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/> ### ######### ####### # ##### 
            #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Entities.EntitySchemaQueryExpression[])">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/> ### ######## ####### ######### # 
            ####### # ##### #######.
            </summary>
            <param name="parentQuery">###### # ##### #######, ######## ########### #######.</param>
            <param name="expressions">###### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.#ctor(Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>, ########## ###### ########### 
            ########## #######.
            </summary>
            <param name="source">######### ####### <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>, #### ####### 
            #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.QueryAlias">
            <summary>
            ######### ####### # sql-#######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.Expressions">
            <summary>
            ######### ######### ########## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.HasExpressions">
            <summary>
            ##########, #### ## # ######### ########## ####### #### ## #### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ #######, ######### ########## ######### <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ########### 
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <summary>
            ########## ######### ####### ####### ### ####### #######, ############## # ###### ######## #### #######.
            </summary>
            <param name="dbSecurityEngine">######### <see cref="T:Terrasoft.Core.DB.DBSecurityEngine"/>, ############ 
            ##### #######.</param>
            <returns>######### <see cref="T:Terrasoft.Core.DB.QueryColumnExpression"/> ### ####### #######, ############## # ###### #### 
            ####### <paramref name="dbSecurityEngine"/>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### # ######## ######### <paramref name="dbSecurityEngine"/> 
            ######## ######## <c>null</c>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ######### ########## ####### ## ######## ## 
            ###### ######## ### ##### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetArguments">
            <summary>
            ########## ######### ######### ########## #######.
            </summary>
            <returns>######### ######### ########## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            ########## ### ###### ############# ######## ##########, ######### ######## ######## ##### ######.
            </summary>
            <param name="dataValueTypeManager">######## ##### ######.</param>
            <returns>### ###### ############# ######## ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <summary>
            ##########, ##### ## ############ ######## ######### ######### ### ######.
            </summary>
            <param name="dataValueType">### ######.</param>
            <returns><c>true</c>, ####### ########## ######### #### ###### <paramref name="dataValueType"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.GetCaption">
            <summary>
            ########## ######### ####### #########.
            </summary>
            <returns>###### ######### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction.Clone">
            <summary>
            ####### #### ######## ########## <see cref="T:Terrasoft.Core.Entities.EntitySchemaConcatQueryFunction"/>.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.QueryAlias">
            <summary>
            Function alias in query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.InnerFunction">
            <summary>
            Function to apply over window.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.PartitionByExpression">
            <summary>
            Partition by expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.OrderByExpression">
            <summary>
            Order by expression.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)">
            <inheritdoc cref="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.CreateQueryColumnExpression(Terrasoft.Core.DB.DBSecurityEngine)"/>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)">
            <inheritdoc cref="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetResultDataValueType(Terrasoft.Core.DataValueTypeManager)"/>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)">
            <inheritdoc cref="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetIsSupportedDataValueType(Terrasoft.Core.DataValueType)"/>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntitySchemaWindowQueryFunction.GetCaption">
            <inheritdoc cref="M:Terrasoft.Core.Entities.EntitySchemaQueryFunction.GetCaption"/>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityDcmRequiredElementValidationMessage.Text">
            <summary>
            Message text.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityDcmRequiredElementValidationMessage.Elements">
            <summary>
            Dcm element caption.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityValidationMessage">
            <summary>
            ######### # ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityValidationMessage.MassageType">
            <summary>
            ### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityValidationMessage.Text">
            <summary>
            ##### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.EntityValidationMessage.Column">
            <summary>
            ####### ##### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.EntityValidationMessageCollection">
            <summary>
            ######### ######### # ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityValidationMessageCollection.ToString">
            <summary>
            Returns concatenated validation messages text.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.EntityValidationMessageCollection.HasErrors">
            <summary>
            ########## ####### # ######### ######### ## #######.
            </summary>
            <returns>
            <c>true</c>, #### # ######### ######### #### ######### ## #######; ##### - <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.BaseEntityEventListener">
            <summary>
            Base class of entity event listener.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnSaving(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Hadles entity Saving event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnSaved(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Hadles entity Saved event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnUpdating(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Hadles entity Updating event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnUpdated(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Hadles entity Updated event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnInserting(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Hadles entity Inserting event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnInserted(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Hadles entity Inserted event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnDeleting(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Hadles entity Deleting event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.BaseEntityEventListener.OnDeleted(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Hadles entity Deleted event.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.NullableEntityEventListener">
            <summary>
            Nullable class of entity event listener.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Events.NullableEntityEventListener.Instance">
            <summary>
            Gets the nullable instance.
            </summary>
            <value>
            The nullable instance.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.EntityEventDispatcher">
            <summary>
            Entity event dispatcher.
            Translates entity event to all entity listeners.
            </summary>
            <seealso cref="T:Terrasoft.Core.Entities.Events.BaseEntityEventListener" />
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnSaved(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Translates Saved event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnSaving(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Translates Saving event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnUpdated(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Translates Updated event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnUpdating(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Translates Updating event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnInserting(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Translates Inserting event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnInserted(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Translates Inserted event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnDeleting(System.Object,Terrasoft.Core.Entities.EntityBeforeEventArgs)">
            <summary>
            Translates Deleting event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityBeforeEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcher.OnDeleted(System.Object,Terrasoft.Core.Entities.EntityAfterEventArgs)">
            <summary>
            Translates Deleted event to entity listeners.
            </summary>
            <param name="sender">Sender entity.</param>
            <param name="e">The <see cref="T:Terrasoft.Core.Entities.EntityAfterEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.EntityEventDispatcherFactory">
            <summary>
            Manages the EntityEventDispatcher instances creation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventDispatcherFactory.GetDispatcherInstance(Terrasoft.Core.Entities.EntitySchema)">
            <summary>
            Gets the dispatcher instance.
            </summary>
            <param name="schema">Entity schema.</param>
            <returns>Dispatcher instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.EntityEventListenerAttribute">
            <summary>
            Attribute to define entity event listener's schema name.
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="P:Terrasoft.Core.Entities.Events.EntityEventListenerAttribute.SchemaName">
            <summary>
            Gets the name of the entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Events.EntityEventListenerAttribute.IsGlobal">
            <summary>
            Gets or sets a value indicating whether this instance is global.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.EntityEventListenersLoader">
            <summary>
            Entity event listeners loader.
            </summary>
            <seealso cref="T:Terrasoft.Core.Entities.Events.Interfaces.IEntityEventListenersLoader" />
        </member>
        <member name="P:Terrasoft.Core.Entities.Events.EntityEventListenersLoader.Logger">
            <summary>
            Instance of logger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Events.EntityEventListenersLoader.Instance">
            <summary>
            Gets the instance of event loader.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventListenersLoader.IncludeListeners(System.Reflection.Assembly)">
            <summary>
            Initializes listeners from assembly.
            </summary>
            <param name="assembly">The assembly.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">assembly</exception>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.EntityEventListenersLoader.GetListeners(System.String)">
            <summary>
            Gets the entity schema listeners.
            </summary>
            <param name="schemaName">Name of entity schema.</param>
            <returns>
            Event listeners collection.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.EmptyEntityEventListenersLoader">
            <summary>
            EntityEventListenersLoader stub.
            </summary>
            <seealso cref="T:Terrasoft.Core.Entities.Events.Interfaces.IEntityEventListenersLoader" />
        </member>
        <member name="T:Terrasoft.Core.Entities.Events.Interfaces.IEntityEventListenersLoader">
            <summary>
            Entity event listeners loader.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.Interfaces.IEntityEventListenersLoader.GetListeners(System.String)">
            <summary>
            Gets the entity schema listeners.
            </summary>
            <param name="schemaName">Name of entity schema.</param>
            <returns>Event listeners collection.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Events.Interfaces.IEntityEventListenersLoader.IncludeListeners(System.Reflection.Assembly)">
            <summary>
            Initializes listeners from assembly.
            </summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryAnalyzeExistsFilterRule">
            <summary>
            Provides methods for analyze filter by rule: great two items of <see cref="F:Terrasoft.Core.Entities.FilterComparisonType.Exists"/>
            in one group with logical operation <see cref="F:Terrasoft.Common.LogicalOperation.And"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryAnalyzeExistsFilterRule.GetOptimizeFilterMode">
            <summary>
            <see cref="M:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryAnalyzeFilterRule.GetOptimizeFilterMode"/>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryAnalyzeExistsFilterRule.GetSuitableFilters(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem})">
            <summary>
            <see cref="M:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryAnalyzeFilterRule.GetSuitableFilters(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem})"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryAnalyzer">
            <summary>
            Provides methods for analyze <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> to optimization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryAnalyzer.Analyze(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Analyzes <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery" /> for optimization.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="entitySchemaQuery"><see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery" /> to optimization.</param>
            <returns>
            If <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery" /> optimized return <c>true</c> otherwise <c>false</c>
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryExpressionSeparateOption">
            <summary>
            Provides properties for separate mode optimization.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryExpressionSeparateOption.SeparateSelect">
            <summary>
            Gets or sets the select that is separated from query filter.
            </summary>
            <value>
            The separate select.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryExpressionSeparateOption.RootSchemaColumn">
            <summary>
            Gets or sets the root column of filter subquery schema.
            </summary>
            <value>
            The root schema column.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryExpressionSeparateOption.ReferenceSchemaColumn">
            <summary>
            Gets or sets the reference column of filter subquery referenced schema.
            </summary>
            <value>
            The reference schema column.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryExpressionSeparateOption.ReferenceSelect">
            <summary>
            Gets or sets the reference select that used to join the main select to separate select.
            </summary>
            <value>
            The reference select.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryOptimizer">
            <summary>
            Handles entity schema query optimization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.EntitySchemaQueryOptimizer.Optimize(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQuery)">
            <summary>
            Optimizes the specified entity schema query.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="entitySchemaQuery">The entity schema query.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode">
            <summary>
            Describes optimize filter mode.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode.None">
            <summary>
            Optimize filter doesn't use.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode.SeparateQuery">
            <summary>
            Filter into a separate query.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem">
            <summary>
            Provides properties of filter for flat structure.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem.Layer">
            <summary>
            Filter layer in <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem.Group">
            Group filters in <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilterCollection"/>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem.ComparisonType">
            <summary>
            <see cref="T:Terrasoft.Core.Entities.FilterComparisonType"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem.LogicalOperation">
            <summary>
            <see cref="P:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem.LogicalOperation"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem.Filter">
            <summary>
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter"/>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryAnalyzeFilterRule">
            <summary>
            Provides methods for analyze filter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryAnalyzeFilterRule.GetOptimizeFilterMode">
            <summary>
            Returns <see cref="T:Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode"/>.
            </summary>
            <returns><see cref="T:Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryAnalyzeFilterRule.GetSuitableFilters(Terrasoft.Core.UserConnection,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem})">
            <summary>
            Returns suitable filters.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="flatStructure">Enumerable of <see cref="T:Terrasoft.Core.Entities.Optimization.FlatStructureFilterItem" />.</param>
            <returns>
            Enumerable of <see cref="T:Terrasoft.Core.Entities.EntitySchemaQueryFilter" /> to optimization.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryOptimizeModeHandler">
            <summary>
            Provides methods for query optimizations.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryOptimizeModeHandler.ApplyRule(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryFilter)">
            <summary>
            Applies the optimization rule to entity schema query filter.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryOptimizeModeHandler.GetOptimizeFilterMode">
            <summary>
            Gets the optimize filter mode.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.Interfaces.IQueryOptimizeHandlersFactory">
            <summary>
            Provides methods for optimize handler creation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.Interfaces.IQueryOptimizeHandlersFactory.GetQueryOptimizeHandler(Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode)">
            <summary>
            Gets the query optimize handler by optimize mode.
            </summary>
            <param name="mode">Optimize mode.</param>
            <return>Query optimize handler.</return>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.QueryOptimizeHandlersFactory">
            <summary>
            Creates query optimize handlers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Optimization.QueryOptimizeHandlersFactory.Handlers">
            <summary>
            Gets the query optimize handlers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.QueryOptimizeHandlersFactory.GetQueryOptimizeHandler(Terrasoft.Core.Entities.Optimization.Enums.OptimizeFilterMode)">
            <summary>
            Gets the query optimize handler by optimize mode.
            </summary>
            <param name="mode">Optimize mode.</param>
            <return>Query optimize handler.</return>
        </member>
        <member name="T:Terrasoft.Core.Entities.Optimization.QuerySeparateModeHandler">
            <summary>
            Handles entity schema query filter optimization by separating filter subqueries from main select.
            </summary>
            <seealso cref="T:Terrasoft.Core.Entities.Optimization.Interfaces.IEntitySchemaQueryOptimizeModeHandler" />
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.QuerySeparateModeHandler.ApplyRule(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntitySchemaQueryFilter)">
            <summary>
            Applies the optimization rule to entity schema query filter.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Optimization.QuerySeparateModeHandler.GetOptimizeFilterMode">
            <summary>
            Gets the optimize filter mode.
            </summary>
            <return>Optimize mode.</return>
        </member>
        <member name="T:Terrasoft.Core.Entities.SystemEntity">
            <summary>
            ######### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntity.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.SystemEntity"/>, ######### ######## ################ ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntity.#ctor(Terrasoft.Core.Entities.SystemEntity)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Entities.SystemEntity"/>, ########## ###### ######### ########## #######.
            </summary>
            <param name="source">######### ######, #### ######## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntity.Clone">
            <summary>
            ########## ######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.
            </summary>
            <returns>######### <see cref="T:System.Object"/>, ########## ###### ######## ########## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.SystemEntitySchemaManager">
            <summary>
            System entities schema manager.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.SystemEntitySchemaManager"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeInstance(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Entities.EntitySchema})">
            <summary>
            Initializes a new instance of the system schema in the specified item of manager.
            </summary>
            <param name="item"> The manager item for which the instance is being creating.</param>
            <returns> Initialized item of system schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeItems">
            <summary>
            Initializes items of manager.
            </summary>
            <returns>
            <c>true</c>, if manager items are successfully initialized; otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeEntitySchemaRights">
            <summary>
            Initializing permissions for the schemas.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.SystemEntitySchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Creates the schema instance for the type specified in the passed-in manager item. If no such schema type is
            found, an exception is thrown.</summary>
            <param name="schemaManagerItem">The manager item where the schema is to be initialized.</param>
            <param name="assembly">The assembly that contains the type of the scheme whose instance is being created.
            </param>
            <returns>The initialized instance of the schema.</returns>
        </member>
        <member name="T:Terrasoft.Core.Entities.Validation.EntityColumnValue">
            <summary>
            Used to provide entity column value data to <see cref="T:Terrasoft.Core.Entities.Validation.IEntityXssDetector"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValue.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.Validation.EntityColumnValue"/> struct.
            </summary>
            <param name="columnName">Name of the column.</param>
            <param name="value">The value of the column.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.Validation.EntityColumnValue.ColumnName">
            <summary>
            Gets the name of the column.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Validation.EntityColumnValue.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult">
            <summary>
            Used to provide XSS detection for entity column values result.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.IsXssDetected">
            <summary>
            Indicates whether potential XSS code was found in column value.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.Schema">
            <summary>
            The schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.Column">
            <summary>
            The column.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.Result">
            <summary>
            Detection result.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.#ctor(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,Terrasoft.Security.XssDetectionResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult"/> struct.
            </summary>
            <param name="schema">The schema.</param>
            <param name="column">The column.</param>
            <param name="result">The detection result.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.Cleanly">
            <summary>
            Returns the result used when no XSS is detected.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.Create(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn,Terrasoft.Security.XssDetectionResult)">
            <summary>
            Returns the result with detected XSS.
            </summary>
            <param name="schema">The schema.</param>
            <param name="column">The column.</param>
            <param name="result">The detection result.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssDetectionResult.EnsureXssNotFound">
            <summary>
            Ensures the XSS not found. Otherwise throws <see cref="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException"/>.
            </summary>
            <exception cref="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException"> When XSS is detected. </exception>
        </member>
        <member name="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException">
            <summary>
            Exception that indicate that specified schema column value include potential XSS code.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds
            the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException.#ctor(Terrasoft.Core.Entities.EntitySchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException"/> class.
            </summary>
            <param name="schema">The schema.</param>
            <param name="column">The column.</param>
        </member>
        <member name="P:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException.ColumnName">
            <summary>
            Returns the name of the column.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException.SchemaName">
            <summary>
            Returns the name of the schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityColumnValueXssException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds
            the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Terrasoft.Core.Entities.Validation.EntityXssDetector">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityXssDetector.#ctor(Terrasoft.Core.SystemUserConnection,Terrasoft.Security.IXssDetector,Terrasoft.Core.ExtendedXssDetectorOptions,Common.Logging.ILog)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.Validation.EntityXssDetector"/> class.
            </summary>
            <param name="connection">The system user connection.</param>
            <param name="xssDetector">The XSS detector.</param>
            <param name="options">The options.</param>
            <param name="log">The log.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityXssDetector.#ctor(Terrasoft.Core.SystemUserConnection,Terrasoft.Security.IXssDetector,Terrasoft.Core.ExtendedXssDetectorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Entities.Validation.EntityXssDetector"/> class.
            </summary>
            <param name="connection">The system user connection.</param>
            <param name="xssDetector">The XSS detector.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.EntityXssDetector.Detect(System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.Validation.EntityColumnValue})">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Entities.Validation.IEntityXssDetector">
            <summary>
            Used to detect XSS code in entity column values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Entities.Validation.IEntityXssDetector.Detect(System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.Validation.EntityColumnValue})">
            <summary>
            Detects the XSS code in specified schema column values.
            </summary>
            <param name="schemaName">Name of the schema.</param>
            <param name="columnValues">The column values.</param>
            <returns>Detection result.</returns>
        </member>
        <member name="T:Terrasoft.Core.EntitySchemaManagerItem">
            <summary>
            ####### ######### #### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.EntitySchemaManagerItem.#ctor(Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.EntitySchemaManagerItem"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.EntitySchemaManagerItem.GetHashData">
            <summary>
            Prepares data for hashing.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ProcessParameterValueException">
            <summary>
            Provides the exception for <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValueException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValueException"/> class using the specified
            error message.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValueException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValueException"/> class using the specified
            error message and inner exception.
            </summary>
            <param name="message">Error message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Terrasoft.Core.EntitySchemaNotFoundException">
            <inheritdoc/>
            <summary>
            Exception that indicate inability to find required Entity schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.EntitySchemaNotFoundException.#ctor(System.Guid)">
            <inheritdoc/>
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.EntitySchemaNotFoundException"/>
            class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.EntitySchemaNotFoundException.EntitySchemaUId">
            <summary>
            Entity schema UId.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.EntitySchemaColumnNotFoundException">
            <inheritdoc/>
            <summary>
            Exception that indicate inability to find required Entity schema column.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.EntitySchemaColumnNotFoundException.#ctor(System.Guid,System.String,System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the
            <see cref="T:Terrasoft.Core.EntitySchemaColumnNotFoundException" /> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.EntitySchemaColumnNotFoundException.EntitySchemaUId">
            <summary>
            Entity schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.EntitySchemaColumnNotFoundException.EntitySchemaName">
            <summary>
            Name of Entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.EntitySchemaColumnNotFoundException.EntityColumn">
            <summary>
            Entity schema column UId.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.MetaItemNotFoundByUIdException">
            <summary>
            Provides the exception for <see cref="T:Terrasoft.Core.MetaItemNotFoundByUIdException"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.MetaItemNotFoundByUIdException.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.MetaItemNotFoundByUIdException"/> class using the specified
            meta item UId.
            </summary>
            <param name="metaItemUId">UId of meta item.</param>
        </member>
        <member name="P:Terrasoft.Core.MetaItemNotFoundByUIdException.MetaItemUId">
            <summary>
            Gets the meta item unique identifier.
            </summary>
            <value>
            The unique identifier of the meta item which is not found.
            </value>
        </member>
        <member name="T:Terrasoft.Core.ValidateExpressionException">
            <summary>
            Exception class for expression validation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ValidateExpressionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ValidateExpressionException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Terrasoft.Core.ValidateExpressionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ValidateExpressionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Terrasoft.Core.ValidateExpressionException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ValidateExpressionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="expression">The expression, that was validated.</param>
        </member>
        <member name="M:Terrasoft.Core.ValidateExpressionException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ValidateExpressionException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="expression">The expression, that was validated.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Terrasoft.Core.ValidateExpressionException.Expression">
            <summary>
            Gets or sets the expression, that was validated.
            </summary>
            <value>
            The expression.
            </value>
        </member>
        <member name="T:Terrasoft.Core.ProcessParameterValidateException">
            <summary>
            The class for process parameter value validation exception.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValidateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValidateException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValidateException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValidateException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="parameterData">Data of the process parameter.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValidateException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValidateException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="elementData">Data of the process element.</param>
            <param name="parameterData">Data of the process parameter.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValidateException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValidateException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="elementData">Data of the process element.</param>
            <param name="parameterData">Data of the process parameter.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessParameterValidateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessParameterValidateException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Terrasoft.Core.ProcessSchemaIsNotEnabledException">
            <summary>
            Exception is thrown when process schema was not enabled.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessSchemaIsNotEnabledException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessSchemaIsNotEnabledException"/> class for given
            process schema caption.
            </summary>
            <param name="processSchemaCaption">The process schema caption.</param>
        </member>
        <member name="T:Terrasoft.Core.ProcessSchemaIsNotPublishedException">
            <summary>
            Exception is thrown when trying to use not published compiled process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessSchemaIsNotPublishedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessSchemaIsNotPublishedException"/> class.
            </summary>
            <param name="processSchemaCaption">The process schema caption.</param>
        </member>
        <member name="T:Terrasoft.Core.ProcessSchemaNotValidException">
            <summary>
            Exception is thrown when process schema is not valid.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessSchemaNotValidException.#ctor(System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessSchemaNotValidException"/> class.
            </summary>
            <param name="invalidElementNames">Invalid process elements.</param>
        </member>
        <member name="T:Terrasoft.Core.ProcessRunBySignalException">
            <summary>
            Exception is thrown while process was run by signal.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessRunBySignalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessRunBySignalException"/> class.
            </summary>
            <param name="processDisplayValue">The process display value.</param>
            <param name="e">The inner exception.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessRunBySignalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ProcessRunBySignalException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the 
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="T:Terrasoft.Core.AppConfigurationException">
            <summary>
            Exception class for application configuration errors.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SetSchemaPropertyException">
            <summary>
            Exception thrown when setting a property value of the schema fails.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SetSchemaPropertyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SetSchemaPropertyException" /> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Terrasoft.Core.SetSchemaPropertyException.#ctor(System.String,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SetSchemaPropertyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
            <param name="userPropertyUpdated">if set to <c>true</c> user property updated successfully.</param>
        </member>
        <member name="M:Terrasoft.Core.SetSchemaPropertyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SetSchemaPropertyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the 
            serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains
            contextual information about the source or destination.</param>
        </member>
        <member name="P:Terrasoft.Core.SetSchemaPropertyException.UserPropertyUpdated">
            <summary>
            Gets a value indicating whether the user property was updated.
            </summary>
            <value>
            <c>true</c> if user property successfully updated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Terrasoft.Core.TryDistributedLockException">
            <summary>
            Exception is thrown when can not get distributed lock object.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.TryDistributedLockException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.TryDistributedLockException"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.TryDistributedLockException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.TryDistributedLockException"/> class.
            </summary>
            <param name="key">Key of distributed lock.</param>
        </member>
        <member name="P:Terrasoft.Core.TryDistributedLockException.Key">
            <summary>
            Gets the distributed lock key.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.DuplicateBindingException">
            <summary>
            Exception is thrown when there are bindings with several implementations for one service.
            </summary>
            <seealso cref="T:System.ApplicationException" />
        </member>
        <member name="M:Terrasoft.Core.DuplicateBindingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DuplicateBindingException"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.DuplicateBindingException.#ctor(System.Type,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DuplicateBindingException"/> class.
            </summary>
            <param name="service">The service to implement.</param>
            <param name="implementations">Existing implementation types separated by coma.</param>
            <param name="name">The name of binding.</param>
        </member>
        <member name="M:Terrasoft.Core.DuplicateBindingException.#ctor(System.Type,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DuplicateBindingException"/> class.
            </summary>
            <param name="service">The service to implement.</param>
            <param name="implementations">Existing implementation types separated by coma.</param>
            <param name="name">The name of binding.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Terrasoft.Core.DuplicateBindingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.DuplicateBindingException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the
            <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in
            a <see langword="catch" /> block that handles the inner exception.</param>
        </member>
        <member name="P:Terrasoft.Core.ExtendedXssDetectorOptions.ExcludedSchemas">
            <summary>
            Gets or sets the list of entity schemas to exclude from detection.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ExtraProperty">
            <summary>
            The class for the manager items extra property.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ExtraProperty.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ExtraProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
        </member>
        <member name="M:Terrasoft.Core.ExtraProperty.#ctor(System.String,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.ExtraProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="T:Terrasoft.Core.ExtraPropertyCollection">
            <summary>
            The collection of the <see cref="T:Terrasoft.Core.ExtraProperty"/> items.
            </summary>
            <seealso cref="T:Terrasoft.Core.BaseExtraPropertyCollection`1" />
        </member>
        <member name="T:Terrasoft.Core.ExtraPropertyInfo">
            <summary>
            Provides an information about ExtraProperty.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ExtraPropertyInfo.#ctor(System.Reflection.PropertyInfo)">
            <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
        </member>
        <member name="P:Terrasoft.Core.ExtraPropertyInfo.PropertyInfo">
            <summary>
            Gets the <see cref="P:Terrasoft.Core.ExtraPropertyInfo.PropertyInfo"/>.
            </summary>
            <value>
            The <see cref="P:Terrasoft.Core.ExtraPropertyInfo.PropertyInfo"/>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ExtraPropertyInfo.MetaTypeAttribute">
            <summary>
            Gets the <see cref="T:Terrasoft.Core.MetaTypePropertyAttribute"/> attribute.
            </summary>
            <value>
            The <see cref="T:Terrasoft.Core.MetaTypePropertyAttribute"/> attribute.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Factories.ConstructorArgument">
            <summary>
            Argument of the class constructor, which is created using the factory of replacement classes.
            </summary>
            <remarks>This class is designed for initialization of the arguments of parameter-based 
            class constructors, which are created using factory.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Factories.ConstructorArgument.#ctor(System.String,System.Object)">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.Factories.ConstructorArgument" /> 
            with the specified name and value. 
            </summary>
            <param name="name">Argument name.</param>
            <param name="value">Argument value.</param>
        </member>
        <member name="P:Terrasoft.Core.Factories.ConstructorArgument.Name">
            <summary>
            Argument name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Factories.ConstructorArgument.Value">
            <summary>
            Argument value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Factories.ClassFactory">
            <summary>
            Factory of the replacement classes.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Factories.ClassFactory.InitializeModule">
            <summary>
            Module for binding types to the types that replace them.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.InitializeModule.Load">
            <summary>
            Initialization of the module for binding types of the configuration assembly
            to the types that replace them.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Get``1(Terrasoft.Core.Factories.ConstructorArgument[])">
            <summary>
            Returns an instance of replacing type for specified replacement type.
            </summary>
            <typeparam name="T">Replacement type.</typeparam>
            <param name="constructorArguments">Array of the constructor arguments of the replacement type.</param>
            <returns>Instance of type that replaces the <typeparamref name="T" /> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Get(System.Type)">
            <summary>
            Returns an instance of specified type.
            </summary>
            <param name="type">Type of instance to resolve.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.TryGet``1(System.String,``0@,Terrasoft.Core.Factories.ConstructorArgument[])">
            <summary>
            Tries to get an instance of the specified service by using the first binding
            with the specified name.
            </summary>
            <typeparam name="T">The service to resolve</typeparam>
            <param name="name">Full name of class.</param>
            <param name="instance">Instance of resolve service.</param>
            <param name="constructorArguments">Array of the constructor arguments of the replacement type.</param>
            <returns><c>true</c> if find instance of the class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.ForceGet``1(System.String,Terrasoft.Core.Factories.ConstructorArgument[])">
            <summary>
            Returns an instance of the class by name. 
            </summary>
            <typeparam name="T">The service to resolve.</typeparam>
            <param name="fullClassName">Full name of class.</param>
            <param name="constructorArguments">Array of the constructor arguments.</param>
            <returns>Instance of the class, or null.</returns>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Bind``2(System.String)">
            <summary>
            Declares a binding for the specified service and
            indicates that the service should be bound to the specified implementation type.
            </summary>
            <typeparam name="T">The service to bind.</typeparam>
            <typeparam name="TImpl">The implementation type.</typeparam>
            <param name="name">The name to give the binding.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Bind``2">
            <summary>
            Declares a binding for the specified service and
            indicates that the service should be bound to the specified implementation type.
            </summary>
            <typeparam name="T">The service to bind.</typeparam>
            <typeparam name="TImpl">The implementation type.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Bind(System.Type,System.Type,System.String)">
            <summary>
            Declares a binding for the specified service and
            indicates that the service should be bound to the specified implementation type.
            </summary>
            <param name="service">The service to bind.</param>
            <param name="implementation">The implementation type.</param>
            <param name="name">The name to give the binding.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Bind(System.Type,System.Type)">
            <summary>
            Declares a binding for the specified service and
            indicates that the service should be bound to the specified implementation type.
            </summary>
            <param name="service">The service to bind.</param>
            <param name="implementation">The implementation type.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Bind``1(System.Type)">
            <summary>
            Declares a binding for the specified service by type.
            </summary>
            <typeparam name="T">The service to resolve.</typeparam>
            <param name="classType">Type of class.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.Bind``1(System.Func{``0})">
            <summary>
            Declares a binding for the specified service.
            </summary>
            <typeparam name="T">The service to resolve.</typeparam>
            <param name="resolveMethod">Method that returns the specified service.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.RebindWithFactoryMethod``1(System.Func{``0})">
            <summary>
            Rewrites a binding for the specified service.
            </summary>
            <typeparam name="T">The service to resolve.</typeparam>
            <param name="resolveMethod">Method that returns the specified service.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.RebindWithFactoryMethod``1(System.Func{``0},System.String)">
            <summary>
            Rewrites a binding for the specified service with the given name.
            </summary>
            <typeparam name="T">The service to resolve.</typeparam>
            <param name="resolveMethod">Method that returns the specified service.</param>
            <param name="name">The name to give the binding.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.ReBind``2">
            <summary>
            Removes any existing bindings for the specified service, declares a new one and 
            indicates that the service should be bound to the specified implementation type.
            </summary>
            <typeparam name="T">The service to re-bind.</typeparam>
            <typeparam name="TImpl">The implementation type.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.ReBind``2(System.String)">
            <summary>
            Removes any existing bindings with specified name for the specified service and replaces it with a new one.
            If there are no bindings with the given name then just creates a new.
            </summary>
            <typeparam name="T">The service to re-bind.</typeparam>
            <typeparam name="TImpl">The implementation type.</typeparam>
            <param name="name">The name for existing service.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.HasBinding``1">
            <summary>
            Returns true if service has binding.
            </summary>
            <typeparam name="T">The service to check binding.</typeparam>
            <returns><c>true</c> if service has binding.</returns>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.HasBinding(System.Type,System.String)">
            <summary>
            Returns true if service has binding.
            </summary>
            <param name="type">The service to check binding.</param>
            <param name="name">The name of the existing service to check. If <c>null</c>, any service is checked.
            </param>
            <returns><c>true</c> if service has binding.</returns>
        </member>
        <member name="M:Terrasoft.Core.Factories.ClassFactory.HasBinding(System.Type)">
            <summary>
            Returns true if service has binding.
            </summary>
            <param name="type">The service to check binding.</param>
            <returns><c>true</c> if service has binding.</returns>
        </member>
        <member name="T:Terrasoft.Core.Factories.DefaultBinder">
            <summary>
            Binds services to their mapped default implementations.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.DefaultBinder.BindDefaultImplementationsToServices(System.Reflection.Assembly)">
            <summary>
            Binds default implementations to corresponding services using <see cref="T:Terrasoft.Core.Factories.DefaultBindingAttribute"/>
            attribute.
            </summary>
            <param name="assembly">The assembly, which contains services to be bound.</param>
        </member>
        <member name="M:Terrasoft.Core.Factories.DefaultBinder.BindDefaultImplementationsToServices(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Binds default implementations to corresponding services using <see cref="T:Terrasoft.Core.Factories.DefaultBindingAttribute"/>
            attribute.
            </summary>
            <param name="assemblies">The assemblies, which contain services to be bound.</param>
            <exception cref="T:Terrasoft.Core.DuplicateBindingException">There is more than one implementations, that point to the same
            service using the same name.</exception>
        </member>
        <member name="T:Terrasoft.Core.Factories.DefaultBinderUtilities">
            <summary>
            DefaultBinder class utilities.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.DefaultBinderUtilities.InitializeDefaultDIBindings(Terrasoft.Core.Configuration.SysWorkspace)">
            <summary>
            Initializes the default dependency injection bindings for workspace assembly.
            </summary>
            <param name="source">The workspace.</param>
        </member>
        <member name="T:Terrasoft.Core.Factories.DefaultBindingAttribute">
            <summary>
            Points to the service, that binds to the current class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Factories.DefaultBindingAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Factories.DefaultBindingAttribute"/> class.
            </summary>
            <param name="service">The implementor type.</param>
        </member>
        <member name="P:Terrasoft.Core.Factories.DefaultBindingAttribute.Service">
            <summary>
            Gets the service type, that should be bound to the current class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Factories.DefaultBindingAttribute.Name">
            <summary>
            Gets or sets the binding name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Factories.OverrideAttribute">
            <summary>
            #########, ### ##### ######## ###### ######## # ########. 
            </summary>
        </member>
        <member name="T:Terrasoft.Core.FactoryMetaItemCollection`1">
            <summary>
            Collection of <see cref="T:Terrasoft.Core.MetaItem"/> that implements <see cref="T:Terrasoft.Common.IMetaDataSerializable"/> and
            <see cref="T:Terrasoft.Core.ITempalteSerializable"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:Terrasoft.Core.MetaItemCollection`1" />
            <seealso cref="T:Terrasoft.Common.IMetaDataSerializable" />
            <seealso cref="T:Terrasoft.Core.ITempalteSerializable" />
        </member>
        <member name="M:Terrasoft.Core.FactoryMetaItemCollection`1.#ctor(Terrasoft.Core.FactoryMetaItemCollection{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.FactoryMetaItemCollection`1"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:Terrasoft.Core.FactoryMetaItemCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.FactoryMetaItemCollection`1"/> class.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.FileSystemEnabledSchemaManager`1">
            <summary>
            Base class of manager which works with schemas in file system.
            </summary>
            <typeparam name="TSchemaManagerSchema">Class, inherits from <see cref="T:Terrasoft.Core.Schema"/>, implements interface
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.FileSystemEnabledSchemaManager`1.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Creates the manager of schema, using specified provider and information from configuration file.
            </summary>
            <param name="provider">Provider of schema manager.</param>
            <param name="configuration">Information from configuration file.</param>
        </member>
        <member name="P:Terrasoft.Core.GeneratorUtilities.GetByteArrayStringForCodeGeneration">
            <summary>
            A delegate for a method, returning string with byte array creation phrase that is created from input string.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRecordIdSchemaParameterMapPath(Terrasoft.Core.Process.IParametrizedProcessSchemaElement)">
            <summary>
            Returns mapping path of the "RecordId" parameter.
            </summary>
            <param name="parametrizedElement">The parametrized element.</param>
            <returns>Returns string that represents mapping path of the "RecordId" process parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodePropertyValueMacros(System.Text.StringBuilder,System.Action{System.Text.StringBuilder,System.String,System.String})">
            <summary>
            Converts macros of the property value to C# code.
            </summary>
            <param name="code">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
            <param name="action">The method which is called if value is matched.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.FindEntitySchemaByUIdOrName(System.Guid,System.Guid,System.String,Terrasoft.Core.UserConnection)">
            <summary>
            Finds entity schema from metadata.
            </summary>
            <param name="packageUId">Unique identifier of the package.</param>
            <param name="schemaUId">Unique identifier of the entity schema.</param>
            <param name="schemaName">Name of the entity schema.</param>
            <param name="userConnection">User connection.</param>
            <returns>Entity schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ToCSharpStringLiteral(System.String)">
            <summary>
            Returns C# string literal that can be used to produce specified in <paramref name="source"/> string
            at runtime.
            </summary>
            <param name="source">Source string.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexPropertyNameParser">
            <summary>
            Gets the regular expression searching property names.
            </summary>
            <returns>Regular expression searching property names</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexParameterMacros">
            <summary>
            Gets the regular expression searching process parameter macros.
            </summary>
            <returns>Regular expression searching process parameter macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexConstString">
            <summary>
            Gets the regular expression searching constant strings.
            </summary>
            <returns>Regular expression searching constant strings</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexLookupValueMacros">
            <summary>
            Gets the regular expression searching lookup value macros.
            </summary>
            <returns>Regular expression searching lookup value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexSysVariableMacros">
            <summary>
            Gets the regular expression searching system variable value macros.
            </summary>
            <returns>Regular expression searching system variable value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexSysSettingsMacros">
            <summary>
            Gets the regular expression searching system settings value macros.
            </summary>
            <returns>Regular expression searching system settings value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexDateValueMacros">
            <summary>
            Gets the regular expression searching date value macros.
            </summary>
            <returns>Regular expression searching date value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexTimeValueMacros">
            <summary>
            Gets the regular expression searching time value macros.
            </summary>
            <returns>Regular expression searching time value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexTimeValueMacrosOnly">
            <summary>
            Gets the regular expression searching alone time value macros.
            </summary>
            <returns>Regular expression searching alone time value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetRegexDateTimeValueMacros">
            <summary>
            Gets the regular expression searching datetime value macros.
            </summary>
            <returns>Regular expression searching datetime value macros</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.GetStartSignalRecordIdMapPath(Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Retuns start signal record Id map path.
            </summary>
            <param name="dcmSchema">Dcm schema instance <see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/>.</param>
            <returns>Record id map path.</returns>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeSysVariableMacros(Terrasoft.Core.UserConnection,System.Text.StringBuilder)">
            <summary>
            Converts macros of the system variables to C# code.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="code">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeBooleanMacros(System.Text.StringBuilder)">
            <summary>
            Converts boolean macroses to C# code.
            </summary>
            <param name="sb">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeSysSettingsMacros(Terrasoft.Core.UserConnection,System.Text.StringBuilder,System.Func{System.String,System.String,System.String})">
            <summary>
            Converts system settings macroses to C# code.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="code">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
            <param name="getCodeConvertionTemplateSysSettings">Optional delegate returns code convertion template
            for system settings. If passed <c>null</c> then used <see cref="M:Terrasoft.Core.GeneratorUtilities.GetCodeConvertionTemplateSysSettings(System.String,System.String)"/>
            </param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeTimeSpanValueMacros(System.Text.StringBuilder)">
            <summary>
            Converts time span value macroses to C# code.
            </summary>
            <param name="sb">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeDateTimeValueMacros(System.Text.StringBuilder,System.Text.RegularExpressions.Regex)">
            <summary>
            Converts date time value macroses to C# code .
            </summary>
            <param name="sb">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
            <param name="dateTimeRegex">The datetime regular expression.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeAllDateTimeValuesMacros(System.Text.StringBuilder)">
            <summary>
            Converts all datetime macroses to C# code.
            </summary>
            <param name="sb">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.GeneratorUtilities.ConvertToCodeEntityColumnValueMacros(Terrasoft.Core.UserConnection,System.Text.StringBuilder,System.String)">
            <summary>
            Converts entity column value macros to C# code.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sb">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
            <param name="recordIdPath">The "Record Id" parameter path.</param>
        </member>
        <member name="T:Terrasoft.Core.GlobalAppSettings">
            <summary>
            Application settings.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UserSessionTimeout">
            <summary>
            User session timeout in minutes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseLocalizableFetchFromDB">
            <summary>
            Indicates whether to fetch only default culture data or use multilanguage data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseCurrentCultureEntityFetch">
            <summary>
            Indicates whether to fetch data from Default culture or Current culture when LocalizationCultureId
            is not specified for Entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseIsoWeeks">
            <summary>
            Indicates whether to use ISO date standard for week numbers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ConfigurationProjectPath">
            <summary>
            Path for project Terrasoft.Configuration.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ShowProcessExecutionPageAfterTimer">
            <summary>
            Flag that indicates whether processes should show execution page after timer.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseEntitySetColumnValueEqualityCheck">
            <summary>
            Flag that indicates whether to check values equality for SetColumnValue/SetBytesValue/SetStreamValue
            methods.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureIgnoreAdminRightsInProcess">
            <summary>
            Flag that indicates whether it is necessary to check admin roles in process execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ForceIndexRebuild">
            <summary>
            Flag that indicates always rebuild index when column is indexed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.HashSalt">
            <summary>
            String which is used as a salt during hash generating.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.WebFarmEnabled">
            <summary>
            Gets or sets a value indicating whether web farm mode is enabled.
            </summary>
            <value><c>true</c> if web farm enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.DisableLocalSynchronizedCache">
            <summary>
            Used to disable local in-memory cache to test application operation without cache.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseSynchronizedLocalCacheSingleAppMode">
            <summary>
            Gets or sets a value indicating whether to disable redis synchronization in
            <see cref="T:Terrasoft.Core.Store.ISynchronizedLocalCache"/> in case of single web app mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ProcessEngineRedisConnectionStringName">
            <summary>
            Provides an ability to specify custom Redis connection string name, that will be used by process engine.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseGenerateModulePathes">
            <summary>
            Allow generate pathes for modules.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseQueryProfileKeyList">
            <summary>
            Query profile executes only by key list.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseParallelSchemaBuilding">
            <summary>
            Schema builder builds in parallel.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.BuildEsqReverseAggregationColumnsWithoutExistsFilters">
            <summary>
            Flag that indicates whether to build aggregation reverse columns in ESQ without exists-filters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureAllowSupervisorAutoLogin">
            <summary>
            Flag that indicates whether allow to auto-login with supervisor-supervisor when empty login-password passed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseConversionToUtcForTimeInOData">
            <summary>
            Gets or sets a value indicating whether to use convertation to UTC for TimeDataValueType.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureDoNotStoreActiveSubprocesses">
            <summary>
            Enables feature that allows to turn off save subprocesses into ActiveProcessDataStore.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessInvocationCalls">
            <summary>
            Enables feature that allows to use invocation calls.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureClearFlowElementsInProcessComponentSet">
            <summary>
            Enables feature that allows to clear collection of the flow elements in the finished ProcessComponentSet.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessDataStorageToRegisterProcessListener">
            <summary>
            Enables registration of process listeners using ProcessDataStore.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessDataStorageToRemoveProcessListener">
            <summary>
            Enables to use cancel registration of process listeners via ProcessDataStore.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureAllowInterruptProcessExecution">
            <summary>
            Enables interruption of process execution that depend on
            <see cref="P:Terrasoft.Core.Process.Process.IsProcessExecutedByService"/> flag.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseManagerToFindParentProcessSchemaId">
            <summary>
            Disables usage of database query to find parent process schema identifier instead of manager items.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseManagerToFindActualVersionsInManagerService">
            <summary>
            If set to <c>true</c> process schema manager service will use manager instead of VwProcessLib.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessNotificationMetrics">
            <summary>
            If set to <c>true</c> the duration of notification publishing for interactive process elements metric
            will be sent.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureDisableAdminRightsInScriptTask">
            <summary>
            Indicates whether to ignore admin rights in script tasks for the new processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureDisableIncompatibleEmbeddedProsess">
            <summary>
            Flag indicating whether Net Standart compatibility mode is used for embedded processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.SupportECMA5">
            <summary>
            Support ECMA 5.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.MaxConfigurationAssemblyBackupCount">
            <summary>
            Maximum number of configuration builds to store in file system.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.SessionLockTtlSec">
            <summary>
            Number of seconds that is used to set initial session lock TTL,
            and for which TTL will be extended every [SessionLockTtlProlongationIntervalSec]
            until request removes the lock.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.SessionLockTtlProlongationIntervalSec">
            <summary>
            Number of seconds between session locks TTL prolongation routines.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.IsWcfHelpEnabled">
            <summary>
            Determines if the WCF Help page is enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ForceAdministratedByRecordsSchemaNames">
            <summary>
            Collection of schema names always administrated by records.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.RestrictedSelectSchemaAccessNames">
            <summary>
            Collection of schema names where reading records using DataService or EntityDataService is not permitted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.RestrictedModifySchemaAccessNames">
            <summary>
            Collection of schema names where editing or deleting records using DataService or EntityDataService is not
            permitted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.RestrictedSelectAndModifySchemaAccessNames">
            <summary>
            Collection of schema names where reading, editing or deleting records using DataService or
            EntityDataService is not permitted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.WriteOperationAuditToDb">
            <summary>
            Indicates whether <see cref="T:Terrasoft.Core.OperationLog.OperationLogger"/> should write to built-in
            appender <see cref="T:Terrasoft.Core.OperationLog.OperationLogAppender"/> or not.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseRunProcessAccessControl">
            <summary>
            Ability to run business processes with access rights check.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureOAuthTokenLogin">
            <summary>
            Flag that indicates whether to allow login using OAuth access token.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureExternalAccessRestrictions">
            <summary>
            Flag is indicating whether external access restrictions enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.IsolatedModePermittedSchemaNames">
            <summary>
            Collection of schema names where reading records in Data Isolation mode is permitted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.IsFileDesignModeEnabled">
            <summary>
            Flag that indicates whether the fileDesignMode option is enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.MemoryCacheStoreSlidingExpiration">
            <summary>
            Data expiration time in global application memory cache.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UsePingServiceToWakeupDomain">
            <summary>
            Flag that indicates whether <see cref="T:ProcessJobStub"/> uses ping service to wakeup AppDomain.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.PerformanceLoggerThreshold">
            <summary>
            The time in milliseconds when to log process info.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseProcessRemindings">
            <summary>
            Flag that indicates whether processes can use remindings.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseBackgroundProcessMode">
            <summary>
            Flag that indicates whether processes can be executed in background mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureEnableDcmBackgroundMode">
            <summary>
            Enables background mode for subprocess execution in DCM Cases.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseApplicationScheduler">
            <summary>
            Flag that indicates whether Application uses scheduler
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseOffsetFetchPaging">
            <summary>
            Determines if offset-fetch paging enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseAdditionalSortingByIdWhenOffsetFetch">
            <summary>
            Indicates whether to add additional sorting by primary column when using offset fetch
            and there is order by nullable columns only.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseLookupNotEqualOrNullQueryCondition">
            <summary>
            Determines if IsNull filter presents in NotEqual filter for lookup columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseCsrfToken">
            <summary>
            Indicates whether to use CSRF token.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseConvertingEmptyConditionToIsNull">
            <summary>
            Indicates whether to use Convert Empty Condition To IsNull
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.DisableCsrfTokenValidationForPaths">
            <summary>
            Allowed service methods for CSRF.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseEntitySchemaLczNaming">
            <summary>
            Indicates whether to use name for Lcz table from EntitySchema or from hardcoded string.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseSchemaManagersDI">
            <summary>
            Indicates whether to use DI container for SchemaManagers instantiation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.RedisLockEntryExpireTimeMin">
            <summary>
            Indicates when expire redis lock on entry.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseNewCachingForSSPUser">
            <summary>
            Indicates whether be used new caching for SSP user.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseDBSequence">
            <summary>
            Indicates whether be used data base sequence in application or not.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseCSATRatingService">
            <summary>
            Indicates whether CSAT rating service is enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseRuntimeEntitySchemaMetadata">
            <summary>
            Flag that indicates whether the runtime EntitySchema metadata is stored in an external storage.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseLocalCacheInSystemUserConnection">
            <summary>
            Flag that indicates whether the SystemUserConnection can use local cache.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseLocalDataInSystemUserConnection">
            <summary>
            Flag that indicates whether the SystemUserConnection can use local data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseQueryKinds">
            <summary>
            Allows using multiple executors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseQueryOptimize">
            <summary>
            Allows using query optimization.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.QueryOptimizeRowsCountInSourceSchema">
            <summary>
            Allows rows count in source schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseEntityEventListeners">
            <summary>
            Gets a value indicating whether use entity event listeners.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.QueryOptimizeRowsCountExpireMinutes">
            <summary>
            Gets the schema rows count cache expire in minutes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseQueryOptimizeOperatorCheck">
            <summary>
            Gets a value indicating whether query operators are checked during query optimization analyzing.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseOracleServer2012NullsSortingOptimization">
            <summary>
            Allows using Oracle sorting nulls optimization.
            Must be used only with flag UseOffsetFetchPaging for Oracle Server 2012 and higher.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseOracleServer2012ConstraintsQueryOptimization">
            <summary>
            Allows using Oracle constraints reading queries, optimized for Oracle Server 2012.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseOracleFirstRowsHint">
            <summary>
            Allows using Oracle FIRST_ROWS hint in queries with row count.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseMobileManifestCache">
            <summary>
            Allow using mobile manifest cache.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseMasterRecordRights">
            <summary>
            Flag that indicates whether entities are allowed to use master record rights.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseIgnoreSelectRightsInGetRecordRightLevel">
            <summary>
            Flag that indicates whether use IgnoreSelectRightsSchemaList setting in getting entity schema record
            right level.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseMobileClientUnitSchemaCache">
            <summary>
            Allow using mobile client unit schema cache.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessSynchronization">
            <summary>
            Allow using multi-node process synchronization mechanism.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureSspSystemSchemaRestricted">
            <summary>
            Sign that system schemas restricted for portal users.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseScopedActiveProcessDataStore">
            <summary>
            Allow using active process data storage that works when HTTP context is not defined.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ProcessSynchronizationWaitTimeout">
            <summary>
            Process synchronization wait timeout in milliseconds.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessFailoverExecution">
            <summary>
            Allow using process failover execution mechanism.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ProcessFailoverExecutionTimeout">
            <summary>
            Process failover execution timeout in milliseconds.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseMarkerValue">
            <summary>
            Allow using marker value in UI component.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseClientPerformanceLogger">
            <summary>
            Allow using client performance logger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseProcessSplitState">
            <summary>
            Allows using process split state mechanism.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseOnlyLastProcessElementState">
            <summary>
            Allows to select only last element's run data in ProcessElementData selects.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseSystemUserForBackgroundExecution">
            <summary>
            Allows use of system user in case of empty userName for ActorUserConnection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseActiveProcessDataStore">
            <summary>
            Allows using synchronized local memory store for setting process instances.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureProcessParameterCollections">
            <summary>
            Allows process nested parameters in process parameter value provider.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseMetricReporter">
            <summary>
            Allows reporting application metrics.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.MinQueryDurationToSaveMetrics">
            <summary>
            Minimal query duration to send metrics (in msec).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UsePersonalSessionTimeout">
            <summary>
            Use personal user session timeout feature.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseInterpretableProcessOnly">
            <summary>
            Disallows using force compiled processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureReadDataUserTaskUseChunks">
            <summary>
            Allows ReadDataUserTask to read data in batches.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseNewActualizePackageHierarchy">
            <summary>
            Use new actualize package hierarchy method.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.ShowPortalSelfRegistrationLink">
            <summary>
            Flag, that is indicated necessity of showing link for self registration on portal.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseAdminRightsInEmbeddedLogic">
            <summary>
            Flag that indicates whether it is necessary to check admin roles in embedded logic.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseCodeAnalyzer">
            <summary>
            Enables code analysis for scripts in business processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureLoadPackagesRefAssembliesOnAppStart">
            <summary>
            Enables feature that allows to load reference assemblies in packages into the
            domain at application startup.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureLoadPackagesBinAssembliesOnAppStart">
            <summary>
            Enables feature that allows to load bin assemblies in packages into the
            domain at application startup.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.EnableRegisterServicesFromRefAssemblies">
            <summary>
            Flag that indicates whether web-services will be registered as service routes
            from reference assemblies.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.EnableRegisterEntityEventsFromRefAssemblies">
            <summary>
            Flag that indicates whether entity events will be registered
            in <see cref="T:Terrasoft.Core.Entities.Events.EntityEventListenersLoader"/> from reference assemblies.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.EnableRegisterDIBindingsFromRefAssemblies">
            <summary>
            Flag that indicates whether default implementations will be bound using
            <see cref="T:Terrasoft.Core.Factories.ClassFactory"/> from reference assemblies.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseSchemaManagerCaptionOptimization">
            <summary>
            Flag that indicates when to enable resources schema manager item optimization.
            See http://tscore-task/browse/CRM-39598
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseViewModuleCaching">
            <summary>
            Flag that indicates when to enable ViewModule.aspx caching.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseIsDebugSysSettings">
            <summary>
            Flag that indicates when to use client JS debug mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseTypedSspLicense">
            <summary>
            Flag that swtich on new ssp licenses.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseSspColumnsCountRestriction">
            <summary>
            Flag that enables restriction policy on the count of queried columns by DataService.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.EnableClientPerformanceManager">
            <summary>
            Flag that indicates when to enable client PerformanceManager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.MarketPlaceUrlTemplate">
            <summary>
            URL-template for MarketPlaceWidget on start page.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseParentQueryAdminRightsInSubQuery">
            <summary>
            Flag that indicates whether the ESQ sub queries will use UseAdminRights of root query.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UsePortalDataService">
            <summary>
            Flag that closes system data services for SSP users and SSP data services for system users.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.EnableCustomPrefixRouteApi">
            <summary>
            Flag that enables web services custom routing and restricts SSP user access services without ssp prefix.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseSspServicesListAsAccessExclusions">
            <summary>
            Flag that enables exclusions in self-service portal access policy for services listed in /SspServices folder
            files.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UsePortalSchemaAllowedColumns">
            <summary>
            Flag that enables allowed columns filtration on portal.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.AlwaysAddPrimaryImageColumnInQuery">
            <summary>
            Flag that indicates when to use PrimaryImgColumn in contact card.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureIgnoreDisplayValuesInDataUserTasks">
            <summary>
            Flag that turns off fetching of extra columns in Change- and DeleteDataUserTask.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureUseNewRightsManagement">
            <summary>
            Flag that enables new rights managment.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.NeedWrapOrderedTextColumnInUpper">
            <summary>
            Flag that indicates when need a wrapper for ordered text columns in upper function.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureIndexCommunicationOptionsAndLookupsBy2Symbols">
            <summary>
            Flag that indicates whether communication options and lookups will be indexed starting from 2 symbols.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.NeedWrapCastIndexedTextColumn">
            <summary>
            Flag that indicates when need a wrapper for indexed text columns in index.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.EnableFormingOrderedLookupColumnWithOtherColumnsInEsq">
            <summary>
            Flag that indicates when lookup ordered columns is formed with other columns in ESQ.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureActualizeSchemaRightPositions">
            <summary>
            Enable schema right positions actualizing after package data installing.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureEmailMacrosParametersEvaluation">
            <summary>
            Enable read email macros Date and Time parameters type evaluating.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseDbStructureReader">
            <summary>
            Flag that indicates whether using DbStructureReader.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.SetOracleConnectionClientId">
            <summary>
            Flag that indicates whether to set ClientId to Oracle DB connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseReportGenerationBasedOnSchema">
            <summary>
            Flag that indicates whether reports are build based on schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureDuplicateIsNullConditionInRightsSubquery">
            <summary>
            Enable duplication IsNull query conditions to exists-subquery (record rights) to improve filtering
            by localizable string column performance when working in non-default culture.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureDisableJoinRightsWhenUsingMasterRecords">
            <summary>
            Disable performing record rights check while joining if using master record rights of the same schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureEsqResetSelectQueryWhenFilterStateChanged">
            <summary>
            Disable performing record rights check while joining if using master record rights of the same schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeaturePerformAssemblyResolveInLock">
            <summary>
            Perform assembly resolve and load to domain in one thread.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureWCStartAndStopScheduler">
            <summary>
            Start and stop scheduler after workspace console operation executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.UseDoubleCheckForSchemaUseMasterRecordRights">
            <summary>
            Uses both worskpace cache and instance for checking if entity schema administrated by master records.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureEnableIntToBoolImplicitCastPostgreSql">
            <summary>
            Enable altering int->bool cast to implicit for PostgreSql on webapp start.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.GlobalAppSettings.FeatureEnableManagerServiceSecurity">
            <summary>
            Enables to check security options in Manager Service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GlobalAppSettings.Initialize(System.Collections.Specialized.NameValueCollection,Terrasoft.Core.AppConfigurationSectionGroup)">
            <summary>
            Class initialization.
            </summary>
            <param name="config">Application setting parameters collection.</param>
            /// <param name="appConfigurationSectionGroup">Application configuration section group collection.</param>
        </member>
        <member name="T:Terrasoft.Core.GuidMetaItem">
            <summary>
            Represents <seealso cref="T:Terrasoft.Core.MetaItem" /> with single <see cref="T:System.Guid"/> value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.GuidMetaItem"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItem.#ctor(Terrasoft.Core.GuidMetaItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.GuidMetaItem"/> class.
            </summary>
            <param name="source">The source meta item.</param>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItem.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.GuidMetaItem"/> class.
            </summary>
            <param name="uid">The uid.</param>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItem.Clone">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.GuidMetaItemCollection">
            <summary>
            Represents Guid collection in metadata, that supports item modification using
            <see cref="T:Terrasoft.Common.JsonDataDifferencePackage"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItemCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.GuidMetaItemCollection"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItemCollection.#ctor(Terrasoft.Core.GuidMetaItemCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.GuidMetaItemCollection"/> class.
            </summary>
            <param name="source">The source collection.</param>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItemCollection.AddIfNotExists(System.Guid)">
            <summary>
            Adds value if item with same value not exist in collection.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItemCollection.Contains(System.Guid)">
            <summary>
            Determines whether this instance contains the item with specified <paramref name="value"/>.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.GuidMetaItemCollection.WriteMetaDataIfNotEmpty(System.String,Terrasoft.Common.DataWriter)">
            <summary>
            Writes metadata property with items to <paramref name="writer"/> if this instance is not empty.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Terrasoft.Core.Hash.ISaltedHashGenerator">
            <summary>
            Provides methods for hash generating with salt.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Hash.ISaltedHashGenerator.GenerateMD5Hash(System.String)">
            <summary>
            Generates salted MD5 hash of string.
            </summary>
            <param name="contentString">String for hashing.</param>
            <returns>MD5 hash of string with salt.</returns>
        </member>
        <member name="M:Terrasoft.Core.Hash.ISaltedHashGenerator.GenerateMD5Hash(System.Byte[])">
            <summary>
            Generates salted MD5 hash of byte array.
            </summary>
            <param name="contentBytes">Byte array for hashing.</param>
            <returns>MD5 hash of byte array with salt.</returns>
        </member>
        <member name="T:Terrasoft.Core.HierarchySchemaInfo">
            <summary>
            Class represents data of the schema hierarchy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.HierarchySchemaInfo.#ctor(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.HierarchySchemaInfo"/> with the specified schema list.
            </summary>
            <param name="schemas">List of schemas.</param>
        </member>
        <member name="F:Terrasoft.Core.HierarchySchemaInfo._ids">
            <summary>
            Gets list of schema Ids.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.HierarchySchemaInfo._uids">
            <summary>
            Gets list of schema UIds.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IAppInfo">
            <summary>
            Provides properties with information about application.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IAppInfo.WorkspaceId">
            <summary>
            Workspace Id.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.RemoveJob(System.String,System.String)">
            <summary>Removes target job from job group.</summary>
            <param name="jobName">Job name.</param>
            <param name="jobGroup">Job group name.</param>
            <returns><c>true</c>, if job <paramref name="jobName"/> succesfully removed from group 
            <paramref name="jobGroup"/>, else - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.CreateIntermediateTimerJob(System.String,System.String,System.String,System.String,System.String)">
            <summary>Creates job for intemediate business process timer element.</summary>
            <param name="jobName">Job name.</param>
            <param name="jobGroup">Job group name.</param>
            <param name="processElementUId">Process "Timer" element Id.</param>
            <param name="workspaceName">Workspace name for process context.</param>
            <param name="userName">User name for process context.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.ScheduleImmediateJob``1(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Plans a task for immediate one-time start of class.
            </summary>
            <typeparam name="T">Type of a task.</typeparam>
            <param name="jobGroup">The name of the group to which the task belongs.</param>
            <param name="workspaceName">Workspace in which class must be started.</param>
            <param name="userName">The user on whose behalf class will be started.</param>
            <param name="parameters">The parameters that will be passed to the class.</param>
            <param name="isSystemUser">Indicates system user.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.DoesJobExist(System.String,System.String)">
            <summary>Checks existance of job in target job group.</summary>
            <param name="jobName">Job name.</param>
            <param name="jobGroup">Job group name.</param>
            <returns><c>true</c>, if job <paramref name="jobName"/> exists in group
            <paramref name="jobGroup"/>, else - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.DoesJobGroupExist(System.String)">
            <summary>Checking the existence of jobs in a given group.</summary>
            <param name="jobGroup">Group name.</param>
            <returns><c>true</c>, if <paramref name="jobGroup"/> has jobs, elese - <c>false</c>.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="jobGroup"/> empty or <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.RemoveGroupJobs(System.String)">
            <summary>Remove all jobs in the specified group.</summary>
            <param name="jobGroup">Group name.</param>
            <exception cref="T:System.ArgumentException">If <paramref name="jobGroup"/> empty or <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.CreateClassJob(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Creates the task for class execution.
            </summary>
            <param name="className">Class name.</param>
            <param name="jobGroup">The name of the group to which the task belongs.</param>
            <param name="workspaceName">Workspace in which class must be started.</param>
            <param name="userName">The user on whose behalf class will be started.</param>
            <param name="parameters">The parameters that will be passed to the class.</param>
            <param name="isSystemUser">Indicates system user.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.CreateClassJob``1(System.String,System.String,Terrasoft.Core.UserConnection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Creates the task for class execution.
            </summary>
            <param name="jobName">The name of the task.</param>
            <param name="jobGroupName">The name of the group to which the task belongs.</param>
            <param name="userConnection"></param>
            <param name="parameters">The parameters that will be passed to the class.</param>
            <param name="isSystemUser">Indicates system user.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.CreateProcessJob(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Creates the task for process execution.
            </summary>
            <param name="jobName">Job name.</param>
            <param name="processName">Process name.</param>
            <param name="jobGroup">The name of the group to which the task belongs.</param>
            <param name="workspaceName">Workspace in which class must be started.</param>
            <param name="userName">The user on whose behalf class will be started.</param>
            <param name="parameters">The parameters that will be passed to the class.</param>
            <param name="isSystemUser">Indicates system user.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.FindScheduler(System.String)">
            <summary>
            Returns an instance of the scheduler with the specified name.
            </summary>
            <param name="schedulerName">Scheduler name.</param>
            <returns>Instance of <see cref="T:Quartz.IScheduler"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.ScheduleImmediateProcessJob(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            Plans a task for immediate one-time start of process.
            </summary>
            <param name="jobName">Job name.</param>
            <param name="processName">Process name.</param>
            <param name="jobGroup">The name of the group to which the task belongs.</param>
            <param name="workspaceName">Workspace in which class must be started.</param>
            <param name="userName">The user on whose behalf class will be started.</param>
            <param name="parameters">The parameters that will be passed to the class.</param>
            <param name="isSystemUser">Indicates system user.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.ScheduleMinutelyJob``1(System.String,System.String,System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            A schedule that is used to fire a Job and repeat it at a minutely interval.
            </summary>
            <typeparam name="T">Type of a task.</typeparam>
            <param name="jobGroup">The name of the group to which the task belongs.</param>
            <param name="workspaceName">Workspace in which job must be started.</param>
            <param name="userName">The user on whose behalf class will be started.</param>
            <param name="periodInMinutes">Specify an interval in the minutes that the produced job will repeat at.
            </param>
            <param name="parameters">The parameters that will be passed to the class.</param>
            <param name="isSystemUser">System user flag. If <c>true</c>, Job will run on behalf of the user obtained
            from <c>"System operations user"</c> system setting.</param>
        </member>
        <member name="M:Terrasoft.Core.IAppSchedulerWraper.ScheduleMinutelyJob(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
            <summary>
            A schedule that is used to fire a Job and repeat it at a minutely interval.
            </summary>
            <param name="jobName">Job name.</param>
            <param name="jobGroup">The name of the group to which the task belongs.</param>
            <param name="processName">Process name.</param>
            <param name="workspaceName">Workspace in which job must be started.</param>
            <param name="userName">The user on whose behalf process will be started.</param>
            <param name="periodInMinutes">Specify an interval in the minutes that the produced job will repeat at.
            </param>
            <param name="parameters">The parameters that will be passed to the process.</param>
            <param name="isSystemUser">System user flag. If <c>true</c>, Job will run on behalf of the user obtained
            from <c>"System operations user"</c> system setting.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">In case if <c>null</c> or empty string passed as value of
            parameter <paramref name="jobName"/>, <paramref name="jobGroup"/>, <paramref name="processName"/>,
            <paramref name="workspaceName"/>, <paramref name="userName"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">In case if value of parameter
            <paramref name="periodInMinutes"/> less or equal 0.</exception>
        </member>
        <member name="T:Terrasoft.Core.IAssemblyResolveListenerInstaller">
            <summary>
            Used to attach and detach assembly resolve listener delegate into current runtime.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IAssemblyResolveListenerInstaller.Install(System.Func{System.String,System.Reflection.Assembly})">
            <summary>
            Installs assembly resolve listener delegate into current runtime.
            </summary>
            <param name="resolveFunc">Assembly resolve listener delegate.</param>
        </member>
        <member name="T:Terrasoft.Core.IAssemblyResolver">
            <summary>
            Provides assemblies that runtime can't resolve by itself.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IAssemblyResolver.Install">
            <summary>
            Initializes custom assembly resolution mechanism.
            </summary>
            <returns>Instance that uninstalls custom assembly resolution mechanism when it's disposed.</returns>
        </member>
        <member name="T:Terrasoft.Core.IConfigurationRuntimeDirectoryProvider">
            <summary>
            Provides methods for getting configuration runtime directory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IConfigurationRuntimeDirectoryProvider.GetConfigurationRuntimeDirectory">
            <summary>
            Returns a configuration runtime directory.
            </summary>
            <returns>Configuration runtime directory.</returns>
        </member>
        <member name="T:Terrasoft.Core.ICurrentUserInfo">
            <summary>
            Provides information about current user.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ICurrentUserInfo.UserId">
            <summary>
            Current user Id.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IDateTimeProvider">
            <summary>
            Provides methods to work with date and time.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IDateTimeProvider.UtcNow">
            <summary>
            Gets a <see cref="T:System.DateTime"/> instance that is set to the current date and time,
            expressed as the Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IDateTimeProvider.ToDateTime(System.TimeSpan)">
            <summary>
            Returns <see cref="T:System.DateTime"/> instance that is set to the <paramref name="time"/> for today.
            </summary>
            <param name="time">Time of the day.</param>
        </member>
        <member name="T:Terrasoft.Core.IDistributedLock">
            <summary>
            Provides synchronization mechanism between nodes in a distributed environment.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Terrasoft.Core.IDistributedLock.TryLock(System.String,System.TimeSpan)">
            <summary>
            Tries to acquire lock synchronously.
            </summary>
            <param name="key">The key of the lock.</param>
            <param name="timeout">How long to wait before giving up on acquiring the lock.</param>
            <returns>A <see cref="T:System.IDisposable"/> "handle" which can be used to release the lock.</returns>
        </member>
        <member name="T:Terrasoft.Core.IImageDecorator">
            <summary>
            Provides methods for creating client image descriptors.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IImageDecorator.GetImageDescriptor(Terrasoft.Core.ImageListSchemaItem,System.String,System.Globalization.CultureInfo)">
            <summary>
            Returns client descriptor for specified image using specified culture and schema name.
            </summary>
            <param name="image">Image.</param>
            <param name="schemaName">Schema name.</param>
            <param name="culture">Culture.</param>
            <returns>Client descriptor for specified image.</returns>
        </member>
        <member name="T:Terrasoft.Core.IInternalProcessEngine">
            <summary>
            <see cref="T:Terrasoft.Core.IProcessEngine"/> extended with internal API.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IInternalProcessEngine.InteractionManager">
            <summary>
            Process interaction manager.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ImageAPI.ImageAPI.SaveThumbnail(System.Guid,System.Int32,System.Int32,System.Drawing.Imaging.ImageFormat,System.Int64)">
            <summary>
            Saves a small copy of the image.
            </summary>
            <param name="id">Id of the record in the table SysImage.</param>
            <param name="width">The width of the thumbnail.</param>
            <param name="height">The height of the thumbnail.</param>
            <param name="imageFormat">Image format (JPEG, PNG, BMP, etc.).</param>
            <param name="quality">The quality of the saved image in percentage terms.</param>
        </member>
        <member name="T:Terrasoft.Core.ImageAPI.ImageData">
            <summary>
            Represents data of the image.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ImageAPI.ImageData.FileName">
            <summary>
            Gets or sets name of the file.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ImageAPI.ImageData.MimeType">
            <summary>
            Gets or sets mime type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ImageAPI.ImageData.Stream">
            <summary>
            Gets or sets stream value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ImageAPI.ImageData.PreviewStream">
            <summary>
            Gets or sets stream value is used to preview image.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ImageAPI.ImageData.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.ImageAPI.ImageData.Dispose">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.ImageListSchema.BaseSchemaUId">
            <summary>
            ########## ############# ####### #####.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManager">
            <summary>
            ############# ###### # ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManager.Name">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManager.Provider">
            <summary>
            #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManager.ItemCount">
            <summary>
            ########## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager.Initialize(Terrasoft.Core.ManagerProvider,Terrasoft.Core.ManagerProviderConfigurationElement)">
            <summary>
            ############## ########, ######### ######## ######### ######### # ########## ################# #####.
            </summary>
            <param name="provider">######### #########.</param>
            <param name="configuration">########## ################# #####.</param>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindItemByUId(System.Guid)">
            <summary>
            ############ ##### ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## ######## #########.</param>
            <returns>
            ####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ########## ############### <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItemByUId(System.Guid)">
            <summary>
            ########## ####### ######### # ######## ###############.
            </summary>
            <param name="uid">########## ############# ######## #########.</param>
            <returns>
            ####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ########## ############### <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItemByRealUId(System.Guid)">
            <summary>
            ########## ####### ######### ### ######### ########### ############## ########## #####.
            </summary>
            <param name="itemUId">########## ############# ########## #####.</param>
            <returns>
            ####### ######### ### ########## ##### # ########## ############### <paramref name = "itemUId"/>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindItemByName(System.String)">
            <summary>
            ############ ##### ######## ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItemByName(System.String)">
            <summary>
            ########## ####### ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindInstanceByUId(System.Guid)">
            <summary>
            ############ ##### ########## ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetInstanceByUId(System.Guid)">
            <summary>
            ########## ######### ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.FindInstanceByName(System.String)">
            <summary>
            ############ ##### ########## ######## ######### # ######## ######.
            </summary>
            <param name="name">### ######## ########## ######## #########.</param>
            <returns>######### ######## ######### # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetInstanceByName(System.String)">
            <summary>
            ########## ######### ######## ######### # ######## ######.
            </summary>
            <param name="name">### ########## ######## ######### # ###### <paramref name="name"/>.</param>
            <returns>######### ######## ######### # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItems">
            <summary>
            ########## ############ ######### #########.
            </summary>
            <returns>############ ######### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.GetItems(System.Predicate{Terrasoft.Core.IManagerItem})">
            <summary>
            ########## ############ ######### #########, ####### ############# ######## #########.
            </summary>
            <param name="match">########, ####### ###### ############### ############ ######## ############.</param>
            <returns>############ ######### #########, ####### ############# ######### <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManager.Clear">
            <summary>
            ####### ### ######## ## ######### ######### #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManager`2">
            <summary>
            ################# ##### ########## <see cref="T:Terrasoft.Core.IManager"/>.
            </summary>
            <typeparam name="TItem">### ######## #########</typeparam>
            <typeparam name="TInstance">######### ######## ######### ################ ####.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindItemByUId(System.Guid)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.FindItemByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetItemByUId(System.Guid)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.GetItemByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindItemByName(System.String)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.FindItemByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetItemByName(System.String)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.GetItemByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindInstanceByUId(System.Guid)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.FindInstanceByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetInstanceByUId(System.Guid)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.GetInstanceByUId(System.Guid)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.FindInstanceByName(System.String)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.FindInstanceByName(System.String)"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManager`2.GetInstanceByName(System.String)">
            <summary>
            ######### ###### <see cref="M:Terrasoft.Core.IManager.GetInstanceByName(System.String)"/>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManagerItem">
            <summary>
            ############# ######## ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.UId">
            <summary>
            ########## ############# ######## #########.
            </summary>
            <remarks>
            #### ##### ######## ########, ## #### <see cref="P:Terrasoft.Core.IManagerItem.UId"/> ##### #### <see cref="P:Terrasoft.Core.IManagerItem.RealUId"/> ############
            "#########" #####, ##### #### <see cref="P:Terrasoft.Core.IManagerItem.UId"/> ##### ######## ######## #### <see cref="P:Terrasoft.Core.IManagerItem.RealUId"/>.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.RealUId">
            <summary>
            ########## ############# ############ ######## #########.
            </summary>
            <remarks>
            #### ####### ## ######## ###########, ######## ##### ########### ############## ##### ########.
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Name">
            <summary>
            ### ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Caption">
            <summary>
            ######### ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Instance">
            <summary>
            ######### ######## #########. #### ###### ## ######### ######## ######### ##### <c>null</c>, ############
            ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.SafeInstance">
            <summary>
            ########## ######### ######## #########. #### ###### ## ######### ######## ######### ##### <c>null</c>,
            ############ <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem.Manager">
            <summary>
            ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManagerItem`1">
            <summary>
            ############# ######## ######## ######### ######### ####.
            </summary>
            <typeparam name="TInstance">##### #####.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem`1.Instance">
            <summary>
            ######### ######## ######### ######## ####. #### ###### ## ######### ######## ######### ##### <c>null</c>,
            ############ ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItem`1.SafeInstance">
            <summary>
            ########## ######### ######## ######### ######## ####. #### ###### ## ######### ######## ######### #####
            <c>null</c>, ############ <c>null</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManagerItemCollection`1">
            <summary>
            ######### ######### #########.
            </summary>
            <typeparam name="TItem">##### ###.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.IManagerItemCollection`1.ItemCount">
            <summary>
            ########## ######### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetItems">
            <summary>
            ########## ############ ######### #########.
            </summary>
            <returns>############ ######### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetItems(System.Predicate{`0})">
            <summary>
            ########## ############ ######### #########, ####### ############# ######## #########.
            </summary>
            <param name="match">########, ####### ###### ############### ############ ######## #########.</param>
            <returns>
            ############ ######### #########, ####### ############# ######### <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.FindByUId(System.Guid)">
            <summary>
            Searches collection element of the current type by given identifier.
            </summary>
            <param name="uid">Unique identifier of the collection element.</param>
            <returns> Collection element of the current type with unique identifier <paramref name="uid"/>.
            If element with the <paramref name="uid"/> unique identifier not found, 
            the default value for the current element type will be returned.</returns>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetByUId(System.Guid)">
            <summary>
            ########## ####### ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## ######## #########.</param>
            <returns>####### ######### # ########## ############### <paramref name="uid"/>. #### ####### # ##########
            ############### <paramref name="uid"/> ## ######, ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ####### ######### # ########## ###############
            <paramref name="uid"/> ## ######.</exception>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.FindByName(System.String)">
            <summary>
            Searches collection element of the current type by given name.
            </summary>
            <param name="name">Name of the collection element.</param>
            <returns>Collection element of the current type with name <paramref name="name"/>.
            If element with the <paramref name="name"/> name not found,
            the default value for the current element type will be returned.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Rises if the value of the <paramref name="name"/>
            argument is empty or is <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.GetByName(System.String)">
            <summary>
            ########## ####### ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### # ###### <paramref name="name"/>. #### ####### ######### # ######
            <paramref name="name"/> ## ######, ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### # ###### <paramref name="name"/> ## ######.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.RemoveItemByUId(System.Guid)">
            <summary>
            ####### ####### ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## #########, ####### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.RemoveItemByName(System.String)">
            <summary>
            ####### ####### ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########, ####### ########## #######.</param>
        </member>
        <member name="M:Terrasoft.Core.IManagerItemCollection`1.Clear">
            <summary>
            ####### ### ######## #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IManagerItemInstance">
            <summary>
            ############# ######## ########## ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItemInstance.ManagerItem">
            <summary>
            ####### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IManagerItemInstance.Manager">
            <summary>
            ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IMetaDataSerializer">
            <summary>
            ######### ############# ########## ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.TextWriter)">
            <summary>
            ########### ########## ##### <paramref name = "schema"/>
            # ####### <paramref name = "textWriter"/>.
            </summary>
            <param name="schema">########## #####.</param>
            <param name="textWriter">######### <see cref = "T:System.IO.TextWriter"/>, # ####### ######## ###########
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.Stream)">
            <summary>
            ########### ########## ##### <paramref name = "schema"/> # ##### <paramref name = "stream"/>.
            </summary>
            <param name="schema">########## #####.</param>
            <param name="stream">#####.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.TextWriter)">
            <summary>
            ########### ########## ###### #### <paramref name = "schemaList"/>
            # ####### <paramref name = "textWriter"/>.
            </summary>
            <param name="schemaList">###### ########## #### ### ############.</param>
            <param name="textWriter">######### <see cref = "T:System.IO.TextWriter"/>, # ####### ######## ###########
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.Stream)">
            <summary>
            ########### ########## ###### #### <paramref name = "schemaList"/> # ##### <paramref name = "stream"/>.
            </summary>
            <param name="schemaList">###### ########## #### ### ############.</param>
            <param name="stream">#####.</param>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            ############# ########## ###### #### # ####### <paramref name = "input"/>.
            </summary>
            <param name="input">######### <see cref="T:System.IO.TextReader"/>, # ####### ######## ###########
            ##############.</param>
            <returns>###### ################# ######## ######### ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.IMetaDataSerializer.Deserialize(System.IO.Stream)">
            <summary>
            ############# ########## ###### #### ## ###### <paramref name = "input"/>.
            </summary>
            <param name="input">#####.</param>
            <returns>###### ################# ######## ######### ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.IMobileUtilities.ClearMobileManifests">
            <summary>
            Clear mobile manifest.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IMobileUtilities.ClearMobileClientUnitSchemaBodiesCache">
            <summary>
            Clear mobile client unit schema bodies cache.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.InMemoryPubSubServer">
            <summary>
            <see cref="T:Terrasoft.Common.IPubSubServer"/> implementation which works without extra servers in local memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.InMemoryPubSubServer.#ctor(Common.Logging.ILog)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.InMemoryPubSubServer"/>.
            </summary>
            <param name="logger">Logger instance.</param>
        </member>
        <member name="M:Terrasoft.Core.InMemoryPubSubServer.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.InMemoryPubSubServer"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.InMemoryPubSubServer.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.InMemoryPubSubServer.Publish(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.InMemoryPubSubServer.Subscribe(System.String,System.Action{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.UserConnection">
            <summary>
            Gets or sets the user connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.ProcessSchemaManager">
            <summary>
            Gets the schema manager, that works with <see cref="T:Terrasoft.Core.Process.ProcessSchema"/> items.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.DcmSchemaManager">
            <summary>
            Gets the schema manager, that works with <see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/> items.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.EntitySchemaManager">
            <summary>
            Gets the schema manager, that works with <see cref="T:Terrasoft.Core.Entities.EntitySchema"/> items.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.MaxLoopCount">
            <summary>
            Gets maximum number of process item repetitions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.ProcessActivityStatus">
            <summary>
            Gets a list of key/value pairs, where key is the state of activity,
            and the value is the state Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.SysEntityPrcStartEvents">
            <summary>
            Gets a list of key/value pairs, where key is the entity schema Id
            and value is the list of process schema listeners for entity schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.Configuration.ProcessSchemaListener" />
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.ProcessExecutor">
            <summary>
            Gets the process executor <see cref="T:Terrasoft.Core.Process.IProcessExecutor"/>.
            </summary>
            <value>
            The process executor.
            </value>
        </member>
        <member name="P:Terrasoft.Core.ProcessEngine.ProcessListenersColumnName">
            <summary>
            Gets the name for the "Active processes" column.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.Initialize(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes the current instance.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.SetProcessPropertiesData(Terrasoft.Core.Process.Process)">
            <summary>
            Puts a process in 
            </summary>
            <param name="process"></param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.SetProcess(Terrasoft.Core.Process.Process)">
            <summary>
            Sets process in data store.
            </summary>
            <param name="process">Process instance.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RemoveCurrentProcess(System.String)">
            <summary>
            Removes process from data store.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessFromDBByUId(System.Guid)">
            <summary>
            Returns process data.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Configuration.SysProcessData"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.FindProcessByUId(System.String,System.Boolean)">
            <summary>
            Finds the process instance by unique identifier.
            </summary>
            <param name="processUId">The process unique identifier.</param>
            <param name="findInDB">if set to <c>true</c> also find process instance in DB.</param>
            <returns>The process instance or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.FindProcessByUId(System.String)">
            <summary>
            Finds the process instance by unique identifier in memory cache only.
            </summary>
            <param name="processUId">The process unique identifier.</param>
            <returns>The process instance or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessByUId(System.String,System.Boolean)">
            <summary>
            Gets the process by unique identifier.
            </summary>
            <param name="processUId">The process unique identifier.</param>
            <param name="findInDB">if set to <c>true</c> also find process instance in DB.</param>
            <returns>The process instance.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">If the process instance not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessByUId(System.String)">
            <summary>
            Gets the process by unique identifier in memory cache only.
            </summary>
            <param name="processUId">The process unique identifier.</param>
            <returns>The process instance.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">If the process instance not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.FindProcessPropertiesDataByUId(System.String)">
            <summary>
            Finds the process properties data by process unique identifier.
            </summary>
            <param name="processUId">The process unique identifier.</param>
            <returns>The list of key/value pairs, where key is the process property name
            and value is the process property value. Returns <c>null</c> if properties not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RemoveProcessListener(System.Guid,System.Guid,System.Guid,Terrasoft.Core.Entities.EntityChangeType,System.Nullable{System.Guid})">
            <summary>
            Removes the process listener for specified entity.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entitySchemaUId">The entity schema identifier.</param>
            <param name="processElementUId">The process element identifier.</param>
            <param name="entityChangeType">Type of the entity change.</param>
            <param name="workspaceId">The workspace identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RemoveActivityProcessListener(System.Guid,System.Guid,System.Guid)">
            <summary>
            Removes the process listener for specified activity.
            </summary>
            <param name="activityId">The activity primary column value.</param>
            <param name="processElUId">The process element identifier.</param>
            <param name="activityStatusId">The activity status identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.CompleteExecuting(System.Guid,System.Object[])">
            <summary>
            Completes executing the process element.
            </summary>
            <param name="processElementUId">Unique identifier of the process element.</param>
            <param name="parameters">Array of the arguments.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.ExecuteProcessElementByUId(System.Guid,System.Object[])">
            <summary>
            Executes the process element.
            </summary>
            <param name="processElementId">Identifier of the process element.</param>
            <param name="arguments">Array of the arguments.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.FindProcessFlowElementByUId(System.Guid)">
            <summary>
            Finds the process flow element by it's unique identifier.
            </summary>
            <param name="processElementUId">The process element unique identifier.</param>
            <returns>Found process flow element.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.FindProcessByProcessElementUId(System.Guid)">
            <summary>
            Finds the process by UId of the process element.
            </summary>
            <param name="processElementUId">The UId of the process element.</param>
            <returns>Found process.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessByElementUId(System.Guid)">
            <summary>
            Gets the process by the process element identifier.
            </summary>
            <param name="elementUId">The identifier of the process element.</param>
            <returns>Found process.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException"></exception>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.LinkProcessToEntity(Terrasoft.Core.Process.Process,System.Guid,System.Guid)">
            <summary>
            Connects the entity to the specified process.
            </summary>
            <param name="process">The process.</param>
            <param name="entitySchemaUId">The UId of the entity schema.</param>
            <param name="entityId">The Id of the entity.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetIsProcessLinkedToEntity(Terrasoft.Core.Process.Process,System.Guid,System.Guid)">
            <summary>
            Determines whether the specified process is connected to entity.
            </summary>
            <param name="process">Process instance.</param>
            <param name="entitySchemaUId">The entity schema unique identifier.</param>
            <param name="entityId">The entity primary column value.</param>
            <returns><c>true</c> if process is connected to entity, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessListeners(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.Entity,Terrasoft.Core.Entities.EntityChangeType)">
            <summary>
            Gets list of process listeners.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="entity">Instance of the <see cref="T:Terrasoft.Core.Entities.Entity"/> type.</param>
            <param name="changeType">Type of entity modification.</param>
            <returns>List of instances of the <see cref="T:Terrasoft.Core.Configuration.ProcessListener"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessListeners(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.Entity,System.Guid,Terrasoft.Core.Entities.EntityChangeType,System.Boolean)">
            <summary>
            Gets list of process listeners. 
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="entity">Instance of the <see cref="T:Terrasoft.Core.Entities.Entity"/> type.</param>
            <param name="entityId">Entity identifier.</param>
            <param name="changeType">Entity change type.</param>
            <param name="checkIsColumnChanged">Flag,
            that indicates when to check chenged columns condition.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetProcessSchemaListeners(Terrasoft.Core.Entities.Entity,Terrasoft.Core.Entities.EntityChangeType)">
            <summary>
            Gets list of process signals.
            </summary>
            <param name="entity">Instance of the <see cref="T:Terrasoft.Core.Entities.Entity"/> type.</param>
            <param name="changeType">Type of entity modification.</param>
            <returns>List of instances of the <see cref="T:Terrasoft.Core.Configuration.ProcessListener"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.ContinueExecuting(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.Entity,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Continues executing process elements.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="entity">Instance of the <see cref="T:Terrasoft.Core.Entities.Entity"/> type.</param>
            <param name="processListeners">List of process listeners.</param>
            <returns>List of instances of the <see cref="T:Terrasoft.Core.Process.ProcessDescriptor"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RunProcesses(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.Entity,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessSchemaListener})">
            <summary>
            Runs processes by signal event.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="entity">Instance of the <see cref="T:Terrasoft.Core.Entities.Entity"/> type.</param>
            <param name="listeners">List of process listeners.</param>
            <returns>List of instances of the <see cref="T:Terrasoft.Core.Process.ProcessDescriptor"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RunProcessByStartTimerEvent(System.Guid,System.Guid)">
            <summary>
            Runs process by start timer event.
            </summary>
            <param name="processSchemaId">Process schema Id.</param>
            <param name="processSchemaElementUId">Signal event element UId.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RunDcmProcess(System.Guid,Terrasoft.Core.DcmProcess.DcmSchema)">
            <summary>
            Runs the DCM process.
            </summary>
            <param name="entityPrimaryColumnValue">The entity primary column value.</param>
            <param name="dcmSchema">The DCM schema.</param>
            <returns>The executed process.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.CancelNotEnabledDcmProcess(System.Guid,System.Guid)">
            <summary>
            Cancel the DCM process which is disabled, but enabled DCM process for the given entity exists.
            </summary>
            <param name="entitySchemaUId">The entity schema unique identifier.</param>
            <param name="entityId">The entity primary column value.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.RunDcmProcesses(Terrasoft.Core.Entities.Entity,System.Collections.Generic.IList{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Runs the DCM processes if it was not ran by signal.
            </summary>
            <param name="entity">The changed entity.</param>
            <param name="listeners">The process listeners of the changed entity.</param>
            <returns>The executed process or <c>null</c> if process was already executed by signal or if there is no
            enabled <see cref="T:Terrasoft.Core.DcmProcess.DcmSchema"/> for the current entity.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.SynchronizeProcessNotification(Terrasoft.Core.Entities.IEntity,Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Synchronizes the process element notification for current activity.
            </summary>
            <param name="activity">The activity.</param>
            <param name="savingContext">The activity update execution context.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.CompleteExecuting(Terrasoft.Core.Process.ProcessActivity,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Object[])">
            <summary>
            Completes executing the process element.
            </summary>
            <param name="processElement">Process element.</param>
            <param name="parameterValues">Parameter values, where key is name of the parameter and value is
            parameter value.</param>
            <param name="arguments">Array of the arguments.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessDescriptor"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.ActualizeProcessSchemaListeners(Terrasoft.Core.Entities.Entity,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessSchemaListener})">
            <summary>
            Actualizes the list of process signals.
            </summary>
            <param name="entity">Instance of the <see cref="T:Terrasoft.Core.Entities.Entity"/> type.</param>
            <param name="listeners">List of process listeners.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.GetSchemaElement(System.Guid)">
            <summary>
            Returns schema element by the specified identifier.
            </summary>
            <param name="processElementId">Identifier of the process element.</param>
            <returns>Found schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngine.CompleteExecuting(System.Guid,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Object[])">
            <summary>
            Completes executing the process element.
            </summary>
            <param name="processElementId">Identifier of the process element.</param>
            <param name="parameterValues">Parameter values, where key is name of the parameter and value is
            parameter value.</param>
            <param name="arguments">Array of the arguments.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessDescriptor"/> type.</returns>
        </member>
        <member name="T:Terrasoft.Core.IProcessExecutionDataCollector">
            <summary>
            Provides api to collect process execution data published during current instance lifetime.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IProcessExecutionDataCollector.GetExecutionData">
            <summary>
            Returns process execution data published during current instance lifetime.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IProcessInteractionManager">
            <summary>
            Provides api to interact in process with user.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IProcessInteractionManager.SendExecutionData(System.Guid,System.String)">
            <summary>
            Sends process execution data to the client.
            </summary>
            <param name="userId">User identifier to send execution data to.</param>
            <param name="executionData">Execution data.</param>
        </member>
        <member name="M:Terrasoft.Core.IProcessInteractionManager.CollectExecutionData">
            <summary>
            Returns execution data collected during <see cref="M:Terrasoft.Core.IProcessInteractionManager.SendExecutionData(System.Guid,System.String)"/> calls.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IProcessMessage">
            <summary>
            Interface that describes the mandatory property for process message.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.IProcessMessage.MessageId">
            <summary>
            Message's Id.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.IProcessMessageStore">
            <summary>
            Provides methods for storing, removing and getting of Process actor's messages.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IProcessMessageStore.Register``1(``0)">
            <summary>
            Registers message in store.
            </summary>
            <param name="message">Message instance to store.</param>
            <typeparam name="T">Message type.</typeparam>
            <remarks>If message exists in store, does nothing.</remarks>
        </member>
        <member name="M:Terrasoft.Core.IProcessMessageStore.Remove``1(``0)">
            <summary>
            Removes message from store.
            </summary>
            <param name="message">Instance of <typeparamref name="T"/> message.</param>
        </member>
        <member name="M:Terrasoft.Core.IProcessMessageStore.GetMessages``1(System.TimeSpan)">
            <summary>
            Returns messages thas is older than threshold described by <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="olderThan">Threshold.</param>
            <typeparam name="T">Message type.</typeparam>
            <returns>List of <typeparamref name="T"/> messages.</returns>
        </member>
        <member name="T:Terrasoft.Core.ISchemaColumnsInfoDataReader">
            <summary>
            Provides functionality to getting information about schema columns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaColumnsInfoDataReader.GetDataTypeValue">
            <summary>
            Returns the data type value from data reader.
            </summary>
            <returns>Data type value.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaColumnsInfoDataReader.GetCharacterMaxLengthValue">
            <summary>
            Returns the character maximum length from data reader.
            </summary>
            <returns>Character maximum length.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaColumnsInfoDataReader.GetPrecisionValue">
            <summary>
            Returns the precision value from data reader.
            </summary>
            <returns>Precision value.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaColumnsInfoDataReader.GetSizeValue">
            <summary>
            Returns the size value from data reader.
            </summary>
            <returns>Size value.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaColumnsInfoDataReader.GetIsNullableValue">
            <summary>
            Determines whether the column is nullable.
            </summary>
            <returns><b>true</b> if the column is nullable, otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManager">
            <summary>
            Interface of the manager of schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.AppConnection">
            <summary>
            System connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.ItemName">
            <summary>
            Name of manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.ItemCaption">
            <summary>
            Caption of manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.ResourceManagerName">
            <summary>
            Name of resource manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManager.CompileDependencies">
            <summary>
            List of dependent managers.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemAdding">
            <summary>
            Occurs before adding the item to manager.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemAdded">
            <summary>
            Occurs after adding the item to manager.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemRemoving">
            <summary>
            Occurs before removing the item from manager.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemRemoved">
            <summary>
            Occurs after removing the item from manager.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemSaving">
            <summary>
            Occurs before saving the item.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.ISchemaManager.ItemSaved">
            <summary>
            Occurs after saving the item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Creates the manager of schema, using specified provider and information from configuration file.
            </summary>
            <param name="provider">Provider of schema manager.</param>
            <param name="configuration">Information from configuration file.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.AddSchema(System.Guid,System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString,System.Guid)">
            <summary>
            Adds schema with specified parameters to schema manager.
            </summary>
            <param name="uid">Unique identifier of schema.</param>
            <param name="name">Name of schema.</param>
            <param name="caption">Caption of schema.</param>
            <param name="description">Description of schema.</param>
            <param name="parentUId">Parent schema's identifier.</param>
            <returns>Item of manager that is contains adding schema with specified parameters.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.RemoveSchema(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Removes schema with specified id from manager.
            </summary>
            <param name="uid">Identifier of schema.</param>
            <param name="userConnection">User connection.</param>
            <returns>Identifier of record in SysSchemaInSolution for deleting schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.RemoveItemByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Removes item with specified identifier from current manager of schemas.
            </summary>
            <param name="uid">Identifier of removing item.</param>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Creates new schema with specified name and parent schema with flag
            of creating schema from metadata.
            </summary>
            <param name="name">Name of schema.</param>
            <param name="baseSchema">Item with parent schema.</param>
            <param name="userConnection">User connection.</param>
            <param name="fromMetaData">Flag of creating schema from metadata.</param>
            <returns>Item of manager with created schema.</returns>
            <remarks>Overriden method.</remarks>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Creates new schema with specified name, parent schema and flag of adding schema to list
            of editing items.
            </summary>
            <param name="name">Name of schema.</param>
            <param name="baseSchema">Item with parent schema.</param>
            <param name="userConnection">User connection.</param>
            <param name="uid">Identifier of schema.</param>
            <param name="addToDesignItems">####### ########## ##### # ###### ############# #########.</param>
            <returns>####### #########, ########## ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.CreateDesignSchema(Terrasoft.Core.UserConnection,System.Guid,System.Guid,System.Boolean)">
            <summary>
            Creates new schema with specified parent schema <paramref name="parentSchemaUId"/> and in
            specified package <paramref name="packageUId"/>.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="parentSchemaUId">Parent schema's UId.</param>
            <param name="packageUId">Package UId where schema is created.</param>
            <param name="extendParent">
            Flag that indicates if created schema will be extended or inherited from parent.
            </param>
            <returns>Item of manager with created schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.FillSourceCollection(System.Collections.ObjectModel.Collection{Terrasoft.Core.ISchemaManagerItem},System.Guid)">
            <summary>
            ######### # ########## ######### ######## #### ######## #####.
            </summary>
            <param name="compileCollection">#########, # ####### ########### ######## #### #####.</param>
            <param name="uid">############# #####, ######## #### ####### ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            ####### ######### ##### ## ####, ########## # ########## ######## #########. #### ### ##### ########
            ######### ## ###### # ######, ############ ##########.
            </summary>
            <param name="schemaManagerItem">####### #########, # ####### ###### #### ################### #####.</param>
            <param name="assembly">######, ####### ######## ### ########### #####.</param>
            <returns>#################### ######### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetDefSchemaUId">
            <summary>
            ########## ############# #####, ## ####### ########### ### ####### ##### ######### ####.
            </summary>
            <returns>############# #####, ## ####### ########### ### ####### ##### ######### ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GenerateItemUniqueName(System.String)">
            <summary>
            ########## ########## ### ######## ######### # ############## ######### ########.
            </summary>
            <param name="prefix">#######.</param>
            <returns>########## ### ######## ######### # ######### <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GenerateItemUniqueCaption(System.String)">
            <summary>
            ########## ########## ######### ######## ######### # ############## ######### ########.
            </summary>
            <param name="prefix">#######.</param>
            <returns>########## ######### ######## ######### # ######### <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ######## ########## ##### # ######## ###############.
            </summary>
            <param name="schemaUId">############# #####.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ########## ##### # ############### <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetReadableSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ######## ########## ##### # ######## ############### # #######, ####### ### ######.
            </summary>
            <param name="schemaId">############# #####, ########## ####### ##### ########.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ########## ##### # ############### <paramref name="schemaId"/> # #######,
            ####### ### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection)">
            <summary>
            ######## ########## ######## ##### # #######, ####### ### ######.
            </summary>
            <param name="schema">#####, ########## ####### ##### ########.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ########## ##### <paramref name="schema"/> # #######, ####### ### ######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Gets the metadata of the specified schema in a format that is easy to read.
            </summary>
            <param name="schema">The schema whose metadata is to be retrieved.</param>
            <param name="userConnection">User connection.</param>
            <param name="toLowerCamelCase">A characteristic of the generation of property names
            in the style of LowerCamelCase.</param>
            <returns> A thread containing schema metadata <paramref name = "schema" /> in a format that is readable.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetReadableSchemaMetaDataText(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection,System.Boolean,System.Boolean)">
            <summary>
            Gets the metadata text of the specified schema in a format that is easy to read.
            </summary>
            <param name="schema">The schema whose metadata is to be retrieved.</param>
            <param name="userConnection">User connection.</param>
            <param name="toLowerCamelCase">A characteristic of the generation of property names
            in the style of LowerCamelCase.</param>
            <param name="formatJson">A characteristic of the generation of property names
            in the style of indent formatted json.</param>
            <returns> A thread containing schema metadata <paramref name = "schema" /> in a format that is readable.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetProcessSchemaGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ######### ######## ##### #### #########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### #### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.SaveSchemaSources(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            ######### ######## #### ## ########## #########.
            </summary>
            <param name="sources">######### ######## #####, ####### ##### #########.</param>
            <returns>
            <c>true</c>, #### ### ######## #### ## ######### <paramref name="sources"/> ######### #######;
            <c>false</c> - #### #### ## #### ####### ######### ## ### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetSchemaSources(System.Guid,System.Guid,Terrasoft.Core.UserConnection,System.String@)">
            <summary>
            ######### ######## ##### ##### # ######## ###############.
            </summary>
            <param name="uid">############# #####, ######## #### ####### ##### ########.</param>
            <param name="schemaInSolutionUId">############# ###### # ####### SysSchemaInSolution.</param>
            <param name="userConnection">################ ###########.</param>
            <param name="errorMessage">######### ## ###### ### ######### ######## ##### #####.</param>
            <returns>######### ######## # ######### ###### ##### # ############### <paramref name="uid"/>.
            #### ### ######### ######## ##### ######### ######, ##### ######### <c>null</c>, # #
            ######### <paramref name="errorMessage"/> ##### ########## ######### ## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.InitializeItem(System.Guid)">
            <summary>
            ######### ############# ######## ######### # ######## ###############.
            </summary>
            <param name="itemUId">############# ######## #########, ####### ##### ###################.</param>
            <returns><c>true</c>, #### ####### ######### # ############### <paramref name="itemUId"/>
            ################## #######; ##### - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### # ######## ######### <paramref name="itemUId"/> ########
            ###### ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.FindDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ############ ##### ############## ######## ######### # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ######## ########.</param>
            <returns>############# ####### # ############### <paramref name="uid"/> ####
            <c>null</c>, #### ##### ####### ## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ########## ############# ####### # ######## ###############. #### ##### ####### ## ######, ############
            ##########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ############# ########.</param>
            <returns>############# ######## # ############### <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.SaveDesignedItemInSessionData(Terrasoft.Core.UserConnection,Terrasoft.Core.MetaSchema,System.Guid)">
            <summary>
            ########### # ######### # ###### ###### ######### ############## ######## # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="designedItem">############# ####### #########.
            </param>
            <param name="designedItemId">############# ############ ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.SaveDesignedItemFolderIdInSessionData(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            ######### # ###### ###### ########## ############# ########, # ####### ######## ############# #####
            ######## # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="designedItemId">############# ############## ########.
            </param>
            <param name="designedItemFolderId">############# ########, ####### ######## ############# ##### ######## #
            ############### <paramref name="designedItemId"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            ############# ########## ######## ######### ####.
            </summary>
            <param name="item">####### #########, # ####### ########## ############### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.GetHash">
            <summary>
            Returns the hash for this item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.IsInheritedFrom(System.Guid,System.Guid)">
            <summary>
            Returns flag that indicates if schema is inherited from specified parent schema.
            </summary>
            <param name="schemaUId">Schema identifier.</param>
            <param name="parentUId">Parent schema identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManager.CheckUserPropertyRights(Terrasoft.Core.UserConnection)">
            <summary>
            Check access for SysSchemaUserProperty operations.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerItem">
            <summary>
            Interface of schema manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.UserConnection">
            <summary>
            User connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.IsInstanceInitialized">
            <summary>
            Determines initialization status of schema manager item instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.TypeName">
            <summary>
            Name of schema item type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ManagerName">
            <summary>
            Manager name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ParentUId">
            <summary>
            Identifier of parent item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.UserId">
            <summary>
            Identifier of user.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.FolderId">
            <summary>
            Identifier of folder.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.IsCoreSchema">
            <summary>
            Determines if schema is a system one.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ReferenceSchemaUIds">
            <summary>
            List of schemas referenced by schema manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ExtraProperties">
            <summary>
            Additional properties collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.UserProperties">
            <summary>
            User properties collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Assembly">
            <summary>
            Assembly in which the type is declared.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.AssemblyRefCount">
            <summary>
            Number of assemblies referenced by schema item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Description">
            <summary>
            Description of schema manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.SysSchemaInSolutionId">
            <summary>
            Unique identifier of SysSchemaInSolution database table record bound to schema manager item instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ExtendParent">
            <summary>
            Extending or substitution indicator.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.PackageUId">
            <summary>
            Unique identifier of package in which schema manager item is declared.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.PackageName">
            <summary>
            Name of package in which schema manager item is declared.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.PackagePosition">
            <summary>
            Position of package in which schema manager item is declared.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Descriptor">
            <summary>
            Schema manager item descriptor.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.RealParentItemUId">
            <summary>
            Unique identifier of parent item of manager with UId of parent schema from creating.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.DenyExtending">
            <summary>
            Substitution prohibition.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ModifiedOn">
            <summary>
            Schema manager item modification date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.ResourceModifiedOn">
            <summary>
            Resource modification date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerItem.Checksum">
            <summary>
            Schema manager item checksum.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem.GetHash">
            <summary>
            Returns the hash for this item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem.Invalidate">
            <summary>
            Invalidates instance.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerItem`1">
            <summary>
            Typed interface of the item.
            </summary>
            <typeparam name="TSchemaManagerSchema">The class that is inherited from <see cref="T:Terrasoft.Core.Schema"/> and implements the 
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.ForceGetInstance">
            <summary>
            Returns schema instance. Initializes schema if it is not initialized.
            </summary>
            <returns>Instance of schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.Assign(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Sets properties of specified item instance to current one.
            </summary>
            <param name="source">Specified schema instance.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.Assign(`0)">
            <summary>
            Sets properties of schema to current item of manager.
            </summary>
            <param name="source">Schema manager item descriptor.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.AssignUserProperties(Terrasoft.Core.UserPropertyCollection)">
            <summary>
            Sets user properties from source collection.
            </summary>
            <param name="source">User properties source.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.DropInstance">
            <summary>
            Removes instance of schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.CloneShallow">
            <summary>
            Performs shallow cloning of current instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.SetPropertyValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the property value by instance expression.
            </summary>
            <typeparam name="TValue">The type of property to set.</typeparam>
            <param name="propertyExpression">Expression that locates property.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.GetPropertyValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the property value by instance expression.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="propertyExpression">Expression that locates property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerItem`1.FindPropertyValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Returns the property value by instance expression or <paramref name="defaultValue"/> if value not found.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="propertyExpression">Expression that locates property.</param>
            <param name="defaultValue">Default value.</param>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerProvider">
            <summary>
            Provides methods and properties to manage schema managers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerProvider.ManagerNames">
            <summary>
            Collection of schema manager names.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerProvider.GetManager(System.String)">
            <summary>
            Creates schema manager.
            </summary>
            <param name="managerName">Manager name.</param>
            <returns>Returns schema manager.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerProvider.RefreshManager(System.String)">
            <summary>
            Refreshes schema manager.
            </summary>
            <param name="managerName">Manager name.</param>
        </member>
        <member name="T:Terrasoft.Core.ISchemaManagerSchema`1">
            <summary>
            Typed intefrace of schema manager schemas.
            </summary>
            <typeparam name="TSchemaManagerSchema">Type which implements
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>
            and <see cref="T:Terrasoft.Core.IManagerItemInstance"/>interfaces.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.UId">
            <summary>
            Global unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.Name">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.IsCoreSchema">
            <summary>
            Attribute which identifies whether it is a system schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.Caption">
            <summary>
            Schema caption.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.Description">
            <summary>
            Schema description.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ParentSchemaUId">
            <summary>
            Parent schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ParentSchema">
            <summary>
            Parent schema instance reference.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ResourceManager">
            <summary>
            Resource manager instance reference.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaManagerSchema`1.ReferenceSchemaUIds">
            <summary>
            Schemas unique identifiers referenced by the current schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.InitializePrimaryInfo">
            <summary>
            Initializes schema main properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.SetDefInheritance">
            <summary>
            Sets the current schema as a parent for all schema elements that do not have parent identifier defined.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.AssignParentSchema(`0)">
            <summary>
            Assigns parent schema to the current schema.
            </summary>
            <param name="parentSchema">Parent schema.</param>
            <returns>
            <c>true</c>, if a parent schema was successfully assigned.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Initializes schema localizable values from the specified resource manager group.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.InitializeLocalizableValues(System.String)">
            <summary>
            Initializes schema localizable values.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue})">
            <summary>
            Loads schema localizable values into specified collection.
            </summary>
            <param name="values">Collection to load localizable values to.</param>
        </member>
        <member name="M:Terrasoft.Core.ISchemaManagerSchema`1.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Loads schema localizable values into specified collection.
            </summary>
            <param name="values">Collection to load localizable values to.</param>
            <param name="includeInherited">Indicates whether to include inherited properties.</param>
        </member>
        <member name="T:Terrasoft.Core.ISchemaMethod">
            <summary>
            ######### ##### ######
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.Body">
            <summary>
            #### ######
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.UseFlowEngineScriptVersion">
            <summary>
            #######, ########### ## ############# ###### ###### #########
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.Name">
            <summary>
            ### ######
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ISchemaMethod.UId">
            <summary>
            ########## #############
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISchemaUniqueNameGenerator">
            <summary>
            Provides methods for creation of unique names and captions for schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISchemaUniqueNameGenerator.CreateCaption(System.String,System.String,System.Guid)">
            <summary>
            Creates unique caption for schema that consists of <paramref name="prefix"/> and counter number 
            with following format: "&lt;prefix&gt; &lt;counter&gt;".
            This method takes into account current thread culture.
            </summary>
            <param name="prefix">Prefix used for caption creation.</param>
            <param name="managerName">Name of schema manager.</param>
            <param name="workspaceId">Workspace Id.</param>
            <returns>Created caption.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Thrown when either <paramref name="prefix"/>, 
            <paramref name="managerName"/> or <paramref name="workspaceId"/> is null or empty.</exception>
        </member>
        <member name="M:Terrasoft.Core.ISchemaUniqueNameGenerator.CreateName(System.String,System.String,System.Guid)">
            <summary>
            Creates unique name for schema that consists of <paramref name="prefix"/> and counter number 
            with following format: "&lt;prefix&gt;&lt;counter&gt;".
            </summary>
            <param name="prefix">Prefix used for name creation.</param>
            <param name="managerName">Name of schema manager.</param>
            <param name="workspaceId">Workspace Id.</param>
            <returns>Created name.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Thrown when either <paramref name="prefix"/>, 
            <paramref name="managerName"/> or <paramref name="workspaceId"/> is null or empty.</exception>
        </member>
        <member name="T:Terrasoft.Core.ISecurePathUtilities">
            <summary>
            Provides utility methods for secure representation of path strings.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISecurePathUtilities.RemoveLocalPath(System.String)">
            <summary>
            Removes local path from given message except the last part of the path.
            </summary>
            <param name="message">Message text.</param>
            <returns>Message text without full local path.</returns>
        </member>
        <member name="T:Terrasoft.Core.ISecurityUtilities">
            <summary>
            Provides methods for secure work with SVN pathes. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISecurityUtilities.RemoveLocalPath(System.String)">
            <summary>
            Removes local path to file or directory if FileDesign mode is disabled.
            </summary>
            <param name="stringWithLocalPath">Full path to current to file or directory in filesystem.</param>
            <returns>Relative path to object if FileDesign mode is disabled, 
            or full path if FileDesign mode is enabled.</returns>
        </member>
        <member name="T:Terrasoft.Core.ITempDirectoryInfo">
            <summary>
            Provides information about application temporary directory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ITempDirectoryInfo.GetTempDirectoryPath">
            <summary>
            Returns path of the application temporary directory.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Terrasoft.Core.IUserConnection.RequestData">
            <summary>
            Request data store.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IUserConnection.SetServiceProvider(System.IServiceProvider)">
            <summary>
            Used to provide <see cref="T:System.IServiceProvider"/> instance that can be used to resolve services with request
            level lifetime.
            </summary>
            <param name="serviceProvider">Service provider.</param>
        </member>
        <member name="T:Terrasoft.Core.IUserConnectionRequired">
            <summary>
            Indicate that class needs <see cref="T:Terrasoft.Core.UserConnection"/> to be provided.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IUserConnectionRequired.SetUserConnection(Terrasoft.Core.UserConnection)">
            <summary>
            Sets the user connection.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="T:Terrasoft.Core.IWorkspaceManager">
            <summary>######### ### ############### ######## ############## ############ (workspace)</summary>
        </member>
        <member name="T:Terrasoft.Core.LessParser">
            <summary>
            The class for parse less to css.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LessParser.GetUserCultureDotlessConfiguration">
            <summary>
            Gets dotless configuration based on user culture.
            </summary>
            <returns>Dotless configuration.</returns>
        </member>
        <member name="M:Terrasoft.Core.LessParser.GetCss(System.String,dotless.Core.configuration.DotlessConfiguration)">
            <summary>
            Converts less to css by custom dotless configuration.
            </summary>
            <param name="less">Less source.</param>
            <param name="lessConfiguration">Dotless configuration for convertation.</param>
            <returns>Css.</returns>
        </member>
        <member name="M:Terrasoft.Core.LessParser.GetCss(System.String)">
            <summary>
            Converts less to css using dotless configuration based on user culture.
            </summary>
            <param name="less">Less source.</param>
            <returns>Css.</returns>
        </member>
        <member name="T:Terrasoft.Core.LicData">
            <summary>
            Provides properties of instance manager element.
            </summary>
            <seealso cref="T:Terrasoft.Core.IManagerItemInstance" />
        </member>
        <member name="P:Terrasoft.Core.LicData.ManagerItem">
            <summary>
            Manager instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicData.Manager">
            <summary>
            Manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicHelper.SspUseEntities">
            <summary>
            List of base entities to be available on SSP.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicHelper.SspCustomEntityCount">
            <summary>
            Count of custom entities to be available on SSP.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicHelper.IsSspAllowedSchemaCountNotValid">
            <summary>
            Indicates, that count of used entity schemas more than allowed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicHelper.IsSspTypedLicenseOperationExists">
            <summary>
            Indicates, that any new SSP operation exists in the license.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicHelper.IsEnabledTypedSspLicense">
            <summary>
            Indicates that new SSP license enabled.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetSchemaLicRights(System.String)">
            <summary>
            Returns list of licensing rights to schema.
            </summary>
            <param name="schemaName">Schema name.</param>
            <returns>Schema licensing rights collection of <see cref="T:SchemaOperationRightLevels"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetSchemaLicRights(System.String,System.Boolean)">
            <summary>
            Returns list of licensing rights to schema.
            </summary>
            <param name="schemaName">Schema name.</param>
            <param name="useDemoMode">Indicates if demo-mode flag should be used.</param>
            <returns>Schema licensing rights collection of <see cref="T:SchemaOperationRightLevels"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.ActualizeLicPackageOperations(System.String)">
            <summary>
            Actualizes list of available conditional operations for target licensing product.
            </summary>
            <param name="licPackageName">Licensing product name.</param>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.ActualizeLicPackageOperationsByNamePattern(System.String)">
            <summary>
            Actualizes list of available conditional operations for target licensing product.
            </summary>
            <param name="licPackageNamePattern">Licensing product key.</param>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.ActualizeLicPackagesOperations">
            <summary>
            Actualizes list of available conditional operations for all licensing products.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetLicPackageMaxConditionCount(System.String)">
            <summary>
            Returns maximum value of conditional license for the license package <paramref name="licPackageName"/>.
            </summary>
            <param name="licPackageName">Name of the license package.</param>
            <remarks>
            Returns -1, if license package wasn't found or doesn't contain conditional licenses.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetLicPackageCurrentConditionResult(System.String)">
            <summary>
            Returns actual result of conditional license check for the license package
            <paramref name="licPackageName"/>.
            </summary>
            <param name="licPackageName">License package name.</param>
            <remarks>
            Returns 0, if license package wasn't found or doesn't contain conditional licenses.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.LicHelper.GetLicPackageCurrentConditionDate(System.String)">
            <summary>
            Returns date and time (UTC) of conditional license check for the license package.
            </summary>
            <param name="licPackageName">License package name.</param>
            <remarks>
            Returns the minimum date, if license package wasn't found or doesn't contain conditional licenses.
            </remarks>
        </member>
        <member name="T:Terrasoft.Core.ILicManager">
            <summary>
            Defines methods and properties for the license manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ILicManager.CustomerId">
            <summary>
            Customer identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ILicManager.GetCustomerAccountId">
            <summary>
            Returns customer's account identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ILicManager.LoadLicense(System.IO.Stream)">
            <summary>
            Loads license.
            </summary>
            <param name="stream">Stream with license info.</param>
            <returns><c>true</c> if license loaded. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ILicManager.AddLicensesToActiveUsers(System.String,System.Guid)">
            <summary>
            Adds licensing package licenses to active users.
            </summary>
            <param name="licPackageName">Licensing package name.</param>
            <param name="currentUserId">Current user identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.LicManager">
            <summary>
            Represents class for the license manager.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicManager.#ctor(Terrasoft.Core.AppConnection)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.LicManager"/>.
            </summary>
            <param name="appConnection">Instance of specified
            <see cref="T:Terrasoft.Core.AppConnection"/>.</param>
        </member>
        <member name="P:Terrasoft.Core.LicManager.IsDemoMode">
            <summary>
            Indicates whether demo mode is enabled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicManager.ServerUniqueId">
            <summary>
            Database server unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.LicManager.CustomerId">
            <summary>
            Customer identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicManager.ClearAllUserLicenseCache">
            <summary>
            Clears all users license cache.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicManager.ActualizeIsDemoMode">
            <summary>
            Actualize demo mode state.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicManager.ClearUserLicenseCache(System.Guid)">
            <summary>
            Clears user license cache.
            </summary>
            <param name="userId">User identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.LicManager.DeleteLicenses(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Deletes all licenses.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="userName">Current user name.</param>
        </member>
        <member name="M:Terrasoft.Core.LicManager.CreateLicenseRequest(System.IO.Stream,System.String,System.String,System.String)">
            <summary>
            Save license request to stream.
            </summary>
            <param name="stream">Stream for saved license request.</param>
            <param name="url">Application url.</param>
            <param name="customerId">Customer identifier.</param>
            <param name="version">Application version.</param>
        </member>
        <member name="M:Terrasoft.Core.LicManager.GetCustomerAccountId">
            <summary>
            Returns customer's account identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.LicManager.LoadLicense(System.IO.Stream)">
            <summary>
            Loads license.
            </summary>
            <param name="stream">Stream with license info.</param>
            <returns><c>true</c> if license loaded. Otherwise returns <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Core.LicException">Thrown when either Licenses CustomerId, FileVersion or other element is not
            valid.</exception>
        </member>
        <member name="M:Terrasoft.Core.LicManager.AddUserLicense(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Adds user package license.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="userId">User identifier.</param>
            <param name="licPackageId">Licensing package identifier.</param>
            <returns><c>true</c>, if license was added. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.LicManager.AddLicensesToActiveUsers(System.String,System.Guid)">
            <summary>
            Adds licensing package licenses to active users.
            </summary>
            <param name="licPackageName">Licensing package name.</param>
            <param name="currentUserId">Current user identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.LicManager.DeleteUserLicense(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Deletes user package license.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="userId">User identifier.</param>
            <param name="licPackageId">Licensing package identifier.</param>
            <returns><c>true</c>, if license was added. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.LicManagerItem">
            <summary>
            License manager item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.LicManagerItemCollection">
            <summary>
            License manager item collection.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Manager`2">
            <summary>
            ########.
            </summary>
            <typeparam name="TItem">#####, ########### ######### <see cref="T:Terrasoft.Core.IManagerItem"/>.</typeparam>
            <typeparam name="TInstance">##### ###.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.Items">
            <summary>
            ######### ######### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.AllItems">
            <summary>
            ######### ######### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.Name">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.Provider">
            <summary>
            #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Manager`2.ItemCount">
            <summary>
            ########## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.CreateItemCollection">
            <summary>
            ####### ######### ######### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/>.
            </summary>
            <returns>######### ######### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.InitializeInstance(`0)">
            <summary>
            ####### ######### #########	######## #########.
            </summary>
            <param name="item">####### #########, ######### ######## #########.</param>
            <returns>######### ######## ######### <paramref name="item"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.InitializeSafeInstance(`0)">
            <summary>
            ####### ########## ######### ######### ######## #########.
            </summary>
            <param name="item">####### #########, ########## ######### ######## #########.</param>
            <returns>
            ########## ######### ######## ######### <paramref name="item"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.InitializeAllItemCollection(Terrasoft.Core.IManagerItemCollection{Terrasoft.Core.IManagerItem})">
            <summary>
            ############## ######### ######### #########.
            </summary>
            <param name="items">######### ######### ######### ### #############.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.ClearItems(System.Object,System.EventArgs)">
            <summary>
            ####### ### ######## # ######### ######### #########.
            </summary>
            <param name="sender">###### ## ######, ############## ########.</param>
            <param name="eventArgs">######### ####### ######## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Initialize(Terrasoft.Core.ManagerProvider,Terrasoft.Core.ManagerProviderConfigurationElement)">
            <summary>
            ############## ######## ####, ######### ######## ######### ######### # ########## ################# #####.
            </summary>
            <param name="provider">######### #########.</param>
            <param name="configuration">########## ################# #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItem(System.Predicate{`0})">
            <summary>
            Searches manager item by match predicate.
            </summary>
            <param name="match">Predicate, which contains the search condition.</param>
            <returns>Found manager item.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItemByUId(System.Guid)">
            <summary>
            ############ ##### ######## ######### ######## #### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## ######## #########.</param>
            <returns>####### ######### ######## #### # ########## ############### <paramref name="uid"/>. ####
            ####### # ########## ############### <paramref name="uid"/> ## ######, ############ ######## ## #########
            ### ######## #### ######## #########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindItemByUId(System.Guid)">
            <summary>
            ############ ##### ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## ######## #########.</param>
            <returns>
            ####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ########## ############### <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItemByUId(System.Guid)">
            <summary>
            ########## ####### ######### # ######## ###############.
            </summary>
            <param name="uid">########## ############# ######## #########.</param>
            <returns>
            ####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ########## ############### <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItemByUId(System.Guid)">
            <summary>
            ########## ####### ######### # ######## ###############.
            </summary>
            <param name="uid">########## ############# ######## #########.</param>
            <returns>
            ####### ######### ######## #### # ########## ############### <paramref name="uid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItemByRealUId(System.Guid)">
            <summary>
            ########## ####### ######### ### ######### ########### ############## ########## #####.
            </summary>
            <param name="itemUId">########## ############# ########## #####.</param>
            <returns>
            ####### ######### ### ########## ##### # ########## ############### <paramref name = "itemUId"/>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItemByName(System.String)">
            <summary>
            ############ ##### ######## ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### ######## #### # ###### <paramref name="name"/>. #### ####### # ######
            <paramref name="name"/> ## ######, ############ ######## ## ######### ### ######## #### ######## #########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindItemByName(System.String)">
            <summary>
            ############ ##### ######## ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItemByName(System.String)">
            <summary>
            ########## ####### ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItemByName(System.String)">
            <summary>
            ########## ####### ######### # ######## ######.
            </summary>
            <param name="name">### ######## #########.</param>
            <returns>####### ######### ############## #### # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindInstanceByUId(System.Guid)">
            <summary>
            ########## ######### ######## ######### ## ######### ########### ##############.
            </summary>
            <param name="uid">########## ############# ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="uid"/>. #### #######
            ######### # ########## ############### <paramref name="uid"/> ## ######, ############ ######### ##
            ######### ######## #### ######## #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindInstanceByUId(System.Guid)">
            <summary>
            ############ ##### ########## ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetInstanceByUId(System.Guid)">
            <summary>
            ########## ######### ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetInstanceByUId(System.Guid)">
            <summary>
            ########## ######### ######## ######### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindInstanceByName(System.String)">
            <summary>
            ############ ##### ########## ######## ######### # ######## ######.
            </summary>
            <param name="name">### ######## ########## ######## #########.</param>
            <returns>######### ######## ######### # ###### <paramref name="name"/>. #### ######### ######## ######### #
            ########## ############### <paramref name="name"/> ## ######, ############ ######### ## ######### ###
            ######## #### ######## #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#FindInstanceByName(System.String)">
            <summary>
            ############ ##### ########## ######## ######### # ######## ######.
            </summary>
            <param name="name">### ######## ########## ######## #########.</param>
            <returns>######### ######## ######### # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetInstanceByName(System.String)">
            <summary>
            ########## ######### ######## ######### # ######## ######.
            </summary>
            <param name="name">### ########## ######## ######### # ###### <paramref name="name"/>.</param>
            <returns>######### ######## ######### # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetInstanceByName(System.String)">
            <summary>
            ########## ######### ######## ######### # ######## ######.
            </summary>
            <param name="name">### ########## ######## #########.</param>
            <returns>######### ######## ######### # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.FindItemByCaption(System.String)">
            <summary>
            ############ ##### ######## ######### # ######## ##########.
            </summary>
            <param name="caption">######### ######## #########.</param>
            <returns>####### ######### ######## #### # ########## <paramref name="caption"/>. #### ####### # ##########
            <paramref name="caption"/> ## ######, ############ ######## ## ######### ### ######## #### ########
            #########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Terrasoft#Core#IManager#GetItems">
            <summary>
            ########## ############# ######### #########.
            </summary>
            <returns>############# ######### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItems(System.Predicate{Terrasoft.Core.IManagerItem})">
            <summary>
            ########## ############# ######### #########, ####### ############# ######## #########.
            </summary>
            <param name="match">########, ####### ###### ############### ############ ######## ############.</param>
            <returns>############# ######### #########, ####### ############# ######### <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.GetItems">
            <summary>
            ########## ############# ######### ######### ######## ####.
            </summary>
            <returns>############# ######### ######### ######## ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Add(`0)">
            <summary>
            ######### ##### ####### ######### # ##### #########.
            </summary>
            <param name="item">#######, ####### ########### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Remove(`0)">
            <summary>
            ####### ## ######### ######### ######### ######## #######.
            </summary>
            <param name="item">#######, ####### ###### #### ###### ## #########.</param>
            <returns>
            <c>true</c>, #### <paramref name="item"/> ####### ######; ##### - <c>false</c>. #### ##### ##### #####
            ########## <c>false</c>, #### <paramref name="item"/> ## ###### # ######### ######### #########.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Manager`2.Clear">
            <summary>
            ####### ### ######## ## ######### ######### #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ManagerItem`1">
            <summary>
            ####### #########.
            </summary>
            <typeparam name="TInstance">#####, ########### ######### <see cref="T:Terrasoft.Core.IManagerItemInstance"/>.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.UId">
            <summary>
            ############# ######## #########, ######## ######## ####### ## #### #####.
            #### ##### ######## ########, ## #### <see cref="P:Terrasoft.Core.ManagerItem`1.UId"/> ##### #### <see cref="P:Terrasoft.Core.ManagerItem`1.RealUId"/> ############
            "#########" #####, ##### #### <see cref="P:Terrasoft.Core.ManagerItem`1.UId"/> ##### ######## ######## #### <see cref="P:Terrasoft.Core.ManagerItem`1.RealUId"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.RealUId">
            <summary>
            ########## ############# ######## #########, ####### ######## UId #####, ########### ## ### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Name">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Caption">
            <summary>
            #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Instance">
            <summary>
            ######### #### ######## #########. #### ###### ## ######### ######## ######### ##### <c>null</c>, 
            ############ ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.SafeInstance">
            <summary>
            ########## ######### #### ######## #########. #### ###### ## ######### ######## ######### ##### 
            <c>null</c>, ############ <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Terrasoft#Core#IManagerItem#Instance">
            <summary>
            Manager item instance of type <see cref="T:System.Object"/>. If manager item instance is <c>null</c>,
            exception is thrown.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Terrasoft#Core#IManagerItem#SafeInstance">
            <summary>
            ########## ######### ######## ######### #### <see cref="T:System.Object"/>. #### ###### ## ######### ######## 
            ######### ##### <c>null</c>, ############ <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ManagerItem`1.Manager">
            <summary>
            ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ManagerItem`1.HandleNameChanging(System.String)">
            <summary>
            ############# ########## ######## ######### ### ### ##############.
            </summary>
            <param name="oldName">###### ### ######## #########.</param>
        </member>
        <member name="T:Terrasoft.Core.ManagerItemCollection`1">
            <summary>
            ######### ######### #########.
            </summary>
            <typeparam name="TItem">###, ########### ######### <see cref="T:Terrasoft.Core.IManagerItem"/>.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.ManagerItemCollection`1.ItemCount">
            <summary>
            ########## ######### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Find(System.Predicate{`0})">
            <summary>
            Searches the <see cref="T:Terrasoft.Core.IManagerItem"/> collection item by a given condition.
            </summary>
            <param name="match">The condition, to which the returned collection item should match.</param>
            <returns>Item of the collection that is satisfied search criteria.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetItems">
            <summary>
            ########## ############# ######### #########.
            </summary>
            <returns>############# ######### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetItems(System.Predicate{Terrasoft.Core.IManagerItem})">
            <summary>
            ########## ############# ######### #########, ####### ############# ######## #########.
            </summary>
            <param name="match">########, ####### ###### ############### ############ ######## #########.</param>
            <returns>
            ############# ######### #########, ####### ############# ######### <paramref name="match"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetItems">
            <summary>
            ########## ############# ######### ######### ######## ####.
            </summary>
            <returns>############# ######### ######### ######## ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetItems(System.Predicate{`0})">
            <summary>
            ########## ############# ######### ######### ######## ####.
            </summary>
            <returns>############# ######### ######### ######## ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.FindByUId(System.Guid)">
            <summary>
            Searches collection element of the current type by given identifier.
            </summary>
            <param name="uid">Unique identifier of the collection element.</param>
            <returns> Collection element of the current type with unique identifier <paramref name="uid"/>.
            If element with the <paramref name="uid"/> unique identifier not found, 
            the default value for the current element type will be returned.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#FindByUId(System.Guid)">
            <summary>
            ############ ##### ######## ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> ## ######### ###########
            ##############.
            </summary>
            <param name="uid">########## ############# ######## ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/># ########## ###############
            <paramref name="uid"/>. #### ####### # ########## ############### <paramref name="uid"/> # ######### ##
            ######, ############ ######## ## ######### ### ######## #### ######## #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetByUId(System.Guid)">
            <summary>
            ########## ####### ######### ######## #### # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## #########.</param>
            <returns>####### ######### ######## #### # ########## ############### <paramref name="uid"/>.
            #### ####### # ############### <paramref name="uid"/> # ######### ## ######, ############ ##########.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ######### ######### ######### ## ###### ####### # ##########
            ############### <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetByUId(System.Guid)">
            <summary>
            ########## ####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/># ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/># ########## ###############
            <paramref name="uid"/>. #### ####### # ############### <paramref name="uid"/> # ######### ## ######,
            ############ ##########.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ######### ######### ######### ## ###### ####### # ##########
            ############### <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.FindByName(System.String)">
            <summary>
            Searches collection element of the current type by given name.
            </summary>
            <param name="name">Name of the collection element.</param>
            <returns>Collection element of the current type with name <paramref name="name"/>.
            If element with the <paramref name="name"/> name not found,
            the default value for the current element type will be returned.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Rises if the value of the <paramref name="name"/>
            argument is empty or is <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#FindByName(System.String)">
            <summary>
            ############ ##### ######## ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ######## ######.
            </summary>
            <param name="name">### ######## ######## #########.</param>
            <returns>####### ######### ######## #### # ###### <paramref name="name"/>.
            #### ####### # ###### <paramref name="name"/> # ######### ## ######, ############
            ######## ## ######### ### ######## ####.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="name"/> ########
            ###### ######## ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.GetByName(System.String)">
            <summary>
            ########## ####### ######### ######## #### # ######## ######.
            </summary>
            <param name="name">### ######## ######## #########.</param>
            <returns>####### ######### ######## #### # ###### <paramref name="name"/>. #### ####### # ######
            <paramref name="name"/> # ######### ## ######, ############ ##########.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ######### ######### ######### ## ###### ####### # ######
            <paramref name="name"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Terrasoft#Core#IManagerItemCollection{Terrasoft#Core#IManagerItem}#GetByName(System.String)">
            <summary>
            ########## ####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ######## ######.
            </summary>
            <param name="name">### ######## ######## #########.</param>
            <returns>####### ######### #### <see cref="T:Terrasoft.Core.IManagerItem"/> # ###### <paramref name="name"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.Check(`0)">
            <summary>
            ########## ####### # ####### ######### ######### ######### ######### ########.
            </summary>
            <param name="item">#######, ####### ######## ###########.</param>
            <exception cref="T:System.ArgumentException">
            #### # ####### ######### ####### <paramref name="item"/> ## #########.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.RemoveAllItemsByUId(System.Guid)">
            <summary>
            ####### ## ####### ######### ######### ######### ### ######## # ######## ########## ###############.
            </summary>
            <param name="uid">########## ############# #########, ####### ########## #######.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### ######### ######### ## ####### ######## #
            ########## ############### <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.RemoveItemByUId(System.Guid)">
            <summary>
            ####### ## ####### ######### ######### ######### ###### ######### ######## # ######## ##########
            ###############.
            </summary>
            <param name="uid">########## ############# ########, ####### ########## #######.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### ######### ######### ## ###### ####### #
            ########## ############### <paramref name="uid"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.ManagerItemCollection`1.RemoveItemByName(System.String)">
            <summary>
            ####### ## ####### ######### ######### ######### ###### ######### ######## # ######## ######.
            </summary>
            <param name="name">### ########, ####### ########## #######.</param>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### # ####### ######### ######### ######### ## ###### ####### #
            ###### <paramref name="name"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.TextWriter)">
            <summary>
            ########### ########## ##### <paramref name = "schema"/>
            # ####### <paramref name = "textWriter"/>.
            </summary>
            <param name="schema">########## #####.</param>
            <param name="textWriter">######### <see cref = "T:System.IO.TextWriter"/>, # ####### ######## ###########
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(Terrasoft.Core.MetaSchema,System.IO.Stream)">
            <summary>
            ########### ########## ##### <paramref name = "schema"/> # ##### <paramref name = "stream"/>.
            </summary>
            <param name="schema">########## #####.</param>
            <param name="stream">#####.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.TextWriter)">
            <summary>
            ########### ########## ###### #### <paramref name = "schemaList"/>
            # ####### <paramref name = "textWriter"/>.
            </summary>
            <param name="schemaList">###### ########## #### ### ############.</param>
            <param name="textWriter">######### <see cref = "T:System.IO.TextWriter"/>, # ####### ######## ###########
            ############.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Serialize(System.Collections.Generic.IEnumerable{Terrasoft.Core.MetaSchema},System.IO.Stream)">
            <summary>
            ########### ########## ###### #### <paramref name = "schemaList"/> # ##### <paramref name = "stream"/>.
            </summary>
            <param name="schemaList">###### ########## #### ### ############.</param>
            <param name="stream">#####.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            ############# ########## ###### #### # ####### <paramref name = "input"/>.
            </summary>
            <param name="input">######### <see cref="T:System.IO.TextReader"/>, # ####### ######## ###########
            ##############.</param>
            <returns>###### ################# ######## ######### ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.MetaDataSerializer.Deserialize(System.IO.Stream)">
            <summary>
            ############# ########## ###### #### ## ###### <paramref name = "input"/>.
            </summary>
            <param name="input">#####.</param>
            <returns>###### ################# ######## ######### ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.MetaItem.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.MetaItem.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.MetaItem.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="P:Terrasoft.Core.MetaSchema.Manager">
            <summary>
            Gets the schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.MetaTypePropertyAttribute.UserPropertyNullValue">
            <summary>
            Represents the value which will not be written to database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.MetaUtilities.GetReadableMetaItemMetaData(Terrasoft.Core.UserConnection,Terrasoft.Core.MetaItem,System.Boolean)">
            <summary>
            Returns item readable meta data.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="metaItem">Meta data source</param>
            <param name="toLowerCamelCase">Flag that indicates how to write property names.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.MetaUtilities.GetReadableMetaData(Terrasoft.Core.UserConnection,System.String,System.Type,System.Boolean)">
            <summary>
            Returns readable meta data.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="metaData">Initial meta data with meta-idexes.</param>
            <param name="type">Meta data instance type</param>
            <param name="toLowerCamelCase">Flag that indicates how to write property names.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.NoRetryOperation">
            <summary>
            Used as a stub when retry logic is turned off.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.GetDefaultRightsSelect(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Returns default rights select query.
            </summary>
            <param name="batch">Batch of records identifier.</param>
            <returns>Default rights select query.</returns>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.GetRecordAuthorRightsSelect(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Returns record author rights select query.
            </summary>
            <param name="batch">Batch of records identifier.</param>
            <returns>Record author rights select query.</returns>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.GetRecordOwnerRightsSelect(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Returns record owner rights select query.
            </summary>
            <param name="batch">Batch of records identifier.</param>
            <returns>Record owner rights select query.</returns>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.ClearSchemaDefaultRecordRights(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Deletes default previous data from record rights.
            </summary>
            <param name="batch">Batch of records identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.GetRecordRightsSchemaName">
            <summary>
            Returns record rights schema name.
            </summary>
            <returns>Record rights schema name.</returns>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.ExecuteRightsInsertSelect(Terrasoft.Core.DB.DBExecutor,Terrasoft.Core.DB.Select)">
            <summary>
            Executes insert query to rights schema object by select query.
            </summary>
            <param name="dbExecutor">Database executor.</param>
            <param name="select">Select query for insert query.</param>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.ObjectRecordRightsActualizerWorker.ActualizeAdministratedObjectBatch(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Actualizes selected batch of object records.
            </summary>
            <param name="batch">Batch of records identifier.</param>
        </member>
        <member name="P:Terrasoft.Core.ObjectRecordRightsActualizer.EntityRecordIdSelectFilter">
            <summary>
            Filter for entity record ids select, which need to actualize.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.GetAllEntityRecordIds(System.String)">
            <summary>
            Returns all records from selected entity by name.
            </summary>
            <param name="entityName">Entity name.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.ObjectRecordRightsActualizer.Actualize(System.Guid)">
            <summary>
            Actualizes object record rights by schema UId.
            </summary>
            <param name="schemaUId">Schema unique identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.OperationLog.ILogMessage">
            <summary>
            Provides a skeleton for log message.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.UserConnection">
            <summary>
            Instance of <see cref="P:Terrasoft.Core.OperationLog.ILogMessage.UserConnection"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.Type">
            <summary>
            Type of the operation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.Date">
            <summary>
            Log message's date and time.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.Result">
            <summary>
            Result of the operation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.ClientIP">
            <summary>
            Client's IP address.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.OwnerId">
            <summary>
            Owner identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.OwnerName">
            <summary>
            Owner name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.ILogMessage.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.OperationLog.IOperationLogAppender">
            <summary>
            Provides a skeleton for implementing an Operation log appender.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.IOperationLogAppender.Append(Terrasoft.Core.OperationLog.ILogMessage)">
            <summary>
            Writes provided instance of <see cref="T:Terrasoft.Core.OperationLog.ILogMessage"/> to store.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Terrasoft.Core.OperationLog.OperationLogAppender">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogAppender.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.OperationLog.OperationLogAppender"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogAppender.#ctor(Terrasoft.Core.IDateTimeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.OperationLog.OperationLogAppender"/> class.
            </summary>
            <param name="dateTimeProvider">Instance of <see cref="T:Terrasoft.Core.IDateTimeProvider"/> to use.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogAppender.Append(Terrasoft.Core.OperationLog.ILogMessage)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.OperationLog.OperationLogger">
            <summary>
            Provides logging of user operations.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogger.Instance">
            <summary>
            Returns a singleton instance of <see cref="T:Terrasoft.Core.OperationLog.OperationLogger"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.GetLookupSettingsDisplayValue(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            ######## ######## ### ########### ######### ######### # ##### ##########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.GetAccessTypeName(System.Boolean)">
            <summary>
            Returns access type name.
            </summary>
            <param name="isAllowed"><c>true</c> if allowed, otherwise - <c>false</c></param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserAdd(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs user add operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userName">User name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserEdit(Terrasoft.Core.UserConnection,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntityColumnValue})">
            <summary>
            Logs user edit operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userName">User name.</param>
            <param name="columnValues">Modified column values collection.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserDelete(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs user delete operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userName">User name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminUnitAdd(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs business unit add operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Business unit name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminUnitEdit(Terrasoft.Core.UserConnection,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Entities.EntityColumnValue})">
            <summary>
            Logs business unit edit operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Business unit name.</param>
            <param name="columnValues">Modified column values collection.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminUnitDelete(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs business unit delete operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Business unit name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserRoleAdd(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Logs adding user to role operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userId">User Id.</param>
            <param name="roleId">Role Id.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserRoleDelete(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Logs exclusion user from role operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userId">User Id.</param>
            <param name="roleId">Role Id.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminEntitySchemaEdit(Terrasoft.Core.UserConnection,System.String,Terrasoft.Core.OperationLog.EntitySchemaAdministrationType,System.Boolean)">
            <summary>
            Logs administrated entity schema edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="administrationType">Value of <see cref="T:Terrasoft.Core.OperationLog.EntitySchemaAdministrationType"/> type.</param>
            <param name="isAdministrated">Is schema administrated.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaOperationRightEdit(Terrasoft.Core.UserConnection,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Logs entity schema operation rights edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="adminUnitName">Administration unit name.</param>
            <param name="canRead">Is reading allowed.</param>
            <param name="canAppend">Is append allowed.</param>
            <param name="canEdit">Is edition allowed.</param>
            <param name="canDelete">Is deletion allowed.</param>
            <param name="position">Record right position.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaOperationRightEdit(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs edition of Entity schema operation rights.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Edited peration right record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaOperationRightDelete(Terrasoft.Core.UserConnection,System.String,System.String)">
            <summary>
            Logs deletion of Entity schema operation rights.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="adminUnitName">Administration unit name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaOperationRightDelete(Terrasoft.Core.UserConnection,System.String,System.Guid)">
            <summary>
            Logs deletion of Entity schema operation rights.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaOperationRightDelete(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs deletion of Entity schema operation rights.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Deleted operation right record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaExternalServiceRightEdit(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs Entity schema external service rights edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Edited operation right record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaExternalServiceRightDelete(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs Entity schema external service rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Deleted operation right record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordRightAdd(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid)">
            <summary>
            Logs Entity schema record right addition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="schemaRightName">Schema record right name.</param>
            <param name="recordId">Added record right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordRightEdit(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid)">
            <summary>
            Logs Entity schema record right edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="schemaRightName">Schema record right name.</param>
            <param name="recordId">Edited record right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordRightDelete(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid)">
            <summary>
            Logs Entity schema record right deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="schemaRightsName">Schema record right name.</param>
            <param name="recordId">Deleted record right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordRightDelete(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid,Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation,System.Guid)">
            <summary>
            Logs Entity schema record right deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="schemaRightsName">Schema record right name.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
            <param name="operation">Value of <see cref="T:Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation"/> type.</param>
            <param name="recordId">Deleted record right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordDefRightEdit(Terrasoft.Core.UserConnection,System.String,System.String,System.String,Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation,Terrasoft.Core.Configuration.EntitySchemaRecordRightLevel,System.Int32)">
            <summary>
            Logs Entity schema default record rights edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="grantorName">Grantor name.</param>
            <param name="granteeName">Grantee name.</param>
            <param name="operation">Value of <see cref="T:Terrasoft.Core.Configuration.EntitySchemaRecordRightOperation"/> type.</param>
            <param name="rightLevel">Value of <see cref="T:Terrasoft.Core.Configuration.EntitySchemaRecordRightLevel"/> type.</param>
            <param name="position">Record right position.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordDefRightEdit(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs Entity schema default record rights edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Edited record right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordDefRightDelete(Terrasoft.Core.UserConnection,System.String,System.String)">
            <summary>
            Logs Entity schema default record rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
            <param name="granteeName">Grantee name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordDefRightDelete(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs Entity schema default record rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Deleted record right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaRecordDefRightDelete(Terrasoft.Core.UserConnection,System.Guid,System.String)">
            <summary>
            Logs Entity schema default record rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="granteeId">Grantee identifier.</param>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaColumnRightEdit(Terrasoft.Core.UserConnection,System.String,System.Guid,System.Guid,System.Guid,System.Int32)">
            <summary>
            Logs Entity schema column rights edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Administration unit name.</param>
            <param name="schemaUId">Entity schema unique identifier.</param>
            <param name="columnUId">Entity schema column unique identifier.</param>
            <param name="rightLevelId">Column right level unique identifier.</param>
            <param name="position">Column right position.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaColumnRightEdit(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs Entity schema column rights edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Edited column right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaColumnRightDelete(Terrasoft.Core.UserConnection,System.String,System.Guid,System.Guid)">
            <summary>
            Logs Entity schema column rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Administration unit name.</param>
            <param name="schemaUId">Entity schema unique identifier.</param>
            <param name="columnUId">Entity schema column unique identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaColumnRightDelete(Terrasoft.Core.UserConnection,System.Guid,System.String,System.String)">
            <summary>
            Logs Entity schema column rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
            <param name="schemaName">Entity schema name.</param>
            <param name="columnName">Entity schema column name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogEntitySchemaColumnRightDelete(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs Entity schema column rights deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Deleted column right identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightMove(Terrasoft.Core.UserConnection,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Logs administration operation move.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
            <param name="operationId">Operation identifier.</param>
            <param name="canExecute">Can execute.</param>
            <param name="position">Position.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightEdit(Terrasoft.Core.UserConnection,System.Guid,System.Guid,System.Boolean,System.Int32)">
            <summary>
            Logs administration operation right edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
            <param name="operationId">Operation identifier.</param>
            <param name="canExecute">Can execute.</param>
            <param name="position">Position.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightChange(Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Logs administration operation right change.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Record identifier.</param>
            <param name="changePosition">Determines if position was changed.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightAdd(Terrasoft.Core.UserConnection,System.Guid,System.Guid,System.Int32)">
            <summary>
            Logs administration operation right addition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
            <param name="operationId">Operation identifier.</param>
            <param name="position">Position.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightAdd(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs administration operation right addition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightDelete(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Logs administration operation right deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitId">Administration unit identifier.</param>
            <param name="operationId">Operation identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogAdminOperationRightDelete(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Logs administration operation right deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="recordId">Record identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogSettingsEdit(Terrasoft.Core.UserConnection,System.String,System.Object)">
            <summary>
            Logs SysSettings edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="settingsName">Edited setting name.</param>
            <param name="settingsValue">New setting value.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogSettingsEdit(Terrasoft.Core.UserConnection,Terrasoft.Core.Configuration.SysSettings,System.Object)">
            <summary>
            Logs SysSettings edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="sysSettings">Instance of <see cref="T:Terrasoft.Core.Configuration.SysSettings"/> that was edited.</param>
            <param name="value">New setting value.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogSettingsEdit(Terrasoft.Core.UserConnection,Terrasoft.Core.SystemSettings.Objects.ISysSettings,System.Object)">
            <summary>
            Logs SysSettings edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="sysSettings">Instance of <see cref="T:Terrasoft.Core.SystemSettings.Objects.ISysSettings"/> that was edited.</param>
            <param name="value">New setting value.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserLogin(Terrasoft.Core.UserConnection,System.String,System.String)">
            <summary>
            Logs user authorization.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userName">User name.</param>
            <param name="clientIP">IP address.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserLoginError(Terrasoft.Core.UserConnection,System.String,System.String,System.String)">
            <summary>
            Logs user authorization denial with provided <paramref name="exceptionMessage"/>.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userName">User name.</param>
            <param name="clientIP">IP address.</param>
            <param name="exceptionMessage">Message of exception that caused authorization denial.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserLoginError(Terrasoft.Core.UserConnection,System.String,System.String,System.Exception)">
            <summary>
            Logs user authorization denial with information provided by <paramref name="exception"/>.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="userName">User name.</param>
            <param name="clientIP">IP address.</param>
            <param name="exception">Exception that caused authorization denial.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogUserSessionEnd(Terrasoft.Core.UserConnection)">
            <summary>
            Logs user session end.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogOperationAudit(Terrasoft.Core.UserConnection,System.DateTime,System.DateTime)">
            <summary>
            Logs operation audit.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="startDate">Start date.</param>
            <param name="endDate">End date.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogClientIPRangeEdit(Terrasoft.Core.UserConnection,System.String,System.String,System.String)">
            <summary>
            Logs client's allowed IP range edition.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Administrative unit name.</param>
            <param name="beginIP">Start IP address.</param>
            <param name="endIP">End IP address.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogClientIPRangeDelete(Terrasoft.Core.UserConnection,System.String,System.String,System.String)">
            <summary>
            Logs client allowed IP address range deletion.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="adminUnitName">Administrative unit name.</param>
            <param name="beginIP">Start IP address.</param>
            <param name="endIP">End IP address.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogDeniedOperationDelete(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs denied deletion operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogDeniedOperationEdit(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs denied edition operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogDeniedOperationAppend(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs denied append operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogDeniedChangeSchemaRecordRightDelete(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs denied record right deletion operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogger.LogDeniedChangeSchemaRecordRightEdit(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Logs denied record right edition operation.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="schemaName">Schema name.</param>
        </member>
        <member name="T:Terrasoft.Core.OperationLog.OperationLogMessage">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogMessage.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.OperationLog.OperationLogMessage"/>.
            </summary>
            <param name="userConnection">Instance of <see cref="P:Terrasoft.Core.OperationLog.OperationLogMessage.UserConnection"/> to use.</param>
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.UserConnection">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.Type">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.Date">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.Result">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.ClientIP">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.OwnerId">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.OwnerName">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.OperationLog.OperationLogMessage.Message">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.OperationLog.OperationLogMessage.ToString">
            <summary>
            Returns string representation of object.
            </summary>
            <returns>String representation of object.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.AssemblyLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Unlocks target assembly in version control system and database.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Assembly name.</param>
            <param name="elementId">Assembly identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.BasePackageUriGenerator">
            <summary>
            ####### ##### ########## ##### # ######### ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.BasePackageUriGenerator.GetPackageUri(System.Uri,System.String,System.String)">
            <summary>
            ########## ###### #### # ###### # ######### ####### ######## ######.
            </summary>
            <param name="repositoryUri">######## #### # ###### # ######### ####### ######## ######.</param>
            <param name="packageName">### ######.</param>
            <param name="version">###### ######.</param>
            <returns>###### #### # ###### # ######### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.BasePackageUriGenerator.GetPackageRootUri(System.Uri,System.String)">
            <summary>
            ########## ###### #### # ##### ###### # ######### ####### ######## ######.
            </summary>
            <param name="repositoryUri">######## #### # ###### # ######### ####### ######## ######.</param>
            <param name="packageName">### ######.</param>
            <returns>###### #### # ##### ###### # ######### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.BasePackageUriGenerator.GetPackageBranchesUri(System.Uri,System.String)">
            <summary>
            ########## ###### #### # ###### ###### # ######### ####### ######## ######.
            </summary>
            <param name="repositoryUri">######## #### # ###### # ######### ####### ######## ######.</param>
            <param name="packageName">### ######.</param>
            <returns>###### #### # ###### ###### # ######### ####### ######## ######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ConfigurationAssemblyException">
            <summary>##### ########## ### ######## ########## ## ####### al.exe</summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ConfigurationSourceControlManager.#ctor(Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.BasePackageUriGenerator,Terrasoft.Core.Packages.ISourceControlAuthManager)">
            <summary>
            ############## ##### ######### ######
            <see cref="T:Terrasoft.Core.Packages.ConfigurationSourceControlManager"/> # ######### ###########.
            </summary>
            <param name="sourceControlManager">######## ### ###### # ######## ####### ######## ######.</param>
            <param name="uriGenerator">######### ##### # ######### ####### ######## ######.</param>
            <param name="authManager">######## ### ###### # ############### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ConfigurationSourceControlManager.CommitPackage(Terrasoft.Core.Configuration.SysPackage,System.String,System.String,Terrasoft.Common.SourceControlSaveType)">
            <summary>
            ######### ##### # #########.
            </summary>
            <param name="package">#####.</param>
            <param name="packagesCopyPath">#### # ####### ##### ######.</param>
            <param name="commitMessage">######### ### ########.</param>
            <param name="sourceControlSaveType">### ########.</param>
            <returns>##### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ConfigurationSourceControlManager.CommitPackage(Terrasoft.Core.Configuration.SysPackage,Terrasoft.Core.Packages.Package,System.String,System.String,Terrasoft.Common.SourceControlSaveType)">
            <summary>
            ######### ##### # #########.
            </summary>
            <param name="package">#####.</param>
            <param name="packageDescriptor">packageDescriptor</param>
            <param name="packagesCopyPath">#### # ####### ##### ######.</param>
            <param name="commitMessage">######### ### ########.</param>
            <param name="sourceControlSaveType">### ########.</param>
            <returns>##### #######.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.CoreResourceDescriptor.Type">
            <summary>
            Package storage element type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Descriptor.Name">
            <summary>
            Name of descriptor.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidNameException">Throws exception if <paramref name="value"/> 
            is not valid.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Packages.Descriptor.ModifiedOnUtc">
            <summary>Object's modification last date/time</summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Descriptor.IsDeleted">
            <summary>
            Returns <c>true</c> if element is in deleted state.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorChecksumComparer.IsItemOrContentChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the source repository differs from the descriptor from the target repository.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <param name="targetItem">Descriptor from the target repository.</param>
            <returns><c>true</c> if no changes found, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparerBase.IsItemNew(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the source repository is new.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <returns><c>true</c> if the <paramref name = "sourceItem"/> descriptor is new; otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparerBase.IsItemChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the target repository has been modified.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <param name="targetItem">Descriptor from the target repository.</param>
            <returns><c>true</c> if the descriptor from the <paramref name="sourceItem" /> repository has been
            modified; otherwise – <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparerBase.IsItemDeleted(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the target repository has been deleted.
            </summary>
            <param name="targetItem">Descriptor from the target repository.</param>
            <returns><c>true</c> if the <paramref name="targetItem" /> descriptor has been deleted;
            otherwise – <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.DescriptorComparerBase.IsItemOrContentChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the source repository differs from the descriptor from the target repository.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <param name="targetItem">Descriptor from the target repository.</param>
            <returns><c>true</c> if no changes found, otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException">
            <summary>
            Exception that is thrown when a package or package element descriptor is not valid.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Context.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException"/>
            class with a specified message.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException"/> 
            class using specified message and reference to inner exception.
            </summary>
            <param name="message">Error message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException.#ctor(System.Exception,System.String)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException"/> 
            class using reference to inner exception and descriptor path.
            </summary>
            <param name="innerException">Inner exception.</param>
            <param name="path">Descriptor path.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.Exceptions.InvalidDescriptorInFileSystemException.Path">
            <summary>
            Descriptor path.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException">
            <summary>
            Exception that is thrown when a package dependency is not valid.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Context.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException.#ctor">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException.#ctor(System.String)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException"/>
            class with a specified message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException.#ctor(System.Exception,System.String)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.Exceptions.InvalidPackageDependencyException"/> class.
            </summary>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <param name="packageName">Package name.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.FileContentStorage.DeleteDirectory(System.String)">
            <remarks>
            The RemoveDirectory function marks a directory for deletion on close. 
            Therefore, the directory is not removed until the last handle to the directory is closed.
            https://stackoverflow.com/q/24265481
            </remarks>
        </member>
        <member name="T:Terrasoft.Core.Packages.IInstalledAppInfo">
            <summary>
            Installed application info.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.Code">
            <summary>
            Code.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.ZipPackageName">
            <summary>
            Zip package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.Maintainer">
            <summary>
            Maintainer.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.SupportEmail">
            <summary>
            Support email.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.LastUpdate">
            <summary>
            Last update.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.MarketplaceLink">
            <summary>
            Marketplace link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.FileLink">
            <summary>
            File link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.HelpLink">
            <summary>
            Help link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.OrderLink">
            <summary>
            Order link.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IInstalledAppInfo.IsLicenseRequired">
            <summary>
            Is license required.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.IAppInstaller">
            <summary>
            Defines methods to install applications from external source to system persistence storage.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IAppInstaller.Install(System.String,System.String,Terrasoft.Core.Packages.PackageInstallOptions,Terrasoft.Core.Packages.IInstalledAppInfo)">
            <summary>
            Installs application packages
            </summary>
            <param name="sourcePath">Packages source path.</param>
            <param name="destinationPath">Packages destination path.</param>
            <param name="installOptions">Installation options.</param>
            <param name="installedAppInfo">Installing application info.</param>
            <returns>
            Returns <c>true</c> if application have been installed successfully. Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IAppInstaller.Uninstall(Terrasoft.Core.Packages.ISystemPackageManager,System.Guid,System.Collections.Generic.IList{System.String},Terrasoft.Core.Packages.PackageInstallOptions)">
            <summary>
            Uninstalls application packages.
            </summary>
            <param name="systemPackageManager">System package manager <see cref="T:Terrasoft.Core.Packages.ISystemPackageManager"/>.</param>
            <param name="appId">Application identifier.</param>
            <param name="errorMessages">Error messages.</param>
            <param name="installOptions">Installation options <see cref="T:Terrasoft.Core.Packages.PackageInstallOptions"/>.</param>
            <returns>
            Returns <c>true</c> if application have been uninstalled successfully. Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IAppInstaller.DeletePackage(Terrasoft.Core.Packages.IPackageManager,System.String,System.Collections.Generic.IList{System.String},Terrasoft.Core.Packages.PackageInstallOptions)">
            <summary>
            Deletes package.
            </summary>
            <param name="packageManager">Package manager.</param>
            <param name="packageName">Package name.</param>
            <param name="errorMessages">Error messages.</param>
            <param name="installOptions">Installation options <see cref="T:Terrasoft.Core.Packages.PackageInstallOptions"/>.</param>
            <returns>
            Returns <c>true</c> if package has been deleted successfully. Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IAppInstaller.IsAppInstalledWithError(System.String,System.Guid@)">
            <summary>
            Checks whether application installed with errors.
            </summary>
            <param name="appCode">Application code.</param>
            <param name="appId">Application id.</param>
            <returns>
            Returns <c>true</c> if application already installed with error. Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IDescriptorComparer">
            <summary>
            Provides methods for comparison of system item descriptors.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemNew(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the source repository is new.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <returns><c>true</c> if the <paramref name = "sourceItem"/> descriptor is new; otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the target repository has been modified.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <param name="targetItem">Descriptor from the target storage.</param> 
            <returns><c>true</c> if the descriptor from the <paramref name="sourceItem" /> repository has been
            modified; otherwise – <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemDeleted(Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the target repository has been deleted.
            </summary>
            <param name="targetItem">Descriptor from the target repository.</param>
            <returns><c>true</c> if the <paramref name="targetItem" /> descriptor has been deleted;
            otherwise – <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IDescriptorComparer.IsItemOrContentChanged(Terrasoft.Core.Packages.Descriptor,Terrasoft.Core.Packages.Descriptor)">
            <summary>
            Checks if the descriptor from the source repository differs from the descriptor from the target repository.
            </summary>
            <param name="sourceItem">Descriptor from the source repository.</param>
            <param name="targetItem">Descriptor from the target repository.</param>
            <returns><c>true</c> if no changes found, otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IFileContentProvider">
            <summary>
            Provides methods to get information about structure of file content.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IFileContentProvider.GetFileContentStructure(System.String)">
            <summary>
            Returns information about structure of file content.
            </summary>
            <param name="packageName">Package name.</param>
            <returns>Returns information about structure of file content.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IFileStorageTransactionFactory">
            <summary>
            Provides methods for creating an instance of the <see cref="T:Terrasoft.Core.Packages.FileStorage.IFileStorageTransaction"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IFileStorageTransactionFactory.BeginTransaction(Terrasoft.Core.SystemUserConnection)">
            <summary>
            Returns an instance of the <see cref="T:Terrasoft.Core.Packages.FileStorage.IFileStorageTransaction"/>.
            </summary>
            <param name="userConnection">System user connection.</param>
            <returns>An instance of the <see cref="T:Terrasoft.Core.Packages.FileStorage.IFileStorageTransaction"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.#ctor(System.String,System.String,System.String)">
            <summary>
            ############## ##### ######### ######
            <see cref="T:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs"/>, ######### ######## #########.
            </summary>
            <param name="itemName">### ########, ########## ######.</param>
            <param name="errorMessage">##### ######.</param>
            <param name="lockedByName">### ############, ################ #######. ############## ########.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.ItemName">
            <summary>
            ### ########, ########## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.LockedByName">
            <summary>
            ### ############, ################ #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlLockErrorEventArgs.ErrorMessage">
            <summary>
            ##### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.ILockerManager">
            <summary>
            ######### ######### ############ ######### ####### # ####### ######## ######.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Packages.ILockerManager.LockError">
            <summary>
            ####### ### ############# ###### ############ ######## # ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockPackage(System.String,System.String@)">
            <summary>
            ######### ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="message">C####### ######### ## ######, #### ##### <paramref name = "packageName"/> ## 
            ############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "packageName"/> ############ # ####### ######## ######; 
            # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.ExistsPackage(System.String)">
            <summary>
            ##########, ########## ## ##### <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "packageName"/> ########## # ######### ####### ######## 
            ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockPackage(System.String)">
            <summary>
            ############ ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "packageName"/> ############# ## ###### ####### ######## 
            ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchema(System.String,System.String,System.String@)">
            <summary>
            ######### ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <param name="message">C####### ######### ## ######, #### ##### <paramref name = "schemaName"/> ## ###### 
            <paramref name = "packageName"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchemas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageSchemaNames">###### #### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## ####
            <paramref name = "packageSchemaNames"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ##### ## ###### #### <paramref name = "packageSchemaNames"/> #############
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.ExistsSchema(System.String,System.String)">
            <summary>
            ##########, ########## ## ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/> #
            ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <returns><c>true</c>, #### ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/>
            ########## # ######### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockSchema(System.String,System.String)">
            <summary>
            ############ ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <returns><c>true</c>, #### ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/>
            ############## ## ###### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSqlScript(System.String,System.String,System.String@)">
            <summary>
            ######### ######### SQL-######## # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <param name="message">C####### ######### ## ######, #### SQL-######## <paramref name = "sqlScriptName"/> ##
            ###### <paramref name = "packageName"/> ## ############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> ############ # ####### ######## ######; # ######### ###### — ########
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSqlScripts(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### SQL-######## # ####### ######## ######.
            </summary>
            <param name="packageSqlScriptNames">###### SQL-######### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## SQL-#########
            <paramref name = "packageSqlScriptNames"/> ## ############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### SQL-######## ## ###### SQL-#########
            <paramref name = "packageSqlScriptNames"/> ############# # ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.SqlScriptExists(System.String,System.String)">
            <summary>
            ##########, ########## ## SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <returns><c>true</c>, #### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> ########## # ######### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockSqlScript(System.String,System.String)">
            <summary>
            ############ ######### SQL-######## # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <returns><c>true</c>, #### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> ############# ## ###### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchemaData(System.String,System.String,System.String@)">
            <summary>
            ######### ########e ###### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <param name="message">C####### ######### ## ######, #### ###### ##### <paramref name = "schemaDataName"/> ##
            ###### <paramref name = "packageName"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> ############# # ####### ######## ######; # ######### ###### — ########
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockSchemaDatas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ###### #### # ####### ######## ######.
            </summary>
            <param name="packageSchemaDataNames">###### ###### #### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## ###### ####
            <paramref name = "packageSchemaDataNames"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ###### #### ## ###### ###### #### <paramref name = "packageSchemaDataNames"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.SchemaDataExists(System.String,System.String)">
            <summary>
            ##########, ########## ## ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> ########## # ######### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockSchemaData(System.String,System.String)">
            <summary>
            ############ ######### ###### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> ############## ## ###### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockAssembly(System.String,System.String,System.String@)">
            <summary>
            ######### ######### ###### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <param name="message">C####### ######### ## ######, #### ###### <paramref name = "assemblyName"/> ##
            ###### <paramref name = "packageName"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> ############# # ####### ######## ######; # ######### ###### — ########
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockAssemblies(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ###### # ####### ######## ######.
            </summary>
            <param name="packageAssemblyNames">###### ###### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## ######
            <paramref name = "packageAssemblyNames"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ###### ## ###### ###### <paramref name = "packageAssemblyNames"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.AssemblyExists(System.String,System.String)">
            <summary>
            ##########, ########## ## ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <returns><c>true</c>, #### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> ########## # ######### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockAssembly(System.String,System.String)">
            <summary>
            ############ ######### ###### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> ############## ## ###### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.UnlockElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            ############ ######### ######## ###### # ####### ######## ######.
            </summary>
            <param name="packageElementsInfo">###### ############# ######### ######.</param>
            <param name="elementsType">### ######### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.GetIsPackageElementHasForeignLock(System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            ##########, ############ ## ####### ###### #############.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="elementName">### ########.</param>
            <param name="elementType">### ######## <paramref name = "elementName"/>.</param>
            <returns><c>true</c>, #### ####### ############ ###### #############, # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.GetIsPackageHasForeignLock(System.String)">
            <summary>
            ##########, ############ ## ##### ###### #############.
            </summary>
            <param name="packageName">### ######.</param>
            <returns><c>true</c>, #### ##### ############ ###### #############, # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ILockerManager.TryLockPackageElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ######## ###### # ####### ######## ######.
            </summary>
            <param name="packageElementsInfo">###### ############# ######### ######.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ####### ###### ## ### ############; #
            ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ######## ###### ## ###### <paramref name = "packageElementsInfo"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageContentProvider">
            <summary>
            Provides methods to obtain package content.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageContentProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema properties in binary representation.
            </summary>
            <param name="package">Package containing schema.</param>
            <param name="schema">Schema descriptor.</param>
            <returns>Dictionary of schema properties.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageContentProvider.GetSchemaCs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Cs-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Cs-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageContentProvider.GetSchemaJs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Js-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Js-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageContentProvider.GetSchemaLess(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Less-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Less-content</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageDataProvider">
            <summary>
            Package content data provider interface.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageDataProvider.GetPackageSchemaData(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.PackageSchemaDataDescriptor)">
            <summary>
            Returns are not localized bound packet data.
            </summary>
            <param name="package">Package.</param>
            <param name="dataDescriptor">Data descriptor.</param>
            <returns>Serialized data stream.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageDataProvider.GetPackageSchemaDataFilter(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.PackageSchemaDataDescriptor)">
            <summary>
            Returns data binding filter package.
            </summary>
            <param name="package">Package.</param>
            <param name="dataDescriptor">Data descriptor.</param>
            <returns>Serialized data stream.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageDataProvider.GetPackageSchemaDataLocalization(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.PackageSchemaDataDescriptor)">
            <summary>
            Returns a collection of localized data bindings package.
            </summary>
            <param name="package">Package.</param>
            <param name="dataDescriptor">Data descriptor.</param>
            <returns>Collection of serialized data streams.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageHierarchyManager">
            <summary>
            Provides methods for packages hierarchy actualization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageHierarchyManager.ClearPackageHierarchy">
            <summary>
            Clears package hierarchy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageHierarchyManager.UpdatePackageHierarchy">
            <summary>
            Updates package hierarchy.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageIdentifierMapper">
            <summary>
            Provides mapping between package Id and UId
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageIdentifierMapper.GetIdByUId(System.Guid,System.Guid)">
            <summary>
            Gets package Id for provided <paramref name="uid"/> and <paramref name="workspaceId"/>
            </summary>
            <param name="uid">Package UId</param>
            <param name="workspaceId">Workspace Id</param>
            <returns>Package Id</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when package Id 
            for provided parameters isn't found</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Thrown when either <paramref name="uid"/> or
            <paramref name="workspaceId"/> is empty</exception>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageManager">
            <summary>
            Provides methods for package management.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageManager.CanDeletePackages(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysPackage},System.String@)">
            <summary>
            Checks availability of packages to be deleted.
            </summary>
            <param name="packages">Packages.</param>
            <param name="errorMessage">Error message.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageManager.DeletePackage(Terrasoft.Core.Configuration.SysPackage)">
            <summary>
            Deletes package from workspace.
            </summary>
            <param name="package">Package.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageResourceComparer">
            <summary>
            Provides methods for comparison of package resource items.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceComparer.GetNew(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue})">
            <summary>
            Returns new resource items depending on source and target collections.
            </summary>
            <param name="source">Source collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <param name="target">Target collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <returns>Collection of new <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceComparer.GetChanged(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue})">
            <summary>
            Returns changed resource items depending on source and target collections.
            </summary>
            <param name="source">Source collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <param name="target">Target collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <returns>Collection of changed <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceComparer.GetDeleted(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue})">
            <summary>
            Returns deleted resource items depending on source and target collections.
            </summary>
            <param name="source">Source collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <param name="target">Target collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <returns>Collection of deleted <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageResourceProvider">
            <summary>
            Package content resource provider interface.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceProvider.GetPackageResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns resources of package.
            </summary>
            <param name="package">Instance of the <see cref = "T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>Resourses dictionary specified by schema name and culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceProvider.GetCoreResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns core resources.
            </summary>
            <param name="package">Instance of the <see cref = "T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>Resourses dictionary specified by manager name and culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceProvider.GetSchemaResource(System.String,System.String,System.String,System.String)">
            <summary>
            Returns package resources by schema and culture.
            </summary>
            <param name="packageName">Name of package.</param>
            <param name="schemaName">Name of schema.</param>
            <param name="cultureName">Name of culture.</param>
            <param name="managerName">Name of manager.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceProvider.GetCoreResource(Terrasoft.Core.Packages.Package,System.String,System.String)">
            <summary>
            Returns core resources by schema and culture.
            </summary>
            <param name="package">Package.</param>
            <param name="managerName">Name of manager.</param>
            <param name="cultureName">Name of culture.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceSerializer.Serialize(System.IO.Stream,System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.String)">
            <summary>
            Converting collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/> to <see cref="T:Terrasoft.Common.ResourcePackage"/>
            and serializing to stream
            </summary>
            <param name="stream">Stream for serialized data</param>
            <param name="entityCollection">Collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/></param>
            <param name="cultureName">Culture name</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourceSerializer.Deserialize(System.IO.Stream,System.String)">
            <summary>
            Deserializing XML from stream to <see cref="T:Terrasoft.Common.ResourcePackage"/> object and converting to collection 
            of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>
            </summary>
            <param name="resourceStream">Serialized data stream</param>
            <param name="cultureName">Culture name</param>
            <returns>Collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/></returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageResourcesStorage">
            <summary>
            Provides methods and properties for storages.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IPackageResourcesStorage.ItemErrors">
            <summary>
            Error collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageResourcesStorage.Save">
            <summary>
            Saves resources.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageZipExporter">
            <summary>
            Provides methods to export packages as a list of files.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageZipExporter.Export(System.String,System.Func{Terrasoft.Core.Packages.ISystemPackage,System.Boolean})">
            <summary>
            Exports packages that meet criteria specified by <paramref name="packageFilter"/> to specified path.
            </summary>
            <param name="directoryPath">Path to directory in which to save packages.</param>
            <param name="packageFilter">Specifies criteria for package export.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.IPackageZipInstaller">
            <summary>
            Defines methods to install zip-archived packages from external source to system persistence storage.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.IPackageZipInstaller.InstalledPackageUIds">
            <summary>
            Installed packages identifiers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageZipInstaller.Install(System.String,System.String,Terrasoft.Core.Packages.PackageInstallOptions)">
            <summary>
            Installs packages from <paramref name="sourcePath"/>.
            </summary>
            <param name="sourcePath">Path to install from.</param>
            <param name="destinationPath">Local path to store packages.</param>
            <param name="installOptions">Installation options.</param>
            <returns>
            Returns <c>true</c> if packages have been installed successfully. Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.IResourceNameParser">
            <summary>
            Package resource name parser interface.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.IResourceNameParser.FindCultureNameFromResourceFileName(System.String)">
            <summary>
            Returns culture name from resource file name.
            </summary>
            <param name="fileName">Resource file name.</param>
            <returns>Culture name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IResourceNameParser.FindManagerNameFromCoreResourceFileName(System.String)">
            <summary>
            Returns manager name from resource file name.
            </summary>
            <param name="fileName">Resource file name.</param>
            <returns>Manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IResourceNameParser.FindSchemaNameFromDirectoryName(System.String)">
            <summary>
            Returns schema name from directory name.
            </summary>
            <param name="directoryName"></param>
            <returns>Schema name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IResourceNameParser.FindManagerNameFromDirectoryName(System.String)">
            <summary>
            Returns manager name from directory name.
            </summary>
            <param name="directoryName"></param>
            <returns>Manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IResourceNameParser.GetFullManagerName(System.String)">
            <summary>
            Returns full manager name from short manager name.
            </summary>
            <param name="shortManagerName"></param>
            <returns>Full manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IResourceNameParser.GetShortManagerName(System.String)">
            <summary>
            Returns short manager name from full manager name.
            </summary>
            <param name="fullManagerName"></param>
            <returns>Short manager name.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISchemaRightPositionsActualizer">
            <summary>
            Provides a means of actualizing entity schema operation right positions. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISchemaRightPositionsActualizer.ActualizePositions(System.Guid)">
            <summary>
            Actualize entity schema right positions.
            </summary>
            <param name="schemaUId">Schema UId for position actualization.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISchemaRightPositionsActualizer.GetDuplicatedRightPositionsSchemaUIds">
            <summary>
            Get list of schema UIds, which right positions have duplicates.
            </summary>
            <returns>List of schema UIds.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISourceControlAuthManager">
            <summary>
            ######### ######### ### ###### # ############### # #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.SourceControlAuthDescriptors">
            <summary>
            ############# ############### ###### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.Uris">
            <summary>
            ############# ##### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.SourceControlDescriptors">
            <summary>
            ############# ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.UseSourceControlAuthentication">
            <summary>
            #######, ############ ## ### ############## ####### ######## ######.
            </summary>
            <value>
            <c>true</c>, #### ############ ### ############## ####### ######## ######, ##### - <c>false</c>.
            </value>
            <remarks> ######## ## #########: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlAuthManager.SourceControlAuthPath">
            <summary>
            #### # #####, ### ######## ################## ###### ######### ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            ########## ############### ###### #########.
            </summary>
            <param name="sourceUri">##### #########.</param>
            <returns>########## ######### <see cref = "T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/> ### 
            ######### # ####### <paramref name = "sourceUri"/>. #### ######### # ##### ####### ## #######, ##### 
            ############ ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetIdByUri(System.Uri)">
            <summary>
            ########## ############# #########.
            </summary>
            <param name="sourceUri">##### #########.</param>
            <returns>############# ######### # ####### <paramref name = "sourceUri"/>. #### ######### # ##### ####### 
            ## #######, ##### ############ ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            ########## ##### #########.
            </summary>
            <param name="descriptorId">############# #########.</param>
            <param name="packageName">######## ######. ############## ########, ######## ## ######### - <c>null</c>.
            </param>
            <returns>##### ######### # ############### <paramref name = "descriptorId"/>. #### ######### # ##### 
            ############### ## #######, ##### ############ ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            ######### ##### # ###### ####### # #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            ######### ########## #########.
            </summary>
            <param name="sourceControlDescriptor">########## #########.</param>
            <returns>############# #########, ########## ######## ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.DeleteRepository(System.Guid)">
            <summary>
            ####### ########## #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            ##########, ########## ## ######, ####### ######### ## ######## #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <returns><c>true</c>, #### ## ######### ######### #### ## #### #####; # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            ########## ########## ######### # ######## ###############.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <returns>########## ######### <see cref = "T:Terrasoft.Core.Packages.SourceControlDescriptor"/> ### 
            ######### # ############### <paramref name = "repositoryId"/> #### <c>null</c>, #### ######### # ##### 
            ############### ## #######.</returns>
        </member>
        <member name="E:Terrasoft.Core.Packages.ISourceControlClient.Conflict">
            <summary>
            Event fires up in case of conflict while update from SVN or in case of conflict while processing existing
            working copy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ValidateAccessibility(System.Uri)">
            <summary>
            ######### ########### ####### ############ # ####### ######## ###### ## ######### ####.
            </summary>
            <param name="sourceControlUri">#### # ##### ### ##### ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ValidateAccessibility(System.String)">
            <summary>
            ######### ########### ####### ############ # ####### ######## ###### ## #### # ######### ### ######### 
            ##########.
            </summary>
            <param name="workingCopyPath">#### # ######### ########## ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            ######### ##### # ###### ####### # #########.
            </summary>
            <param name="sourceUri">#### # ######## ##### ######### ####### ######## ######.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetUriFromWorkingCopy(System.String)">
            <summary>
            ## ######### #### # ##### ####### ##### ########## #### # ######## ##### ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>#### # ######## ##### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsUnderSourceControl(System.String)">
            <summary>
            #########, ######### ## ######### ##### ####### ##### ### ######## ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### #####, #### # ####### ###### # ######### <paramref name = "workingCopyPath"/>,
            ######### ### ######## ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.CheckOut(System.Uri,System.String,System.Int32,System.Boolean)">
            <summary>
            ######### ###### ######## ##### # ###### ## ####### ######## ###### # ######### ##### ####### #####.
            </summary>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="revisionNumber">##### #######, ######### ####### ###### #### #########. ##############
            ########, ## ######### ##### <c>0</c>.</param>
            <param name="useInfinityDepth">Infinity checkout depth flag. Optional.
            <c>true</c> to check out files and subdirectories, <c>false</c> to check out files only in specified
            directory. Default value: <c>true</c></param>
            <returns>##### ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Update(System.String,System.Int32,System.Boolean)">
            <summary>
            ######### ########## ##### # ###### ## ####### ######## ###### # ######### ##### ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="revisionNumber">##### #######, ######### ####### ###### #### #########. ##############
            ########, ## ######### ##### <c>0</c>.</param>
            <param name="useInfinityDepth">Infinity update depth flag. Optional.
            <c>true</c> to update files and subdirectories, <c>false</c> to update files only in specified
            directory. Default value: <c>true</c></param>
            <returns>##### ########### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetRootDirectories(System.Uri)">
            <summary>
            ########## ############ #### ##### ####### ###### ############ ######## ##### ####### ######## ######.
            </summary>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <returns>############# #### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Commit(System.String,System.String)">
            <summary>
            ######### ######### ## ############ ######### ##### ####### ##### # ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
            <returns>##### ####### ########### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Commit(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Commits changes from specified paths in working copy to source control system.
            </summary>
            <param name="workingCopyPath">Path to local working copy.</param>
            <param name="paths">Set of paths to changes in working copy.</param>
            <param name="logMessage">Commit message. Optional.</param>
            <returns>Revision number after commit.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Import(System.String,System.Uri,System.String)">
            <summary>
            ######### # ######### ####### ######## ###### ###### ###### # ##### ## ######## ############ #####.
            </summary>
            <param name="localPath">#### # ############ #####.</param>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
            <returns>##### ####### ########### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            ####### ########## # ######### ###### # ####### ######## ######.
            </summary>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="revisionNumber">##### #######, # ####### #### ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Lock(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            ######### ###### # ######## ###### ## ###### ####### ######## ######.
            </summary>
            <param name="localFilePaths">###### ######### ##### # ######.</param>
            <param name="isForceLock">#######, ######## ## ########## ##############. ############## ########.
            ######## ## ######### - <c>false</c>.</param>
            <returns><c>true</c>, #### ##### ## ###### <paramref name = "localFilePaths"/> ############# # #######
            ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Lock(System.String,System.Boolean)">
            <summary>
            ######## ###### # ######### ##### ## ###### ####### ######## ######.
            </summary>
            <param name="localFilePath">######### #### #####.</param>
            <param name="isForceLock">#######, ######## ## ########## ##############. ############## ########.
            ######## ## ######### - <c>false</c>.</param>
            <returns><c>true</c>, #### #### <paramref name = "localFilePath"/> ############ # ####### ######## ######; 
            # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Unlock(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ####### ########## # ######## ###### ## ###### ####### ######## ######.
            </summary>
            <param name="localFilePaths">###### ######### ##### # ######.</param>
            <returns><c>true</c>, #### ##### ## ###### <paramref name = "localFilePaths"/> ############## # ####### 
            ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.UnlockContent(System.String)">
            <summary>
            ####### ########## ## ###### ####### ######## ###### ## #### ######, ####### ######### # ######### 
            ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ##### ## ####### ##### <paramref name = "workingCopyPath"/> ############## 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            ####### ########## ## ###### ####### ######## ###### ## #### ######, ####### ######### ## ######### 
            #####.
            </summary>
            <param name="workingCopyPaths">###### ######### #####.</param>
            <returns><c>true</c>, #### ##### ## ######### ##### <paramref name = "workingCopyPaths"/> ############## 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Exists(System.Uri)">
            <summary>
            ##########, ########## ## ######## #### # ######### ####### ######## ######.
            </summary>
            <param name="sourceControlFileUri">#### # ##### # ######### ####### ######## ######.</param>
            <returns><c>true</c>, #### # ######### ########## #### <paramref name = "sourceControlFileUri"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Add(System.String)">
            <summary>
            ######### ############ #### # ######### ####### ##### ####### ######## ######.
            </summary>
            <param name="workingCopyFilePath">#### # ##### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsLocked(System.String)">
            <summary>
            #########, ############ ## #### ## ###### ####### ######## ######.
            </summary>
            <param name="localFilePath">######### #### # #####.</param>
            <returns><c>true</c>, #### #### <paramref name = "localFilePath"/> ############ ## ###### ####### ######## 
            ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsLockedByCurrentUser(System.String)">
            <summary>
            #########, ############ ## #### ## ###### ####### ######## ###### ####### #############.
            </summary>
            <param name="localFilePath">######### #### # #####.</param>
            <returns><c>true</c>, #### #### <paramref name = "localFilePath"/> ############ ####### ############# 
            ## ###### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsLockedByOtherUser(System.String)">
            <summary>
            #########, ############ ## #### ## ###### ####### ######## ###### ## ####### #############.
            </summary>
            <param name="localFilePath">######### #### # #####.</param>
            <returns><c>true</c>, #### #### <paramref name = "localFilePath"/> ############ ###### ############# 
            ## ###### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            ########## ###### ######### ##### # ######, ####### ##### ############# ## ###### ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="itemLocalPath">######### ####, ## ######## ############ ##### ### ############.</param>
            <param name="itemName">### ########.</param>
            <returns>###### ######### ##### # ######, ####### ######### # <paramref name = "itemLocalPath"/> # #######
            ##### #### ############# ## ###### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            ########## ###### ######### ##### # ######, ####### ############# ## ###### ####### ######## ###### #######
            #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>###### ######### ##### # ######, ####### ######### # <paramref name = "workingCopyPath"/> # 
            ####### ############# ## ###### ####### ######## ###### ####### #############.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetIsFilesHaveForeignLock(System.String)">
            <summary>
            ##########, ####### ## ## ########## #### ########, ############### ###### #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ############ #######, ############## ###### #############, # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetHeadRevisionNumber(System.Uri)">
            <summary>
            ########## ##### ######### ####### ### ########## #### # ####### ######## ######.
            </summary>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <returns>##### ######### ####### ### #### <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.Revert(System.String)">
            <summary>
            ######## ######### ## ######### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### #### ####### #########; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            ########## ############ ####### ######, ############### ## ###### ####### ######## ###### #######
            #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>############# ##### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ApplySourceControlChanges(System.String)">
            <summary>
            ############# ######### ###### # ####### ######## ###### # ############ # ########## ###### # ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.SetPropertyMimeType(System.String)">
            <summary>
            ############# ### ######, ########### # ######### ######### ## #### <paramref name = "workingCopyPath"/>, 
            ######## MimeType ## #########, ########### ## ##, ### #### ## ###### ########### # ######## ####### 
            ######### ######## ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            ## ########## #### ## ####### ######## ###### ####### ##########, #### ### ## ##########.
            </summary>
            <param name="directoryUri">#### # ##########.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            ## ######### ##### ## ####### ######## ###### ####### ##########, #### ### ## ##########.
            </summary>
            <param name="directoryUries">#### # ###########.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlClient.ProcessWorkingCopyConflicts(System.String)">
            <summary>
            In case of conflicts in existing working copy fire up Conflict event.
            </summary>
            <param name="workingCopyPath">Path to a working copy.</param>
            <summary>Do nothing if nobody is subscribed to Conflict event.</summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISourceControlManager.ConflictPaths">
            <summary>
            Collection of paths to conflicted files.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsUpdateNeed(System.String,System.Int32)">
            <summary>
            ########## ##### ####### ####### ##### # ####### ####### ####### ####### ######## ###### # ##########, 
            ########## ## ########## ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="workingRevisionNumber">##### ####### ####### ####### ######## ######.</param>
            <returns><c>true</c>, #### ##### ####### ####### ##### ###### ###### ####### ####### ####### ######## 
            ###### (########## ########## ####### #####); ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Update(System.Uri,System.String,System.Int32,System.Boolean)">
            <summary>
            ######### ##### # ##### ## ####### ######## ###### # ######### ##### ####### #####.
            </summary> 
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="targetWorkingCopyPath">#### # ####### #####.</param>
            <param name="revisionNumber">##### #######, ######### ####### ###### #### #########.
            ######## <paramref name="revisionNumber"/> ######## ######## ## ######### 0.
            ######## <paramref name="revisionNumber"/> ##### #### ###### #############.</param>
            <param name="useInfinityDepth">Infinity update depth flag. Optional.
            <c>true</c> to update files and subdirectories, <c>false</c> to update files only in specified
            directory. Default value: <c>true</c></param>
            <result>##### ########### #######.</result>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetRootDirectories(System.Uri)">
            <summary>
            ########## ############ #### ##### ####### ###### ############ ######## ##### ####### ######## ######.
            </summary>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <returns>############# #### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.ValidateAccessibility(System.Uri)">
            <summary>
            ######### ########### ####### ############ # ####### ######## ###### ## ######### ####.
            </summary>
            <param name="sourceUri">#### # ##### ### ##### ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.ValidateAccessibility(System.String)">
            <summary>
            ######### ########### ####### ############ # ####### ######## ###### ## #### # ######### ######### ### 
            ######### ##########.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            ######### ##### # ###### ####### # #########.
            </summary>
            <param name="sourceUri">#### # ######## ##### ######### ####### ######## ######.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Commit(System.String,System.Int32,System.String)">
            <summary>
            ######### ######### ## ############ ######### ##### ####### ##### # ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="workingRevisionNumber">##### ####### ####### ####### ######## ######.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
            <returns>##### ####### ########### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Commit(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Commits changes from specified paths in working copy to source control system.
            </summary>
            <param name="workingCopyPath">Path to local working copy.</param>
            <param name="paths">Set of paths to changes in working copy.</param>
            <param name="workingRevisionNumber">Working source control revision number.</param>
            <param name="logMessage">Commit message. Optional.</param>
            <returns>Revision number after commit.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Import(System.String,System.Uri,System.String)">
            <summary>
            ######### # ######### ####### ######## ###### ###### ###### # ##### ## ######## ############ #####.
            </summary>
            <param name="localPath">#### # ############ #####.</param>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
            <returns>##### ####### ########### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            ####### ########## # ######### ###### # ####### ######## ######.
            </summary>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="revisionNumber">##### #######, # ####### #### ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsUnderSourceControl(System.String)">
            <summary>
            #########, ############## ## ######## ############ ### ######## #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ### ##### <paramref name = "workingCopyPath"/> ############## ########
            ############; ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.UnlockContent(System.String)">
            <summary>
            ####### ########## ## ###### ####### ######## ###### ## #### ######, ####### ######### # ######### 
            ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ##### ## ####### ##### <paramref name = "workingCopyPath"/> ############## 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            ####### ########## ## ###### ####### ######## ###### ## #### ######, ####### ######### ## ######### 
            #####.
            </summary>
            <param name="workingCopyPaths">###### ######### #####.</param>
            <returns><c>true</c>, #### ##### ## ######### ##### <paramref name = "workingCopyPaths"/> ############## 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Unlock(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ####### ########## # ######## ###### ## ###### ####### ######## ######.
            </summary>
            <param name="localFilePaths">###### ######### ##### # ######.</param>
            <returns><c>true</c>, #### ##### ## ###### <paramref name = "localFilePaths"/> ############## # ####### 
            ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Revert(System.String)">
            <summary>
            ######## ######### ## ######### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### #### ####### #########; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Lock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            ############# ########## ## ###### ####### ######## ###### #### ######, ####### ######### ## ######### 
            ##### # ####### #####.
            </summary>
            <param name="localFilePaths">#### # ###### # ####### #####.</param>
            <returns><c>true</c>, #### ##### <paramref name = "localFilePaths"/> ## ####### ##### ############# 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            ########## ###### ######### ##### # ######, ####### ##### ############# ## ###### ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="itemLocalPath">######### ####. ######### ########## ## ####### ####### ##### ### ############.
            </param>
            <param name="itemName">### ########.</param>
            <returns>###### ######### ##### # ######, ####### ######### # <paramref name = "itemLocalPath"/> # #######
            ##### #### ############# ## ###### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            ########## ###### ######### ##### # ######, ####### ############# ## ###### ####### ######## ###### #######
            #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>###### ######### ##### # ######, ####### ######### # <paramref name = "workingCopyPath"/> # 
            ####### ############# ## ###### ####### ######## ###### ####### #############.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            ########## ############ ####### ######, ############### ## ###### ####### ######## ###### #######
            #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>############# ##### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetLockedInWorkingCopyFilesByCurrentUser(System.String)">
            <summary>
            Returns an enumeration of the file paths that are locked in working copy by current user.
            </summary>
            <param name="workingCopyPath">Working copy path.</param>
            <returns>Collection of locked files paths.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsPackageElementHasForeignLock(System.String)">
            <summary>
            ##########, ####### ## ## ########## #### ########, ############### ###### #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ############ #######, ############## ###### #############, # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.Exists(System.Uri)">
            <summary>
            ##########, ########## ## ######## #### # ######### ####### ######## ######.
            </summary>
            <param name="sourceControlFileUri">#### # ##### # ######### ####### ######## ######.</param>
            <returns><c>true</c>, #### # ######### ########## #### <paramref name = "sourceControlFileUri"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetIsLockedByOtherUser(System.String)">
            <summary>
            #########, ############ ## #### ## ###### ####### ######## ###### ## ####### #############.
            </summary>
            <param name="localFilePath">######### #### # #####.</param>
            <returns><c>true</c>, #### #### <paramref name = "localFilePath"/> ############ ###### #############
            ## ###### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.ApplySourceControlChanges(System.String)">
            <summary>
            ############# ######### ###### # ####### ######## ###### # ############ # ########## ###### # ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.GetHeadRevisionNumber(System.Uri)">
            <summary>
            ########## ##### ######### ####### ### ########## #### # ####### ######## ######.
            </summary>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <returns>##### ######### ####### ### #### <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            ## ########## #### ## ####### ######## ###### ####### ##########, #### ### ## ##########.
            </summary>
            <param name="directoryUri">#### # ##########.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISourceControlManager.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            ## ######### ##### ## ####### ######## ###### ####### ##########, #### ### ## ##########.
            </summary>
            <param name="directoryUries">#### # ###########.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISvnItemStatus">
            <summary>
            Provides SVN item properties.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISvnItemStatus.NodeKind">
            <summary>
            Item SVN kind.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISvnItemStatus.LocalContentStatus">
            <summary>
            Item SVN status.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISvnItemStatus.Path">
            <summary>
            Relative path to item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISvnItemStatus.FullPath">
            <summary>
            Absolute path to item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISvnItemStatus.Conflicted">
            <summary>
            Indicates whether an item is conflicted.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISystemPackage">
            <summary>
            Provides properties of system package.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISystemPackage.Name">
            <summary>
            Name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ISystemPackage.InstallType">
            <summary>
            Package install type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.ISystemPackageManager">
            <summary>
            Defines methods to work with system packages.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISystemPackageManager.Add(Terrasoft.Core.Packages.Package)">
            <summary>
            Adds <paramref name="package"/> to the collection of system packages.
            </summary>
            <param name="package">Package.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISystemPackageManager.Add(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            Adds packages in specified collection to the collection of system packages.
            </summary>
            <param name="packages">Collection of packages.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISystemPackageManager.Remove(System.Guid)">
            <summary>
            Removes package with the specified UId from the collection of system packages.
            </summary>
            <param name="packageUId">Package UId.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISystemPackageManager.Remove(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            Removes packages with UIds in specified collection from the collection of system packages.
            </summary>
            <param name="packageUIds">Collection of package UIds.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.ISystemPackageManager.Save(Terrasoft.Core.Packages.PackageInstallOptions)">
            <summary>
            Saves current collection of system packages.
            </summary>
            <param name="installOptions">Installation options.</param>
            <returns>
            Returns <c>true</c> if packages have been installed successfully. Otherwise returns <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ItemValidationMessage">
            <summary>
            ######## ########## # ########### ######## ######## ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ItemValidationMessage.#ctor(Terrasoft.Core.Packages.Descriptor,Terrasoft.Common.ResultMessage)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Packages.ItemValidationMessage"/> ### ######### ######## ############.
            </summary>
            <param name="item">####### ############.</param>
            <param name="message">######### <see cref="T:Terrasoft.Common.ResultMessage"/> # ########### # ########### ########.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.ItemValidationMessage.Item">
            <summary>
            ####### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ItemValidationMessage.Message">
            <summary>
            ######### # ########### # ########### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.LockerManager">
            <summary>
            ######## ############ ######### ####### # ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.#ctor(Terrasoft.Core.Packages.ISourceControlManager,System.String)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.LockerManager"/>.
            </summary>
            <param name="sourceControlManager">######## ####### ######## ######.</param>
            <param name="packageCopyPath">#### # ###### ####### #####.</param>
        </member>
        <member name="E:Terrasoft.Core.Packages.LockerManager.LockError">
            <summary>
            ####### ### ############# ###### ############ ######## # ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockPackage(System.String,System.String@)">
            <summary>
            ######### ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="message">C####### ######### ## ######, #### ##### <paramref name = "packageName"/> ## 
            ############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "packageName"/> ############ # ####### ######## ######; 
            # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.ExistsPackage(System.String)">
            <summary>
            ##########, ########## ## ##### <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "packageName"/> ########## # ######### ####### ######## 
            ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockPackage(System.String)">
            <summary>
            ############ ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "packageName"/> ############# ## ###### ####### ######## 
            ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchema(System.String,System.String,System.String@)">
            <summary>
            ######### ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <param name="message">C####### ######### ## ######, #### ##### <paramref name = "schemaName"/> ## ###### 
            <paramref name = "packageName"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchemas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageSchemaNames">###### #### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## ####
            <paramref name = "packageSchemaNames"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ##### ## ###### #### <paramref name = "packageSchemaNames"/> #############
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.ExistsSchema(System.String,System.String)">
            <summary>
            ##########, ########## ## ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/> #
            ######### ####### ######## ######. ##### ######## ######### ### ###### ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <returns><c>true</c>, #### ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/>
            ########## # ######### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockSchema(System.String,System.String)">
            <summary>
            ############ ######### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <returns><c>true</c>, #### ##### <paramref name = "schemaName"/> ## ###### <paramref name = "packageName"/>
            ############## ## ###### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSqlScript(System.String,System.String,System.String@)">
            <summary>
            ######### ######### SQL-######## # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <param name="message">C####### ######### ## ######, #### SQL-######## <paramref name = "sqlScriptName"/> ##
            ###### <paramref name = "packageName"/> ## ############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> ############ # ####### ######## ######; # ######### ###### — ########
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSqlScripts(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### SQL-######## # ####### ######## ######.
            </summary>
            <param name="packageSqlScriptNames">###### SQL-######### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## SQL-#########
            <paramref name = "packageSqlScriptNames"/> ## ############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### SQL-######## ## ###### SQL-#########
            <paramref name = "packageSqlScriptNames"/> ############# # ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.SqlScriptExists(System.String,System.String)">
            <summary>
            ##########, ########## ## SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <returns><c>true</c>, #### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> ########## # ######### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockSqlScript(System.String,System.String)">
            <summary>
            ############ ######### SQL-######## # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <returns><c>true</c>, #### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/> ############# ## ###### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchemaData(System.String,System.String,System.String@)">
            <summary>
            ######### ########e ###### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <param name="message">C####### ######### ## ######, #### ###### ##### <paramref name = "schemaDataName"/> ##
            ###### <paramref name = "packageName"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> ############# # ####### ######## ######; # ######### ###### — ########
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockSchemaDatas(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ###### #### # ####### ######## ######.
            </summary>
            <param name="packageSchemaDataNames">###### ###### #### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## ###### ####
            <paramref name = "packageSchemaDataNames"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ###### #### ## ###### ###### #### <paramref name = "packageSchemaDataNames"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.SchemaDataExists(System.String,System.String)">
            <summary>
            ##########, ########## ## ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> ########## # ######### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockSchemaData(System.String,System.String)">
            <summary>
            ############ ######### ###### ##### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <returns><c>true</c>, #### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/> ############## ## ###### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockAssembly(System.String,System.String,System.String@)">
            <summary>
            ######### ######### ###### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <param name="message">C####### ######### ## ######, #### ###### <paramref name = "assemblyName"/> ##
            ###### <paramref name = "packageName"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> ############# # ####### ######## ######; # ######### ###### — ########
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockAssemblies(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ###### # ####### ######## ######.
            </summary>
            <param name="packageAssemblyNames">###### ###### ### ##########.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ## ######
            <paramref name = "packageAssemblyNames"/> ## #############; # ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ###### ## ###### ###### <paramref name = "packageAssemblyNames"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.AssemblyExists(System.String,System.String)">
            <summary>
            ##########, ########## ## ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> # ######### ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <returns><c>true</c>, #### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> ########## # ######### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockAssembly(System.String,System.String)">
            <summary>
            ############ ######### ###### # ####### ######## ######.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <returns><c>true</c>, #### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/> ############## ## ###### ####### ######## ######; # ######### ###### —
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.UnlockElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            ############ ######### ######## ###### # ####### ######## ######.
            </summary>
            <param name="packageElementsInfo">###### ############# ######### ######.</param>
            <param name="elementsType">### ######### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.GetIsPackageElementHasForeignLock(System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Determines whether an element is locked by another user.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Element name.</param>
            <param name="elementType">Element type <paramref name = "elementName"/>.</param>
            <returns><c>true</c>, if element exists in version control and is locked by another user.
            Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.GetIsPackageHasForeignLock(System.String)">
            <summary>
            ##########, ############ ## ##### ###### #############.
            </summary>
            <param name="packageName">### ######.</param>
            <returns><c>true</c>, #### ##### ############ ###### #############, # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.LockerManager.TryLockPackageElements(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.PackageElementInfo},System.String@)">
            <summary>
            ######### ######### ######## ###### # ####### ######## ######.
            </summary>
            <param name="packageElementsInfo">###### ############# ######### ######.</param>
            <param name="message">C####### ######### ## ######, #### #### ## #### ####### ###### ## ### ############; #
            ######### ###### — ###### ######.</param>
            <returns><c>true</c>, #### ### ######## ###### ## ###### <paramref name = "packageElementsInfo"/>
            ############# # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.ModuleDescriptor">
            <summary>
            Describes compiled .NET module.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.Name">
            <summary>
            Name of package descriptor.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidNameException">Throws exception if <paramref name="value"/> 
            is not valid.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.PackageVersion">
            <summary>
            Package version.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.IntegratedModifiedOnUtc">
            <summary>
            Package and its content modification date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.SchemaResources">
            <summary>
            Returns package schema resource descriptors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.CoreResources">
            <summary>
            Returns package core resource descriptors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.IsUnderSourceControl">
            <summary>
            Returns true if package is under source control.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.Package.IsPackageDescriptorChanged">
            <summary>
            Gets or sets a value indicating whether the package descriptor is changed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.Package.FindSchemaResourceWithManager(System.String,System.String,System.String)">
            <summary>
            Finds schema resource descriptor.
            </summary>
            <param name="name">Schema name.</param>
            <param name="managerName">Manager name.</param>
            <param name="cultureName">Culture name.</param>
            <returns>Package schema resource descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.Package.FindSchemaResourceWithoutManager(System.String,System.String)">
            <summary>
            Finds schema resource descriptor.
            </summary>
            <param name="name">Schema name.</param>
            <param name="cultureName">Culture name.</param>
            <returns>Package schema resource descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.Package.FindSchemaResource(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaResourceDescriptor)">
            <summary>
            Finds schema resource descriptor.
            </summary>
            <param name="package">Package.</param>
            <param name="schemaResourceDescriptor">Schema resource descriptor.</param>
            <returns>Package schema resource descriptor.</returns>
            <remarks>If schema was renamed tries to find resource by previous name.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.Package.FindCoreResource(System.String,System.String)">
            <summary>
            Finds core resource descriptor.
            </summary>
            <param name="name">Core resource name.</param>
            <param name="cultureName">Culture name.</param>
            <returns>Package core resource descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary> 
            Returns binary representation of schema metadata. 
            </summary> 
            <param name="package">Target package.</param> 
            <param name="schema">Schema descriptor.</param> 
            <returns>Key-value pairs collection where <c>string</c> key represents schema's metadata or 
            descriptor column name and <c>Stream</c> value contains binary representation of metadata.</returns>
            <remarks>Descriptor and metadata are taken from database.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetCoreResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns core resources.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>Dictionary by name and culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetPackageResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns package resources.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>Dictionary by name and culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemaResource(System.String,System.String,System.String,System.String)">
            <summary>
            Returns package resources by schema and culture.
            </summary>
            <param name="packageName">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <param name="schemaName">Name of schema.</param>
            <param name="cultureName">Name of culture.</param>
            <param name="managerName">Name of manager.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetCoreResource(Terrasoft.Core.Packages.Package,System.String,System.String)">
            <summary>
            Returns core resources by manager and culture.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <param name="managerName">Name of manager.</param>
            <param name="cultureName">Name of culture.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemasSources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns sources of compiled package schemas.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>List of compiled package schemas sources and file names.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemaCs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Cs-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Cs-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemaJs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Js-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Js-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentDBProvider.GetSchemaLess(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Less-content.
            </summary>
            <param name="package">Schema's package.</param>
            <param name="schema">Schema whose content must be returned.</param>
            <returns>Stream of Less-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema metadata in binary representation.
            </summary>
            <param name="package">Package containing schema.</param>
            <param name="schema">Schema descriptor.</param>
            <returns>Dictionary of schema metadata in binary representation.</returns>
            <remarks>Metadata is obtained from file downloaded from repository.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetCoreResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns the core resources from <see cref="T:Terrasoft.Core.Packages.PackageContentFileProvider"/>.
            </summary>
            <param name="package">Package.</param>
            <returns>A collection of the manager names and culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetCoreResource(Terrasoft.Core.Packages.Package,System.String,System.String)">
            <summary>
            Returns core resources by manager and culture.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <param name="managerName">Name of manager.</param>
            <param name="cultureName">Name of culture.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetPackageResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns the package resources from <see cref="T:Terrasoft.Core.Packages.PackageContentFileProvider"/>.
            </summary>
            <param name="package">Package.</param>
            <returns>A collection of the schema names and culture.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetSchemaResource(System.String,System.String,System.String,System.String)">
            <summary>
            Returns package resources by schema and culture.
            </summary>
            <param name="packageName">Name of package.</param>
            <param name="schemaName">Name of schema.</param>
            <param name="cultureName">Name of culture.</param>
            <param name="managerName">Name of manager.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetSchemaCs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Cs-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Cs-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetSchemaJs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Js-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Js-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentFileProvider.GetSchemaLess(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Less-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Less-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetSchemaStreamValues(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema metadata in binary representation.
            </summary>
            <param name="package">Package containing schema.</param>
            <param name="schema">Schema descriptor.</param>
            <returns>Dictionary of schema metadata in binary representation.</returns>
            <remarks>Metadata is obtained from package archive.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetCoreResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns core resources.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>Resources collection.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetPackageResources(Terrasoft.Core.Packages.Package)">
            <summary>
            Returns package resources.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <returns>Resources collection.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetCoreResource(Terrasoft.Core.Packages.Package,System.String,System.String)">
            <summary>
            Returns core resources by manager and culture.
            </summary>
            <param name="package">Instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.</param>
            <param name="managerName">Name of manager.</param>
            <param name="cultureName">Name of culture.</param>
            <returns>Resources collection.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetSchemaResource(System.String,System.String,System.String,System.String)">
            <summary>
            Returns package resources by schema and culture.
            </summary>
            <param name="packageName">Name of package.</param>
            <param name="schemaName">Name of schema.</param>
            <param name="cultureName">Name of culture.</param>
            <param name="managerName">Name of manager.</param>
            <returns>Resources collection.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetSchemaCs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Cs-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Cs-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetSchemaJs(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Js-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Js-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageContentRepositoryProvider.GetSchemaLess(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>
            Returns schema's Less-content.
            </summary>
            <param name="package">An instance of <see cref="T:Terrasoft.Core.Packages.Package"/> class.
            Schema's package.</param>
            <param name="schema">An instance of <see cref="T:Terrasoft.Core.Packages.SchemaDescriptor"/> class.
            Schema whose content must be returned.</param>
            <returns>Stream of Less-content</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageDataHistoryUtilities.SaveNewRecordHistory(System.Guid,System.Guid,System.Guid)">
            <summary>
            Save new records history.
            </summary>
            <param name="recordId">Record Id.</param>
            <param name="packageId">Package Id.</param>
            <param name="schemaUId">Schema UId.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.IPackageDataHistoryUtilities.UninstallPackageData(System.Guid)">
            <summary>
            Uninstall package data.
            </summary>
            <param name="packageId">Package Id.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddPackages(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            Adds packages to the storage.
            </summary>
            <param name="packages">Packages.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the packages select query.
            </summary>
            <param name="select">Packages select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesSchemasExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the schemas select query.
            </summary>
            <param name="select">Schemas select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesDependenciesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the package dependencies select query.
            </summary>
            <param name="select">Package dependencies select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesSqlScriptExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the SQL-scripts select query.
            </summary>
            <param name="select">SQL-scripts select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadSqlScriptDependenciesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the SQL-script dependencies select query.
            </summary>
            <param name="select">SQL-script dependencies select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesDataExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the package data select query.
            </summary>
            <param name="select">Package data select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageDBStorage.AddLoadPackagesAssembliesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            Adds additional filters to the package assemblies select query.
            </summary>
            <param name="select">Package assemblies data select query.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageElementLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Unlocks element in version control system and database.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Element name.</param>
            <param name="elementId">Element identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageElementUtilities.TryGetIsPackageElementHasForeignLock(System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType,System.Boolean@,System.String@)">
            <summary>
            Returns flag that indicates whether package element has foreign lock.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Element name.</param>
            <param name="type">Package element type.</param>
            <param name="hasForeignLock">Flag that indicates whether element has foreign lock.</param>
            <param name="errorMessage">Error message.</param>
            <returns>Flag that indicates success of current function.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageFileStorage">
            <summary>
            Represents file system packages storage.
            Provides support for saving, updating and deleting packages in file system.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFileStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Packages.PackageFileStorage"/> class.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageFlatUriGenerator">
            <summary>
            ############# ###### ### ######### ##### # ######### ####### ######## ###### # ###### ###### ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFlatUriGenerator.GetPackageUri(System.Uri,System.String,System.String)">
            <summary>
            ########## ###### #### # ###### # ######### ####### ######## ###### # ###### ###### ######.
            </summary>
            <param name="repositoryUri">######## #### # ###### # ######### ####### ######## ######.</param>
            <param name="packageName">### ######.</param>
            <param name="version">###### ######.</param>
            <returns>###### #### # ###### # ######### ####### ######## ###### # ###### ###### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFlatUriGenerator.GetPackageRootUri(System.Uri,System.String)">
            <summary>
            ########## ###### #### # ##### ###### # ######### ####### ######## ######.
            </summary>
            <param name="repositoryUri">######## #### # ###### # ######### ####### ######## ######.</param>
            <param name="packageName">### ######.</param>
            <returns>###### #### # ##### ###### # ######### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageFlatUriGenerator.GetPackageBranchesUri(System.Uri,System.String)">
            <summary>
            ########## ###### #### # ###### ###### # ######### ####### ######## ######.
            </summary>
            <param name="repositoryUri">######## #### # ###### # ######### ####### ######## ######.</param>
            <param name="packageName">### ######.</param>
            <returns>###### #### # ###### ###### # ######### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyManager.#ctor(Terrasoft.Core.UserConnection,System.Guid,Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.Packages.PackageHierarchyManager"/>.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="workspaceId">Workspace unique identifier.</param>
            <param name="dbExecutor">Instance of <see cref="P:Terrasoft.Core.Packages.PackageHierarchyManager.DBExecutor"/>, provides DB query execution.
            Optional parameter. Default value is <c>null</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyManager.ClearPackageHierarchy">
            <summary>
            Clears package hierarchy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageHierarchyManager.UpdatePackageHierarchy">
            <summary>
            Updates package hierarchy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageIdentifierMapper.#ctor(Terrasoft.Core.DB.ISystemQueryExecutor)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Packages.PackageIdentifierMapper"/>
            </summary>
            <param name="queryExecutor">Implementation of <see cref="T:Terrasoft.Core.DB.ISystemQueryExecutor"/></param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Thrown when <paramref name="queryExecutor"/>
            is null</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageIdentifierMapper.GetIdByUId(System.Guid,System.Guid)">
            <summary>
            Gets package Id for provided <paramref name="uid"/> and <paramref name="workspaceId"/>
            </summary>
            <param name="uid">Package UId</param>
            <param name="workspaceId">Workspace Id</param>
            <returns>Package Id</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when package Id 
            for provided parameters isn't found</exception>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">Thrown when either <paramref name="uid"/> or
            <paramref name="workspaceId"/> is empty</exception>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageInstallOptions">
            <summary>
            Install options for <see cref="T:Terrasoft.Core.Packages.PackageInstallUtilities"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageInstallOptions.Default">
            <summary>
            Default options for package installation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageInstallOptions.ExecuteValidateActions">
            <summary>
            Indicates whether validation actions needed while updating system database structure.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SchemaDBActionsAddingResult">
            <summary>
            Result of adding actions for entity schema structure changing.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Packages.SchemaDBActionsAddingResult.Added">
            <summary>
            Actions were added.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Packages.SchemaDBActionsAddingResult.Skipped">
            <summary>
            Actions were skipped.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.InstallMessageEventArgs">
            <summary>
            Provides message about install process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.InstallMessageEventArgs.#ctor(Terrasoft.Common.MessageType,System.String)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.Packages.InstallMessageEventArgs"/>.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="message">Message.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.InstallMessageEventArgs.MessageType">
            <summary>
            Type of the message.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.InstallMessageEventArgs.Message">
            <summary>
            Message.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs">
            <summary>
            Provides data about adding actions for entity schema structure changing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs.#ctor(System.Guid,System.String,Terrasoft.Core.Packages.SchemaDBActionsAddingResult,System.String,System.TimeSpan)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs"/>.
            </summary>
            <param name="uid">Saving schema UId.</param>
            <param name="name">Saving schema name.</param>
            <param name="result">Result of adding actions.</param>
            <param name="packageName">Saving schema package name.</param>
            <param name="duration">Duration of adding actions.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs.UId">
            <summary>
            Saving schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs.Name">
            <summary>
            Saving schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs.Result">
            <summary>
            Result of adding actions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs.PackageName">
            <summary>
            Saving schema package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaDBActionsAddedEventArgs.Duration">
            <summary>
            Duration of adding actions.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.UpdatePackageHierarchy(Terrasoft.Core.UserConnection,System.Guid,Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Updates package hierarchy.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="dbExecutor">Instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/>, provides DB query execution.</param>
            <param name="workspaceId">Workspace unique identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.ClearPackageHierarchy(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Clears package hierarchy.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="workspaceId">Workspace unique identifier. Optional parameter, default value is <c>null</c>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.ClearPackageDependencies(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Clears package dependencies.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="workspaceId">Workspace unique identifier. Optional parameter, default value is <c>null</c>.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.InstallPackage(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid,Terrasoft.Common.ResultMessageCollection@)">
            <summary>
            Installs the <paramref name="rootPackageName" /> package and its dependencies to the database from the 
            version control system storage.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="rootPackageName">Name of the loaded package, from which the dependency hierarchy is built.
            </param>
            <param name="packageVersion">Version of the loaded package, from which the dependency hierarchy is built.
            </param>
            <param name="packageStorageId">The package repository Id.</param>
            <param name="resultMessages">
            Collection of messages that contains information about the process and result of setup.
            </param>
            <returns>Collection that contains information about the installed packages.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageInstallUtilities.UpdatePackage(Terrasoft.Core.UserConnection,System.String,Terrasoft.Common.ResultMessageCollection@)">
            <summary>
            Loads the <paramref name="rootPackageName" /> package and its dependencies to the database from the 
            version control system storage.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="rootPackageName">Name of the updated package, from which the dependency hierarchy is built.
            </param>
            <param name="resultMessages">
            Collection of messages that contains information about the process and result of update.
            </param>
            <returns>Collection that contains information about the updated packages.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageManager.CanDeletePackages(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysPackage},System.String@)">
            <summary>
            Checks availability of package to be deleted.
            </summary>
            <param name="packages">Packages.</param>
            <param name="errorMessage">Error message.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageManager.DeletePackage(Terrasoft.Core.Configuration.SysPackage)">
            <summary>
            Deletes package from workspace.
            </summary>
            <param name="package">Package.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageResourceComparer.GetNew(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue})">
            <summary>
            Returns new resource items depending on source and target collections.
            </summary>
            <param name="source">Source collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <param name="target">Target collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <returns>Collection of new <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageResourceComparer.GetChanged(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue})">
            <summary>
            Returns changed resource items depending on source and target collections.
            </summary>
            <param name="source">Source collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <param name="target">Target collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <returns>Collection of changed <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageResourceComparer.GetDeleted(System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue})">
            <summary>
            Returns deleted resource items depending on source and target collections.
            </summary>
            <param name="source">Source collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <param name="target">Target collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</param>
            <returns>Collection of deleted <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageResourceDescriptor.Name">
            <summary>
            Name of package resource descriptor.
            </summary>
            <exception cref="T:Terrasoft.Common.InvalidNameException">Throws exception if <paramref name="value"/> 
            is not valid.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageResourceDescriptor.CultureName">
            <summary>
            Gets or sets package resource culture name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageResourceDescriptor.IsLocalChanged">
            <summary>
            Gets or sets package resource local changed value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageResourceXmlSerializer.Serialize(System.IO.Stream,System.Collections.Generic.IEnumerable{Terrasoft.Core.Configuration.SysLocalizableValue},System.String)">
            <summary>
            Converting collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/> to <see cref="T:Terrasoft.Common.ResourcePackage"/>
            and serializing to stream
            </summary>
            <param name="stream">Stream for serialized data</param>
            <param name="entityCollection">Collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/></param>
            <param name="cultureName">Culture name</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageResourceXmlSerializer.Deserialize(System.IO.Stream,System.String)">
            <summary>
            Deserializing XML from stream to <see cref="T:Terrasoft.Common.ResourcePackage"/> object and converting to collection 
            of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/>
            </summary>
            <param name="resourceStream">Serialized data stream</param>
            <param name="cultureName">Culture name</param>
            <returns>Collection of <see cref="T:Terrasoft.Core.Configuration.SysLocalizableValue"/></returns>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageSchemaDataUtilities.SerializeColumnName">
            <summary>
            Gets or sets a value indicating whether column name is serialized.
            </summary>
            <value>
            <c>true</c> if column name is serialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageSourceControlStorage">
            <summary>
            ############# ###### ### ###### # ########## ####### # ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.#ctor(Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.ISourceControlAuthManager,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Packages.PackageSourceControlStorage"/>.
            </summary>
            <param name="sourceControlManager">######### ######### ####### ######## ######.</param>
            <param name="authManager">######## ########### # ####### ######## ######.</param>
            <param name="workingCopyPath">#### # ####### ##### #######.</param>
            <param name="installedPackages">############# #######, ############# # #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.#ctor(System.String,System.String,System.Guid,Terrasoft.Core.Packages.ISourceControlManager,Terrasoft.Core.Packages.ISourceControlAuthManager,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Packages.PackageSourceControlStorage"/> ### ######## ##########.
            </summary>
            <param name="rootPackageName">### ######, ## ######## ######## ########.</param>
            <param name="rootPackageVersion">###### ######, ## ######## ######## ########.</param>
            <param name="packageStorageId">############# ######### ######.</param>
            <param name="sourceControlManager">######### ######### ####### ######## ######.</param>
            <param name="authManager">######## ########### # ####### ######## ######.</param>
            <param name="workingCopyPath">#### # ####### ##### #######.</param>
            <param name="installedPackages">############# #######, ############# # #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.LoadInternal">
            <summary>
            ######### ###### # ## #############.
            </summary>
            <remarks>
            ######### ####### ########### ## ####### ######## ###### # ######## ####### # ######### 
            <see cref="P:Terrasoft.Core.Packages.PackageStorage.Packages"/>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.Load(System.String,System.String,System.Guid)">
            <summary>
            ######### ########### ###### # #########, ####### # ##########.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="packageVersion">###### ######.</param>
            <param name="repositoryId">############# #########.</param>
            <returns>########## <c>true</c> #### ######### ##### ### ######, ##### <c>false</c>.</returns>
            <remarks>
            ######### ####### ########### ## ####### ######## ###### # ######## ####### # #########
            <see cref="P:Terrasoft.Core.Packages.PackageStorage.Packages"/>.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageSourceControlStorage.LoadPackageDescriptors(System.String,System.String,System.Uri)">
            <summary>
            Loads packages by hierarchy except package content into storage since specified package.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="packageVersion">Package version.</param>
            <param name="sourceUri">Source version control system.</param>
            <remarks>
            Packages descriptors loads from version control system into file system and collection
            <see cref="P:Terrasoft.Core.Packages.PackageStorage.Packages"/>.
            </remarks>
        </member>
        <member name="F:Terrasoft.Core.Packages.PackageStorage.ResourceManagerName">
            <summary>
            Name of resources manager.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Packages.PackageStorage.ItemOperationError">
            <summary>
            Occurs when operation on item has finished with error.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageStorage.GetPackagesOrderByTopology">
            <summary>
            Returns hierarchical enumeration of packages.
            </summary>
            <returns>Hierarchical enumeration of packages.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageStorage.ActualizePackageResourcesState">
            <summary>
            Actualize resources state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageStorageChange.ManagerName">
            <summary>
            Schema resource manager name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageStorageChange.CultureName">
            <summary>
            Package resource culture name.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.ItemOperationErrorEventArgs">
            <summary>
            Provides information for <see cref="E:Terrasoft.Core.Packages.PackageStorage.ItemOperationError"/> event.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ItemOperationErrorEventArgs.#ctor(Terrasoft.Core.Packages.Descriptor,System.Exception)">
            <summary>
            Initializes new instance of <see cref="T:Terrasoft.Core.Packages.ItemOperationErrorEventArgs"/> class.
            </summary>
            <param name="descriptor">Instance of <see cref="P:Terrasoft.Core.Packages.ItemOperationErrorEventArgs.Descriptor"/> that describes erroneous item.</param>
            <param name="exception">Exception that caused item operation error.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.ItemOperationErrorEventArgs.Descriptor">
            <summary>
            Gets instance of <see cref="P:Terrasoft.Core.Packages.ItemOperationErrorEventArgs.Descriptor"/> that describes erroneous item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.ItemOperationErrorEventArgs.Exception">
            <summary>
            Gets exception that caused item operation error.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.PackageUriGeneratorFactory">
            <summary>
            ####### ####### ### ######### ##### # ######### ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageUriGeneratorFactory.CreateInstance">
            <summary>
            ########## ######### ########## <see cref="T:Terrasoft.Core.Packages.BasePackageUriGenerator"/>.
            </summary>
            <returns>######### ########## <see cref="T:Terrasoft.Core.Packages.BasePackageUriGenerator"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageUtilities.SetPackagesStateByInstallType(Terrasoft.Core.Packages.PackageStorage,Terrasoft.Core.Packages.PackageStorageObjectState,Terrasoft.Common.SysPackageInstallType)">
            <summary>
            ######### ###### # ######### ##### ######### # ######### #########.
            </summary>
            <param name="source">######### #######.</param>
            <param name="state">######### ######## #########.</param>
            <param name="installType">### ######### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageUtilities.SetPackageStateByCondition(Terrasoft.Core.Packages.PackageStorage,Terrasoft.Core.Packages.PackageStorageObjectState,System.Func{Terrasoft.Core.Packages.Package,System.Boolean})">
            <summary>
            ######### # ######### ######### ######, ####### ############# ########## #######.
            </summary>
            <param name="source">######### #######.</param>
            <param name="state">######### ######## #########.</param>
            <param name="getIsPackageCondition">####### ######## ###### # ######### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageUtilities.SetPackagesNotModifiedAndUnlocked(Terrasoft.Core.Packages.PackageStorage)">
            <summary>
            ####### ####### ############ # ########## ## #### ######### ######### #######.
            </summary>
            <param name="source">#########.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.PackageValidationOptions.ValidateHierarchy">
            <summary>
            Determines whether packages hierarchy has to be validated.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.HierarchyValidationFailEventArgs.#ctor(System.Exception)">
            <summary>
            Class constructor.
            </summary>
            <param name="exception">Hierarchy validation exeption.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.HierarchyValidationFailEventArgs.Exception">
            <summary>
            Hierarchy validation exeption.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageValidator.GetIsPackageValid(System.String)">
            <summary>
            Checks if package is valid in file system.
            </summary>
            <param name="packageName">Package name.</param>
            <returns><c>true</c> if package is valid, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageWebClient.DownloadFile(System.Uri,System.String)">
            <summary>
            Downloads the resource with the specified URI to a local file.
            </summary>
            <param name="address">The URI, from which to download data.</param>
            <param name="fileName">The name of the local file that is to receive the data.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.PackageWebClient.Dispose">
            <summary>
            Releases all resources used by the Web Client.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.ResourceNameParser.FindCultureNameFromResourceFileName(System.String)">
            <summary>
            Returns culture name from resource file name.
            </summary>
            <param name="fileName">Resource file name.</param>
            <returns>Culture name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ResourceNameParser.FindManagerNameFromCoreResourceFileName(System.String)">
            <summary>
            Returns manager name from resource file name.
            </summary>
            <param name="fileName">Resource file name.</param>
            <returns>Manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ResourceNameParser.FindSchemaNameFromDirectoryName(System.String)">
            <summary>
            Returns schema name from directory name.
            </summary>
            <param name="directoryName"></param>
            <returns>Schema name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ResourceNameParser.FindManagerNameFromDirectoryName(System.String)">
            <summary>
            Returns manager name from directory name.
            </summary>
            <param name="directoryName"></param>
            <returns>Manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ResourceNameParser.GetFullManagerName(System.String)">
            <summary>
            Returns full manager name from short manager name.
            </summary>
            <param name="shortManagerName"></param>
            <returns>Full manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.ResourceNameParser.GetShortManagerName(System.String)">
            <summary>
            Returns short manager name from full manager name.
            </summary>
            <param name="fullManagerName"></param>
            <returns>Short manager name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaDataLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Unlocks target schema data in version control system and database.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Schema data name.</param>
            <param name="elementId">Schema data identifier.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaDescriptor.IsExtended">
            <summary>
            Gets or sets a value indicating whether this schema is extended in a child package.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Unlocks target schema in version control system and database..
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Schema name.</param>
            <param name="elementId">Schema identifier.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaResourceDescriptor.Type">
            <summary>
            Package storage element type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaResourceDescriptor.ManagerName">
            <summary>
            Schema resource manager name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SchemaResourceDescriptor.BaseSchemaId">
            <summary>
            Gets or sets base schema Id.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SchemaRightPositionsActualizer">
            <summary>
            Provides a means of actualizing entity schema operation right positions. 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaRightPositionsActualizer.ActualizePositions(System.Guid)">
            <summary>
            Actualize entity schema right positions.
            </summary>
            <param name="schemaUId">Schema UId for position actualization.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SchemaRightPositionsActualizer.GetDuplicatedRightPositionsSchemaUIds">
            <summary>
            Get list of schema UIds, which right positions have duplicates.
            </summary>
            <returns>List of schema UIds.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddLoadPackagesSchemasExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            ######### ############## ####### # ####### ## ####### #### #######.
            </summary>
            <param name="select">###### ## ####### #### ####### ## #### ######.</param>
            <remarks>
            ######### ###### ### ####### #### ###### ######## ######.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddLoadPackagesDataExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            ######### ############## ####### # ####### ## ####### ###### #######.
            </summary>
            <param name="select">###### ## ####### ###### ####### ## #### ######.</param>
            <remarks>
            ######### ###### ### ####### ###### ######## ######.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddLoadPackagesAssembliesExtraFilters(Terrasoft.Core.DB.Select)">
            <summary>
            ######### ############## ####### # ####### ## ####### ###### #######.
            </summary>
            <param name="select">###### ## ####### ###### ####### ## #### ######.</param>
            <remarks>
            ######### ###### ### ####### ###### ######## ######.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.SinglePackageDBStorage.AddPackages(System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package})">
            <summary>
            ######### ####### ##### # ######### ####### ## ########### ###### #######.
            </summary>
            <param name="packages">######.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlAuthDescriptor">
            <summary>
            ############### ###### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlAuthDescriptor.#ctor(Terrasoft.Core.Packages.SourceControlDescriptor,System.String,System.String)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/>,
            ######### ######## ######## ### #######.
            </summary>
            <param name="sourceControlDescriptor">########## #########.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlAuthDescriptor.SourceControlDescriptor">
            <summary>
            ########## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlAuthDescriptor.Login">
            <summary>
            ##### # #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlAuthDescriptor.Password">
            <summary>
            ###### # #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlDescriptor">
            <summary>
            ########## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlDescriptor.#ctor(System.Guid,System.String,System.Uri,System.Boolean)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.SourceControlDescriptor"/>, 
            ######### ######## ######## ### #######.
            </summary>
            <param name="id">############# #########.</param>
            <param name="name">######## #########.</param>
            <param name="address">##### #########.</param>
            <param name="isActive">#######, ######## ## ##### ######### ########.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.Id">
            <summary>
            ############# #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.Name">
            <summary>
            ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.Address">
            <summary>
            ##### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlDescriptor.IsActive">
            <summary>
            #######, ######## ## ##### ######### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlManager">
            <summary>
            Source control system manager.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.#ctor(Terrasoft.Core.Packages.ISourceControlClient)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.SourceControlManager"/>, 
            ######### ######## <see cref="T:Terrasoft.Core.Packages.ISourceControlClient"/>.
            </summary>
            <param name="sourceControlClient">###### ####### ######## ######.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">########## ############, #### ######## 
            <paramref name="sourceControlClient"/> ## #####.</exception>
        </member>
        <member name="P:Terrasoft.Core.Packages.SourceControlManager.ConflictPaths">
            <summary>
            Collection of paths to conflicted files.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsUpdateNeed(System.String,System.Int32)">
            <summary>
            ########## ##### ####### ####### ##### # ####### ####### ####### ####### ######## ###### # ##########, 
            ########## ## ########## ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="workingRevisionNumber">##### ####### ####### ####### ######## ######.</param>
            <returns><c>true</c>, #### ##### ####### ####### ##### ###### ###### ####### ####### ####### ######## 
            ###### (########## ########## ####### #####); ##### - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">########## ############, #### ######### 
            <paramref name="workingCopyPath"/> ### <paramref name="workingRevisionNumber"/> ######## ############ 
            ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Update(System.Uri,System.String,System.Int32,System.Boolean)">
            <summary>
            ######### ##### # ##### ## ####### ######## ###### # ######### ##### ####### #####.
            </summary> 
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="targetWorkingCopyPath">#### # ####### #####.</param>
            <param name="revisionNumber">##### #######, ######### ####### ###### #### #########. ############## 
            ########, ## ######### ##### <c>0</c>. ######## <paramref name="revisionNumber"/> ##### #### ###### 
            #############.</param>
            <param name="useInfinityDepth">Infinity update depth flag. Optional.
            <c>true</c> to update files and subdirectories, <c>false</c> to update files only in specified
            directory. Default value: <c>true</c></param>
            <result>##### ########### #######.</result>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">########## ############, #### ## ##### 
            ##### ## ########## <paramref name="sourceUri"/> ### <paramref name="targetWorkingCopyPath"/>.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">########## ############, #### ######### 
            <paramref name="targetWorkingCopyPath"/> ### <paramref name="revisionNumber"/> ######## ############ 
            ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Revert(System.String)">
            <summary>
            ######## ######### ## ######### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### #### ####### #########; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetRootDirectories(System.Uri)">
            <summary>
            ########## ############ #### ##### ####### ###### ############ ######## ##### ####### ######## ######.
            </summary>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <returns>############# #### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.ValidateAccessibility(System.Uri)">
            <summary>
            ######### ########### ####### ############ # ####### ######## ###### ## ######### ####.
            </summary>
            <param name="sourceUri">#### # ##### ### ##### ####### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.ValidateAccessibility(System.String)">
            <summary>
            ######### ########### ####### ############ # ####### ######## ###### ## #### # ######### ######### ### 
            ######### ##########.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            ######### ##### # ###### ####### # #########.
            </summary>
            <param name="sourceUri">#### # ######## ##### ######### ####### ######## ######.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Commit(System.String,System.Int32,System.String)">
            <summary>
            ######### ######### ## ############ ######### ##### ####### ##### # ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="workingRevisionNumber">##### ####### ####### ####### ######## ######.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
            <returns>##### ####### ########### #########.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOutOfDateException">########## ############, #### 
            ##### ####### ####### ##### <paramref name = "workingCopyPath"/> ######, ### 
            <paramref name = "workingRevisionNumber"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Commit(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Commits changes from specified paths in working copy to source control system.
            </summary>
            <param name="workingCopyPath">Path to local working copy.</param>
            <param name="paths">Set of paths to changes in working copy.</param>
            <param name="workingRevisionNumber">Working source control revision number.</param>
            <param name="logMessage">Commit message. Optional.</param>
            <returns>Revision number after commit.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Import(System.String,System.Uri,System.String)">
            <summary>
            ######### # ######### ####### ######## ###### ###### ###### # ##### ## ######## ############ #####.
            </summary>
            <param name="localPath">#### # ############ #####.</param>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
            <returns>##### ####### ########### #########.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">########## ############, #### ######## 
            <paramref name="localPath"/> ######## ############ ########.</exception>
            <exception cref="T:Terrasoft.Common.SourceControlOperationIllegalUrlException">########## ############, 
            #### # ######### ####### ######## ###### ### ########## ##### ## #### <paramref name = "sourceUri"/>.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            ####### ########## # ######### ###### # ####### ######## ######.
            </summary>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="revisionNumber">##### #######, # ####### #### ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsUnderSourceControl(System.String)">
            <summary>
            #########, ############## ## ######## ############ ### ######## #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ### ##### <paramref name = "workingCopyPath"/> ############## ########
            ############; ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.UnlockContent(System.String)">
            <summary>
            ####### ########## ## ###### ####### ######## ###### ## #### ######, ####### ######### # ######### 
            ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ##### ## ####### ##### <paramref name = "workingCopyPath"/> ############## 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            ####### ########## ## ###### ####### ######## ###### ## #### ######, ####### ######### ## ######### 
            #####.
            </summary>
            <param name="workingCopyPaths">###### ######### #####.</param>
            <returns><c>true</c>, #### ##### ## ######### ##### <paramref name = "workingCopyPaths"/> ############## 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Unlock(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ####### ########## # ######## ###### ## ###### ####### ######## ######.
            </summary>
            <param name="localFilePaths">###### ######### ##### # ######.</param>
            <returns><c>true</c>, #### ##### ## ###### <paramref name = "localFilePaths"/> ############## # ####### 
            ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Lock(System.Collections.Generic.ICollection{System.String})">
            <summary>
            ############# ########## ## ###### ####### ######## ###### #### ######, ####### ######### ## ######### 
            ##### # ####### #####.
            </summary>
            <param name="localFilePaths">#### # ###### # ####### #####.</param>
            <returns><c>true</c>, #### ##### <paramref name = "localFilePaths"/> ## ####### ##### ############# 
            # ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            ########## ###### ######### ##### # ######, ####### ##### ############# ## ###### ####### ######## ######.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="itemLocalPath">######### ####. ######### ########## ## ####### ####### ##### ### ############.
            </param>
            <param name="itemName">### ########.</param>
            <returns>###### ######### ##### # ######, ####### ######### # <paramref name = "itemLocalPath"/> # #######
            ##### #### ############# ## ###### ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            ########## ###### ######### ##### # ######, ####### ############# ## ###### ####### ######## ###### #######
            #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>###### ######### ##### # ######, ####### ######### # <paramref name = "workingCopyPath"/> # 
            ####### ############# ## ###### ####### ######## ###### ####### #############.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            ########## ############ ####### ######, ############### ## ###### ####### ######## ###### #######
            #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns>############# ##### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetLockedInWorkingCopyFilesByCurrentUser(System.String)">
            <summary>
            Returns an enumeration of the file paths that are locked in working copy by current user.
            </summary>
            <param name="workingCopyPath">Working copy path.</param>
            <returns>Collection of locked files paths.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsPackageElementHasForeignLock(System.String)">
            <summary>
            ##########, ####### ## ## ########## #### ########, ############### ###### #############.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <returns><c>true</c>, #### ############ #######, ############## ###### #############, # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.Exists(System.Uri)">
            <summary>
            ##########, ########## ## ######## #### # ######### ####### ######## ######.
            </summary>
            <param name="sourceControlFileUri">#### # ##### # ######### ####### ######## ######.</param>
            <returns><c>true</c>, #### # ######### ########## #### <paramref name = "sourceControlFileUri"/>; 
            ##### - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetIsLockedByOtherUser(System.String)">
            <summary>
            #########, ############ ## #### ## ###### ####### ######## ###### ## ####### #############.
            </summary>
            <param name="localFilePath">######### #### # #####.</param>
            <returns><c>true</c>, #### #### <paramref name = "localFilePath"/> ############ ###### #############
            ## ###### ####### ######## ######; # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.ApplySourceControlChanges(System.String)">
            <summary>
            ############# ######### ###### # ####### ######## ###### # ############ # ########## ###### # ####### #####.
            </summary>
            <param name="workingCopyPath">#### # ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.GetHeadRevisionNumber(System.Uri)">
            <summary>
            ########## ##### ######### ####### ### ########## #### # ####### ######## ######.
            </summary>
            <param name="sourceControlUri">#### # ######## ##### ####### ######## ######.</param>
            <returns>##### ######### ####### ### #### <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            ## ########## #### ## ####### ######## ###### ####### ##########, #### ### ## ##########.
            </summary>
            <param name="directoryUri">#### # ##########.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlManager.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            ## ######### ##### ## ####### ######## ###### ####### ##########, #### ### ## ##########.
            </summary>
            <param name="directoryUries">#### # ###########.</param>
            <param name="logMessage">###### ############ ########. ############## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSchemaVirtualPath(System.String,System.String)">
            <summary>
            ########## ########### #### ### ##### <paramref name = "schemaName"/> ## ######
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaName">### #####.</param>
            <returns>########### #### ### ##### <paramref name = "schemaName"/> ## ######
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSqlScriptVirtualPath(System.String,System.String)">
            <summary>
            ########## ########### #### ### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="sqlScriptName">### SQL-########.</param>
            <returns>########### #### ### SQL-######## <paramref name = "sqlScriptName"/> ## ######
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSchemaDataVirtualPath(System.String,System.String)">
            <summary>
            ########## ########### #### ### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="schemaDataName">### ###### #####.</param>
            <returns>########### #### ### ###### ##### <paramref name = "schemaDataName"/> ## ######
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetAssemblyVirtualPath(System.String,System.String)">
            <summary>
            ########## ########### #### ### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/>.
            </summary>
            <param name="packageName">### ######.</param>
            <param name="assemblyName">### ######.</param>
            <returns>########### #### ### ###### <paramref name = "assemblyName"/> ## ######
            <paramref name = "packageName"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetPackageElementPath(System.String,System.String,System.String,Terrasoft.Core.Packages.PackageStorageObjectType)">
            <summary>
            Returns full path for package element.
            </summary>
            <param name="packageCopyPath">Path to working copy folders.</param>
            <param name="packageName">Package name.</param>
            <param name="elementName">Element name.</param>
            <param name="elementType">Element type.<paramref name = "elementName"/>.</param>
            <returns>Full path for package element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetPackageWorkingCopyPath(System.String,System.String)">
            <summary>
            ########## ###### #### # ######.
            </summary>
            <param name="packageCopyPath">#### # ###### ####### #####.</param>
            <param name="packageName">### ######.</param>
            <returns>###### #### # ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetPackageDescriptorPath(System.String,System.String)">
            <summary>
            ########## ###### #### # ##### ########### ######.
            </summary>
            <param name="packageCopyPath">#### # ###### ####### #####.</param>
            <param name="packageName">### ######.</param>
            <returns>###### #### # ##### ########### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlPathUtilities.GetSchemaPath(System.String,System.String,System.String)">
            <summary>
            Returns full path to a shema's directory.
            </summary>
            <param name="rootPath">Root path to package's directory.</param>
            <param name="packageName">Specified package name.</param>
            <param name="schemaName">Specified schema name.</param>
            <returns>Full path to a shema's directory</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.SourceControlUtilities">
            <summary>
            ##### ### ############### ####### ###### # ######## ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateSourceControlAuthManager(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ##### ######### ######### ### ###### # ############### # #########.
            </summary>
            <param name="userConnection">################ ##########.</param>
            <returns>##### ######### ######### ### ###### # ############### # #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateSourceControlManager(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ##### ######### ######### ### ###### # ######## ####### ######## ######.
            </summary>
            <param name="userConnection">################ ##########.</param>
            <returns>##### ######### ######### ### ###### # ######## ####### ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateLockerManager(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ##### ######### ######### ### ###### # ############ ####### # ## ######### # ######### #######
            ######## ######.
            </summary>
            <param name="userConnection">################ ##########.</param>
            <returns>##### ######### ######### ### ###### # ############ ####### # ## ######### # ######### #######
            ######## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SourceControlUtilities.CreateDescriptorComparer(Terrasoft.Core.AppConnection)">
            <summary>
            Creates a new instance of IDescriptorComparer implementation, depending on settings in 
            <see cref="T:Terrasoft.Core.AppConnection"/>.
            </summary>
            <param name="appConnection">Specified instance of <see cref="T:Terrasoft.Core.AppConnection"/>.</param>
            <returns>New instance of an implementation of <see cref="T:Terrasoft.Core.Packages.IDescriptorComparer"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SqlScriptLocker.UnlockElement(System.String,System.String,System.Guid)">
            <summary>
            Unlocks sql script in version control system and database.
            </summary>
            <param name="packageName">Package name.</param>
            <param name="elementName">Sql script name.</param>
            <param name="elementId">Sql script identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.Packages.SqlScriptLoopsException">
            <summary>##### ########## ### ######## ########## # ##### ############ ##### Sql-##########</summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnAuthManager">
            <summary>
            ######## ### ###### # ############### # ######### ### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.SvnAuthManager"/> 
            # ######### ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.SourceControlAuthDescriptors">
            <summary>
            ############# ############### ###### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.Uris">
            <summary>
            ############# ##### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.SourceControlDescriptors">
            <summary>
            ############# ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.UseSourceControlAuthentication">
            <summary>
            #######, ############ ## ### ############## ####### ######## ######.
            </summary>
            <value>
            <c>true</c>, #### ############ ### ############## ####### ######## ######, ##### - <c>false</c>.
            </value>
            <remarks> ######## ## #########: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnAuthManager.SourceControlAuthPath">
            <summary>
            #### # #####, ### ######## ################## ###### ######### ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            ########## ############### ###### #########.
            </summary>
            <param name="sourceUri">##### #########.</param>
            <returns>########## ######### <see cref = "T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/> ### 
            ######### # ####### <paramref name = "sourceUri"/>. #### ######### # ##### ####### ## #######, ##### 
            ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">########## ############, #### ######### # 
            ####### <paramref name = "sourceUri"/> ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetIdByUri(System.Uri)">
            <summary>
            ########## ############# #########.
            </summary>
            <param name="sourceUri">##### #########.</param>
            <returns>############# ######### # ####### <paramref name = "sourceUri"/>. #### ######### # ##### ####### 
            ## #######, ##### ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">########## ############, #### ######### # 
            ####### <paramref name = "sourceUri"/> ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            ########## ##### #########.
            </summary>
            <param name="descriptorId">############# #########.</param>
            <param name="packageName">######## ######. ############## ########, ######## ## ######### - <c>null</c>.
            </param>
            <returns>##### ######### # ############### <paramref name = "descriptorId"/>. #### ######### # ##### 
            ############### ## #######, ##### ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">########## ############, #### ######### # 
            ############### <paramref name = "descriptorId"/> ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            ######### ##### # ###### ####### # #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
            <exception cref="T:System.Security.SecurityException">#### # ############ ############ #### ### ########### #######.
            </exception>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">########## ############, #### ######### #
            ############### <paramref name="repositoryId"/> ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            ######### ########## #########.
            </summary>
            <param name="sourceControlDescriptor">########## #########.</param>
            <returns>############# #########, ########## ######## ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.DeleteRepository(System.Guid)">
            <summary>
            ####### ########## #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            ##########, ########## ## ######, ####### ######### ## ######## #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <returns><c>true</c>, #### ## ######### ######### #### ## #### #####; # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            ########## ########## ######### # ######## ###############.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <returns>########## ######### <see cref = "T:Terrasoft.Core.Packages.SourceControlDescriptor"/> ### 
            ######### # ############### <paramref name = "repositoryId"/> #### <c>null</c>, #### ######### # ##### 
            ############### ## #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnClientWrapper">
            <summary>
            ####### ####### ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.#ctor(Terrasoft.Core.Packages.ISvnClient)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.SvnClientWrapper"/> 
            ### ######### ####### ######## ######.
            </summary>
            <param name="instance">###### ######## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.#ctor">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.SvnClientWrapper"/> .
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.Authenticate(System.String,System.String)">
            <summary>
            ######### ######### ############# ####### ######## ######.
            </summary>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.CheckOut(System.Uri,System.String,System.Int32,System.Boolean)">
            <summary>
            ######### ###### ######## ##### # ###### ######## ####### ## ####### ######## ###### # ######### ##### 
            ####### #####.
            </summary>
            <param name="sourceUri">#### # ######## ##### ####### ######## ######.</param>
            <param name="workingCopyPath">#### # ####### #####.</param>
            <param name="revision">##### #######, ######### ####### ###### #### #########.</param>
            <param name="useInfinityDepth">Infinity checkout depth flag. Optional.
            <c>true</c> to check out files and subdirectories, <c>false</c> to check out files only in specified
            directory. Default value: <c>true</c></param>
            <returns><c>true</c>, #### ######## ###### ## ####### ######## ###### #########; 
            # ######### ###### — ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnClientWrapper.CheckOut(System.Uri,System.String,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Loads files and folders of the specified revision from the version control system to the local copy folder.
            </summary>
            <param name="sourceUri">Path to the root folder of the version control system.</param>
            <param name="workingCopyPath">Path to working copy.</param>
            <param name="revision">Number of revision whose changes must be loaded.</param>
            <param name="useInfinityDepth">Infinity checkout depth flag. Optional.
            <c>true</c> to check out files and subdirectories, <c>false</c> to check out files only in specified
            directory. Default value: <c>true</c></param>
            <param name="checkoutRevison">Loaded revision number.</param>
            <returns><c>true</c> if loading data from the version control system failed; otherwise – <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnItemStatus">
            <summary>
            Provides SVN item properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnItemStatus.#ctor(SharpSvn.SvnStatusEventArgs)">
            <summary>
            Initialize an instance of <see cref="T:Terrasoft.Core.Packages.SvnItemStatus"/>.
            </summary>
            <param name="status">Instance of <see cref="T:SharpSvn.SvnStatusEventArgs"/></param>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnItemStatus.NodeKind">
            <summary>
            Item SVN kind.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnItemStatus.LocalContentStatus">
            <summary>
            Item SVN status.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnItemStatus.Path">
            <summary>
            Relative path to item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnItemStatus.FullPath">
            <summary>
            Absolute path to item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnItemStatus.Conflicted">
            <summary>
            Indicates whether an item is conflicted.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.SvnSourceControlClient">
            <summary>
            Client for SVN version control system.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.#ctor(Terrasoft.Core.Packages.ISourceControlAuthManager)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.SvnSourceControlClient"/> 
            class for the specified authorization manager and the path to the configuration file.
            </summary>
            <param name="authManager">Authorization Manager version control system.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.#ctor(Terrasoft.Core.Packages.ISourceControlAuthManager,System.Int32,System.String,Terrasoft.Core.ISecurityUtilities)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.Packages.SvnSourceControlClient"/> 
            class for the specified parameters.
            </summary>
            <param name="authManager">Authorization Manager version control system.</param>
            <param name="workspaceNumber">Workspace number.</param>
            <param name="workspaceName">Workspace name.</param>
            <param name="securityUtilities">SVN security utilities.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">An exception is thrown if the 
            parameter <paramref name="workspaceName"/> is not specified.</exception>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">An exception is thrown if the 
            parameter <paramref name="workspaceNumber"/> contains an invalid value.</exception>
        </member>
        <member name="P:Terrasoft.Core.Packages.SvnSourceControlClient.Realm">
            <summary>
            The scope for user authentication when logging into the version control system.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Packages.SvnSourceControlClient.Conflict">
            <summary>
            Occurs when a conflict happened during the SVN operation or working copy processing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.SaveAuthData(System.Uri,System.String,System.String)">
            <summary>
            Saves the username and password to access the repository.
            </summary>
            <param name="sourceUri">Path to the root folder of the versioning system repository.</param>
            <param name="login">Repository login.</param>
            <param name="password">Repository password.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ValidateAccessibility(System.Uri)">
            <summary>
            Checks user's access to the version control system for the specified path.
            </summary>
            <param name="sourceControlUri">Path to the folder or file version control system.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ValidateAccessibility(System.String)">
            <summary>
            Checks the user's access to the version control system by storage path from a local directory.
            </summary>
            <param name="workingCopyPath">Path to a local directory of working copy.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetUriFromWorkingCopy(System.String)">
            <summary>
            Returns the path to the root folder of the version control system by given path to the working copy folder.
            </summary>
            <param name="workingCopyPath">Path to the working copy folder.</param>
            <returns>The path to the root folder of the version control system.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">An exception is generated if the folder
            path specified in the parameter <paramref name = "workingCopyPath"/>, is not under version control 
            system.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsUnderSourceControl(System.String)">
            <summary>
            Checks whether the specified folder under the working copy version control system.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <returns><c>true</c>, if the folder path specified in parameter <paramref name = "workingCopyPath"/>,
            is under version control system; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.CheckOut(System.Uri,System.String,System.Int32,System.Boolean)">
            <summary>
            Performs a full load of folders and files from the source control system to a local folder
            of the working copy.
            </summary>
            <param name="sourceControlUri">Path to the root folder of the version control system.</param>
            <param name="workingCopyPath">Path to the working copy.</param>
            <param name="revisionNumber">The revision number, which changes should be loaded.
            Optional, default is <c>0</c>.</param>
            <param name="useInfinityDepth">Infinity checkout depth flag. Optional.
            <c>true</c> to check out files and subdirectories, <c>false</c> to check out files only in specified
            directory. Default value: <c>true</c></param>
            <returns>Loaded revision number.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">The exception is generated when loading
            data from a version control system is unsuccessful.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Update(System.String,System.Int32,System.Boolean)">
            <summary>
            Updates the files and folders from the source control system to a local folder of the working copy.
            </summary>
            <param name="workingCopyPath">Path to the working copy</param>
            <param name="revisionNumber">The revision number, which changes should be loaded.
            Optional, default is <c>0</c>.</param>
            <param name="useInfinityDepth">Infinity update depth flag. Optional.
            <c>true</c> to update files and subdirectories, <c>false</c> to update files only in specified
            directory. Default value: <c>true</c></param>
            <returns>Loaded revision number.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">The exception is generated when loading
            data from a version control system is unsuccessful.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Revert(System.String)">
            <summary>
            Undo changes from the specified folder.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <returns><c>true</c>, if changes have been canceled; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetLockedFilesByCurrentUser(System.String)">
            <summary>
            Returns an enumeration of the file addresses that are locked by version control system by
            current User.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <returns>Enumerator file paths.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsFilesHaveForeignLock(System.String)">
            <summary>
            Determines whether the specified path elements that are locked by another user.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <returns><c>true</c>, if there is an element that is locked by another user,
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetRootDirectories(System.Uri)">
            <summary>
            Returns an enumeration of the first level folder names relative to the
            root folder of the version control system.
            </summary>
            <param name="sourceControlUri">Path to the root folder of the version control system.</param>
            <returns>Enumerator folder names.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Commit(System.String,System.String)">
            <summary>
            Commits changes from a local folder in your working copy version control system.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <param name="logMessage">Commit comments. Optional.</param>
            <returns>The revision number of changes have been added.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlOperationException">An exception is generated
            if the commit data in the version control system failed.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Commit(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Commits changes from specified paths in working copy to source control system.
            </summary>
            <param name="workingCopyPath">Path to local working copy.</param>
            <param name="paths">Set of paths to changes in working copy.</param>
            <param name="logMessage">Commit message. Optional.</param>
            <returns>Revision number after commit.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Import(System.String,System.Uri,System.String)">
            <summary>
            Commits in version control repository of files and folders tree of a given unversioned folders.
            </summary>
            <param name="localPath">Path to an unversioned folder.</param>
            <param name="sourceControlUri">Path to the root folder of the repository versioning system.</param>
            <param name="logMessage">Commit comments. Optional.</param>
            <returns>The revision number of changes have been added.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.UnlockDeletedItems(System.Uri,System.Int32)">
            <summary>
            Unlocks the deleted files in the version control system.
            </summary>
            <param name="sourceControlUri">Path to the root folder of the repository versioning system.</param>
            <param name="revisionNumber">The revision number, in which the files were deleted.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Lock(System.Collections.Generic.ICollection{System.String},System.Boolean)">
            <summary>
            Blocks access to data files at the level of version control system.
            </summary>
            <param name="localFilePaths">List of local paths to files.</param>
            <param name="isForceLock">Indicates whether forced lock. Optional. Default value - <c>false</c>.</param>
            <returns><c>true</c>, If the files <paramref name = "localFilePaths"/> locked in a version control system;
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Lock(System.String,System.Boolean)">
            <summary>
            Blocks access to the specified file on version control system level.
            </summary>
            <param name="localFilePath">Local file path.</param>
            <param name="isForceLock">Indicates whether forced lock. Optional.
            Default is <c>false</c>.</param>
            <returns><c>true</c>, if file <paramref name = "localFilePath"/> locked in a version control system; 
            otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Unlock(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Unlocks the specified file at the version control system.
            </summary>
            <param name="localFilePaths">List of local paths to files.</param>
            <returns><c>true</c>, if files from list <paramref name = "localFilePaths"/> locked
            at the version control system; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.UnlockContent(System.String)">
            <summary>
            Unlocks all files, which are specified in working copy on version control system level 
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <returns><c>true</c>, if files from working copy <paramref name = "workingCopyPath"/> unlocked
            at the version control system; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.UnlockContent(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Unlocks all files, which are located on the specified paths on version control system level.
            </summary>
            <param name="workingCopyPaths">List of local paths.</param>
            <returns><c>true</c>, if specified files <paramref name = "workingCopyPaths"/> unlocked at
            version control system; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Exists(System.Uri)">
            <summary>
            Determines whether the specified file exists in the source control repository.
            </summary>
            <param name="sourceControlFileUri">The path to the file in the source control system.</param>
            <returns><c>true</c>, if file exists <paramref name = "sourceControlFileUri"/>; 
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.Add(System.String)">
            <summary>
            Adds unversioned file to version control system.
            </summary>
            <param name="workingCopyFilePath">The path to the file in the working copy.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsLocked(System.String)">
            <summary>
            Check whether the file is locked on version control system level.
            </summary>
            <param name="localFilePath">Local file path.</param>
            <returns><c>true</c>, if file <paramref name = "localFilePath"/> is locked on version control system level
            otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsLockedByCurrentUser(System.String)">
            <summary>
            Check whether the file is locked on version control system level by current user.
            </summary>
            <param name="localFilePath">Local file path.</param>
            <returns><c>true</c>, if file <paramref name = "localFilePath"/> is locked by current user
            otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetIsLockedByOtherUser(System.String)">
            <summary>
            Check whether the file is locked on version control system level by other user.
            </summary>
            <param name="localFilePath">Local file path.</param>
            <returns><c>true</c>, if file <paramref name = "localFilePath"/> is locked by other user
            otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetLocalFilePathsForLock(System.String,System.String,System.String)">
            <summary>
            Returns a list of local paths, which can be locked on version control system level.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <param name="itemLocalPath">Directory from which files are taken to lock (local path).</param>
            <param name="itemName">Element name.</param>
            <returns>List of local paths to files that are in <paramref name = "itemLocalPath"/> and which may be
            locked to the version control system level.</returns>
            <exception cref="T:Terrasoft.Common.SourceControlLockException">An exception is generated if the path is
            obtained from <paramref name = "itemLocalPath"/> indicates a non-existent folder in source control,
            or if at least one file from a directory <paramref name = "itemLocalPath"/> is locked by another user,
            or if at least one file from a directory <paramref name = "itemLocalPath"/> is outdated.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetLocalFilePathsLockedByCurrentUser(System.String)">
            <summary>
            Returns a list of local paths, locked on version control system level by current user.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
            <returns>List of local paths to files that are in <paramref name = "workingCopyPath"/> and which are
            locked on version control system level by current user.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.GetHeadRevisionNumber(System.Uri)">
            <summary>
            Returns the number of the last revision to the specified path in the version control system.
            </summary>
            <param name="sourceControlUri">Path to the root folder of the repository versioning system.</param>
            <returns>Latest revision number for the path <paramref name = "sourceControlUri"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ApplySourceControlChanges(System.String)">
            <summary>
            Actualizes the status of files in version control system in accordance with the state of the
            file in the working copy.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.SetPropertyMimeType(System.String)">
            <summary>
            Sets the MimeType property for files.
            </summary>
            <param name="workingCopyPath">Path to the working copy.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.CreateDirectoryIfNotExist(System.Uri,System.String)">
            <summary>
            Creates directory on source control system server if it does not exist.
            </summary>
            <param name="directoryUri">Directory path.</param>
            <param name="logMessage">Commit comments. Optional.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.CreateDirectoriesIfNotExist(System.Collections.Generic.ISet{System.Uri},System.String)">
            <summary>
            Creates directory on source control system server if it does not exist.
            </summary>
            <param name="directoryUries">Directory paths.</param>
            <param name="logMessage">Commit comments. Optional.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.SvnSourceControlClient.ProcessWorkingCopyConflicts(System.String)">
            <summary>
            In case of conflicts in existing working copy fires a <see cref = "E:Terrasoft.Core.Packages.SvnSourceControlClient.Conflict" /> event.
            If there is no any subscription to <see cref = "E:Terrasoft.Core.Packages.SvnSourceControlClient.Conflict" /> event does nothing.
            </summary>
            <param name="workingCopyPath">Path to a working copy.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceBuilder.Build">
            <summary>
            Builds workspace assembly.
            </summary>
            <returns>Collection of error or warning messages.</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.WorkspaceComposerLoopsException">
            <summary>##### ########## ### ######## ########## # ##### ############ ##### ########</summary>
        </member>
        <member name="T:Terrasoft.Core.Packages.WorkspaceComposer">
            <summary>#####, ####### ######## ###### ########## ################## ########## #######</summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceComposer.ProcessSimpleSchema(Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>######### ####### #####</summary>
            <param name="schema">#####</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceComposer.ProcessExtensionSchema(Terrasoft.Core.Packages.SchemaDescriptor)">
            <summary>######### #####, ####### ######## ######## # ########. ##### ##### ###### #### # ### ## ######,
            ### # ########.</summary>
            <param name="schema">#####</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceComposer.SortByTopology(System.Collections.Generic.IList{Terrasoft.Core.Packages.ModuleDescriptor})">
            <summary>
            ########## ################## ###### ####### # ###### ############ ##### ####.
            # ###### ########## ########## ########## # ########### # #######, ############ ########### ###########.
            ######## ## Compose() ############# ### ######## #####.
            </summary>
            <param name="modules">################## #######</param>
            <returns>############### ################## #######</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceComposer.Compose(Terrasoft.Core.Packages.PackageStorage)">
            <summary>### ####### ######### ####### ########## ################## ###### ####### # ###### ############
            ##### ######## # ########</summary>
            <param name="storage">######### #######</param>
            <returns>################## #######</returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.WorkspaceModuleStorageSystemTransaction">
            <summary>
            The class is used only in the DI.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceModuleStorageTransaction.Add(System.String,System.Byte[])">
            <summary>######### #### ###### # ######### # ######### ######</summary>
            <param name="key">####</param>
            <param name="data">######</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceModuleStorageTransaction.Add(System.String,System.String)">
            <summary>######### ######### #### # ######### # ######### ######</summary>
            <param name="key">####</param>
            <param name="filePath">#### # ##### ### ##########</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceModuleStorageTransaction.Get">
            <summary>##### ####### ### ####### ############.</summary>
            <returns>#######, ########## # ######## ##### ### ######, # ######## ######## - ###### #### ######.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Packages.WorkspaceSvnAuthManager">
            <summary>
            ######## ### ###### # ############### # ######### ### ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.WorkspaceSvnAuthManager"/> 
            # ######### ###########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.SourceControlDescriptor})">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.Packages.WorkspaceSvnAuthManager"/> 
            # ######### ###########.
            </summary>
            <param name="login">##### ############.</param>
            <param name="password">###### ############.</param>
            <param name="sourceControlDescriptors">############# ############ ######## ####### ######## ######.</param>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SourceControlAuthDescriptors">
            <summary>
            ############# ############### ###### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.Uris">
            <summary>
            ############# ##### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SourceControlDescriptors">
            <summary>
            ############# ############ ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.UseSourceControlAuthentication">
            <summary>
            #######, ############ ## ### ############## ####### ######## ######.
            </summary>
            <value>
            <c>true</c>, #### ############ ### ############## ####### ######## ######, ##### - <c>false</c>.
            </value>
            <remarks> ######## ## #########: <c>false</c>.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SourceControlAuthPath">
            <summary>
            #### # #####, ### ######## ################## ###### ######### ####### ######## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetAuthDataByUri(System.Uri)">
            <summary>
            ########## ############### ###### #########.
            </summary>
            <param name="sourceUri">##### #########.</param>
            <returns>########## ######### <see cref = "T:Terrasoft.Core.Packages.SourceControlAuthDescriptor"/> ### 
            ######### # ####### <paramref name = "sourceUri"/>. #### ######### # ##### ####### ## #######, ##### 
            ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">########## ############, #### ######### # 
            ####### <paramref name = "sourceUri"/> ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetIdByUri(System.Uri)">
            <summary>
            ########## ############# #########.
            </summary>
            <param name="sourceUri">##### #########.</param>
            <returns>############# ######### # ####### <paramref name = "sourceUri"/>. #### ######### # ##### ####### 
            ## #######, ##### ############ ##########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">########## ############, #### ######### # 
            ####### <paramref name = "sourceUri"/> ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetUriById(System.Guid,System.String)">
            <summary>
            ########## ##### #########.
            </summary>
            <param name="descriptorId">############# #########.</param>
            <param name="packageName">######## ######. ############## ########, ######## ## ######### - <c>null</c>.
            </param>
            <returns>##### ######### # ############### <paramref name = "descriptorId"/>. #### ######### # ##### 
            ############### ## #######, ##### ############ ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.UpdateAuthData(System.Guid,System.String,System.String)">
            <summary>
            ######### ##### # ###### ####### # #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <param name="login">##### # #########.</param>
            <param name="password">###### # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.SaveRepository(Terrasoft.Core.Packages.SourceControlDescriptor)">
            <summary>
            ######### ########## #########.
            </summary>
            <param name="sourceControlDescriptor">########## #########.</param>
            <returns>############# #########, ########## ######## ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.DeleteRepository(System.Guid)">
            <summary>
            ####### ########## #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.GetIsRepositoryInUse(System.Guid)">
            <summary>
            ##########, ########## ## ######, ####### ######### ## ######## #########.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <returns><c>true</c>, #### ## ######### ######### #### ## #### #####; # ######### ###### — 
            ######## <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceSvnAuthManager.FindSourceControlDescriptor(System.Guid)">
            <summary>
            ########## ########## ######### # ######## ###############.
            </summary>
            <param name="repositoryId">############# #########.</param>
            <returns>########## ######### <see cref = "T:Terrasoft.Core.Packages.SourceControlDescriptor"/> ### 
            ######### # ############### <paramref name = "repositoryId"/> #### <c>null</c>, #### ######### # ##### 
            ############### ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetAvailablePackages(Terrasoft.Core.UserConnection)">
            <summary>
            Returns available for modification packages to the current user.
            </summary>
            <param name="userConnection">User connection</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.ForceGetCurrentPackageUId(Terrasoft.Core.UserConnection)">
            <summary>
            Returns current package identifier, if setings is not defined method creates it first.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.CreateQueryCaseIsPackagesElementsChanged(Terrasoft.Core.UserConnection)">
            <summary>
            ######### ######### ######### <c>CASE</c> ### ######## ####### ######### # ########## ######.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### ######### <c>CASE</c>.</returns>
            <remarks>########### ######## ############ ### ######## ### ######
            <see cref = "M:Terrasoft.Core.DB.Select.Column(Terrasoft.Core.DB.QueryCase)"/> ###### <see cref = "T:Terrasoft.Core.DB.Select"/>.
            ######## ############## ## ####### <c>IsChanged</c> ### ######### ####:
            <list type="bullet">
            <item><term>#####</term><description><c>SysSchema</c></description></item>
            <item><term>SQL-########</term><description><c>SysPackageSqlScript</c></description></item>
            <item><term>###### # ######</term><description><c>SysPackageReferenceAssembly</c></description></item>
            <item><term>###### ##### ######</term><description><c>SysPackageSchemaData</c></description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.SetPackageInstallType(Terrasoft.Core.UserConnection,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Packages.Package},Terrasoft.Common.SysPackageInstallType)">
            <summary>
            ############# ######### ####### ######### ###### ### ######### ####### # ######### ############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="workspaceId">############# ############.</param>
            <param name="packages">###### #######.</param>
            <param name="packageInstallType">### ######### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.FindSchemaIdByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Tries to find and return schema Id by schema UId.
            </summary>
            <param name="schemaUId">Schema UId as search parameter</param>
            <param name="userConnection">User connection.</param>
            <returns>Returns schema Id if it was found. Otherwise returns <c>Guid.Empty</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.FindSchemaIdByUId(System.Guid,Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Tries to find and return schema Id by schema UId from specified workspace.
            </summary>
            <param name="schemaUId">Schema UId as search parameter.</param>
            <param name="userConnection">User connection.</param>
            <param name="workspaceId">Specified workspace identifier.</param>
            <returns>Returns schema Id if it was found. Otherwise returns <c>Guid.Empty</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetSchemaIdByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Returns schema Id by schema UId.
            </summary>
            <param name="schemaUId">Schema UId as search parameter.</param>
            <param name="userConnection">User connection.</param>
            <returns>Returns schema Id if it was found. Otherwise throws
            <see cref="T:Terrasoft.Common.ItemNotFoundException"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Throws exception if schema Id was not found.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetSchemaIdByUId(System.Guid,Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Returns schema Id by schema UId from specified workspace.
            </summary>
            <param name="schemaUId">Schema UId as search parameter.</param>
            <param name="userConnection">User connection.</param>
            <param name="workspaceId">Specified workspace identifier.</param>
            <returns>Returns schema Id if it was found. Otherwise throws
            <see cref="T:Terrasoft.Common.ItemNotFoundException"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Throws exception if schema Id was not found.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.ForceGetCustomPackageUId(Terrasoft.Core.UserConnection)">
            <summary>
            Returns custom package UId from system setting. If system setting or package doesn't exist,
            they will be created.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>Custom package UId.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetTopologyPackagePositions(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Gets the package positions based on topology.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="workspaceId">The workspace unique identifier.</param>
            <returns>Dictionary of package unique identifiers and their positions.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetPackageHierarchyIds(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            ########## ############# ########## ############### ######## #######, ####### # ######## ######.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="basePackageUId">UId ######, ####### # ######## ############## ########.</param>
            <param name="workspaceId">########## ############# ######## ############.</param>
            <returns>############# ########## ############### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetPackageHierarchyIdsById(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            ########## ############# ########## ############### ######## #######, ####### # ######## ######.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="basePackageId">########## ############# ######, ####### # ######## ############## ########.
            </param>
            <param name="workspaceId">########## ############# ######## ############.</param>
            <returns>############# ########## ############### ######## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.UpdateSchemasChecksum(Terrasoft.Core.UserConnection,Terrasoft.Core.Packages.PackageStorageChangeCollection,Terrasoft.Core.Packages.PackageStorage)">
            <summary>
            Updates package schema's checksum.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="packageStorageChanges">Collection of package storage changes.</param>
            <param name="storage">Collection of package storage changes.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.CleanUpWorkspace(Terrasoft.Core.UserConnection)">
            <summary>
            Restores configuration from the repository.
            </summary>
            <param name="userConnection">User connection/</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.GetIsNeedToInitializeSysSchemaContent(Terrasoft.Core.UserConnection)">
            <summary>
            Checks necessity to initialize SysSchemaContent table with data.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Packages.WorkspaceUtilities.InitializeSysSchemaContent(Terrasoft.Core.Packages.Package,Terrasoft.Core.Packages.PackageContentFileProvider,Terrasoft.Core.DesignMode.ISchemaContentSaver)">
            <summary>
            Initializes SysSchemaContent table with content from source files.
            </summary>
            <param name="package">Current package.</param>
            <param name="fileProvider">File provider.</param>
            <param name="schemaContentSaver">Schema content saver.</param>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.ValidatePassword(System.String,Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Validates user password.
            </summary>
            <param name="source">Password string.</param>
            <param name="userConnection"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="userName">User name.</param>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.GetIsPasswordExpired(Terrasoft.Core.UserConnection)">
            <summary>
            Checks is <paramref name="source"/> password expired.
            </summary>
            <param name="source"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <returns><c>True</c> if password expired. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.GetIsPasswordExpired(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.Entity)">
            <summary>
            Checks is <paramref name="sysAdminUnit"/> password expired.
            </summary>
            <param name="uc"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="sysAdminUnit">System user info instance.</param>
            <returns><c>True</c> if password expired. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.GetIsPasswordNeedChange(Terrasoft.Core.Entities.Entity)">
            <summary>
            Checks is <paramref name="sysAdminUnit"/> password need to be changed.
            </summary>
            <param name="sysAdminUnit">System user info instance.</param>
            <returns><c>True</c> if password need to be changed. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.GetIsPasswordExpirationSettingsSet(Terrasoft.Core.UserConnection)">
            <summary>
            Checks is password expiration settings are set.
            </summary>
            <param name="uc"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <returns><c>True</c> if password expiration settings are set. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.GetShowPasswordReminding(Terrasoft.Core.UserConnection,System.DateTime,System.Int32@)">
            <summary>
            Check change password message need to be shown.
            </summary>
            <param name="uc"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="passwordExpireDate">User password expiration date.</param>
            <param name="days">Days before user password expire.</param>
            <returns><c>True</c> if password expired. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.CheckIsPasswordExpired(Terrasoft.Core.UserConnection)">
            <summary>
            Checks is <paramref name="source"/> password expired.
            Throws <see cref="T:Terrasoft.Common.PasswordExpiredException"/> if password expired.
            </summary>
            <param name="source"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.CheckIsPasswordNeedChange(Terrasoft.Core.UserConnection)">
            <summary>
            Checks is <paramref name="source"/> password force change set.
            Throws <see cref="T:Terrasoft.Common.PasswordExpiredException"/> if force change set.
            </summary>
            <param name="source"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
        </member>
        <member name="M:Terrasoft.Core.PasswordUtilities.UpdatePassword(Terrasoft.Core.UserConnection,Terrasoft.Core.AuthData)">
            <summary>
            Updates user password.
            </summary>
            <param name="userConnection"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <param name="authData"><see cref="T:Terrasoft.Core.AuthData"/> instance.</param>
            <returns><c>True</c> if password changed. Otherwise returns <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.PerformanceLogger">
            <summary>
            The performance logger class.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogMetaItem.Id">
            <summary>
            The item Id.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogMetaItem.Code">
            <summary>
            The item Code.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogMetaItem.ParentId">
            <summary>
            The parent Id.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogMetaItem.Stopwatch">
            <summary>
            The stopwatch.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogMetaItem.DataFunction">
            <summary>
            The data function.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.PerformanceLogger.LogMetaItem.#ctor(System.Guid,System.Guid,System.String,System.Diagnostics.Stopwatch,System.Func{System.Object})">
            <summary>
            Initializes the new instance of logMetaItemInfo class.
            </summary>
            <param name="id">The UId to initialize with.</param>
            <param name="parentId">The parent Id to initialize with.</param>
            <param name="code">The code to initialize with.</param>
            <param name="stopwatch">The stopwatch to initialize with.</param>
            <param name="dataFunction">The data function to initialize with.</param>
        </member>
        <member name="T:Terrasoft.Core.PerformanceLogger.LogItem">
            <summary>
            The log item class.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogItem.Id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogItem.ParentId">
            <summary>
            The parent id.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogItem.Duration">
            <summary>
            The duration.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogItem.Code">
            <summary>
            The code.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.PerformanceLogger.LogItem.Data">
            <summary>
            The data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.PerformanceLogger.EmptyDisposer.Dispose">
            <summary>
            Doesn't disposes the current instance. Only implementation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.PerformanceLogger.LoggingDisposer.Enqueue(System.String,System.Func{System.Object})">
            <summary>
            Enqueues the item with specified code into log queue.
            </summary>
            <param name="code">The code.</param>
            <param name="dataFactory">The data factory.</param>
        </member>
        <member name="M:Terrasoft.Core.PerformanceLogger.LoggingDisposer.Dispose">
            <summary>
            Disposes the current thread static resources.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.PerformanceLogger.Log">
            <summary>
            Get or sets per thread logger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.PerformanceLogger.Threshold">
            <summary>
            Sets the threshold value in milliseconds.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.PerformanceLogger.IsEnabled">
            <summary>
            Gets a value indicating whether performance logging is enabled.
            </summary>
            <value>
            <c>true</c> if performance logging is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Terrasoft.Core.PerformanceLogger.Start(System.String,System.Func{System.Object})">
            <summary>
            Starts the new performance measurement.
            </summary>
            <param name="code">The code.</param>
            <param name="logDataFactory">The data factory delegate.</param>
            <returns>
            <see cref="T:System.IDisposable"/> instance disposing of which leads to stopping of the measurement.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.PerformanceLogger.Start(System.String)">
            <summary>
            Starts the new performance measurement.
            </summary>
            <param name="code">The code.</param>
            <returns>
            <see cref="T:System.IDisposable"/> instance disposing of which leads to stopping of the measurement.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.PersistentStoreDBProvider">
            <summary>
            Database provider of persistent data storage.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.#ctor(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.PersistentStoreDBProvider"/> type.
            </summary>
            <param name="connection">User connection.</param>
            <param name="storageName">Name of the storage.</param>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.Get(System.String,System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.Get(System.String,System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.GetGroup(System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.GetGroup(System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.Add(System.String,System.Object,System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.Add(System.String,System.Object,System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.Remove(System.String,System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.Remove(System.String,System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.PersistentStoreDBProvider.RemoveGroup(System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.RemoveGroup(System.String)"/>
        </member>
        <member name="T:Terrasoft.Core.ProcessEngineConstants">
            <summary>
            The class for the process engine constants.
            </summary>
            <seealso cref="T:Terrasoft.Core.ProcessEngineConstants" />
            <seealso cref="T:Terrasoft.Core.IProcessEngine"/>
        </member>
        <member name="F:Terrasoft.Core.ProcessEngineConstants.ActivitySchemaName">
            <summary>
            Gets the name for the "Activity" entity schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ProcessEngineConstants.DefMaxLoopCount">
            <summary>
            <see cref="P:Terrasoft.Core.ProcessEngine.MaxLoopCount"/> property default value.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ProcessEngineConstants.SysEntityCommonPrcElSchemaName">
            <summary>
            Gets the name for the "SysEntityCommonPrcEl" entity schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ProcessEngineConstants.MaxLoopCountSysSettingsCode">
            <summary>
            Gets the code for the settings "Maximum number of process item repetitions".
            </summary>
        </member>
        <member name="F:Terrasoft.Core.ProcessEngineConstants.ProcessListenersColumnName">
            <summary>
            Gets the name for the "Active processes" column.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ProcessEngineUtilities">
            <summary>
            The utility class for the process engine.
            </summary>
            <seealso cref="T:Terrasoft.Core.ProcessEngineUtilities" />
            <seealso cref="T:Terrasoft.Core.IProcessEngine"/>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngineUtilities.CheckEntityUsedByProcess(Terrasoft.Core.Entities.Entity,System.Guid,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Checks entity for usage by process. If used throws exception <see cref="T:System.InvalidOperationException"/>
            Ignores dcm listeners.
            </summary>
            <param name="entity">Entity.</param>
            <param name="entityId">Entity identifier.</param>
            <param name="processListeners">Process listeners.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngineUtilities.SpecifyCurrentCulture(Terrasoft.Core.UserConnection)">
            <summary>
            Specifies the current culture used by the Resource Manager
            to look up culture-specific resources at run time.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngineUtilities.CancelParentProcess(Terrasoft.Core.UserConnection,System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Cancels parent processes by process listeners.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="processListeners">Process listeners.</param>
        </member>
        <member name="M:Terrasoft.Core.ProcessEngineUtilities.GetMaxLoopCount(Terrasoft.Core.UserConnection)">
            <summary>
            Returns maximum number of repetitions for process item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ActionQueue`1">
            <summary>
            Represents action queue.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ActionQueue`1.#ctor(Common.Logging.ILog)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ActionQueue`1"/> type.
            </summary>
            <param name="log">Logger.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ActionQueue`1.Enqueue(System.Action{`0})">
            <summary>
            Adds an action to the queue.
            </summary>
            <param name="action">Action to enqueue.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ActionQueue`1.Invoke(`0,System.Func{`0,System.Boolean})">
            <summary>
            Invokes all actions that are in queue.
            </summary>
            <param name="instance">The instance targeted by actions.</param>
            <param name="predicate">Function to determine whether to proceed with action invoking or not.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ActionQueue`1.Discard(`0)">
            <summary>
            Discards all actions that are in queue.
            </summary>
            <param name="instance">The instance targeted by actions.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ActualizeFormulaResultInfo">
            <summary>
            The result information after formula parameter validation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ActualizeFormulaResultInfo.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ActualizeFormulaResultInfo"/> class.
            </summary>
            <param name="updatedResultDataValueTypeUId">The updated result data value type identifier.</param>
            <param name="parameterPath">The parameter path.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ActualizeFormulaResultInfo.UpdatedResultDataValueTypeUId">
            <summary>
            Gets or sets the updated result data value type identifier.
            </summary>
            <value>
            The updated result data value type identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ActualizeFormulaResultInfo.ParameterPath">
            <summary>
            Gets or sets the parameter path.
            </summary>
            <value>
            The parameter path.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Process.ActualizeOwnerStateEventArgs">
            <summary>
            Contain <see cref="E:Terrasoft.Core.Process.ProcessFlowElement.TryActualizeOwnerState"/> event data.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:Terrasoft.Core.Process.ActualizeOwnerStateEventArgs.ProcessElementIsCloned">
            <summary>
            Gets or sets a value indicating whether process element is cloned.
            </summary>
            <value>
            <c>true</c> if process element is cloned; otherwise - <c>false</c>.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1">
            <summary>
            Base class for the flow schema generator.
            </summary>
            <typeparam name="T">The type of the schema.</typeparam>
            <seealso cref="T:Terrasoft.Core.Process.IFlowSchemaGenerator" />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1"/> class with the specified schema.
            </summary>
            <param name="schema">Schema of the process.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.UseSafeGenerationMode">
            <summary>
            Use safe generation mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>
            The schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.ZeroWidthSpaceCharacter">
            <summary>
            The zero-width space is a non-printing character.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.ExpressionConvertors">
            <summary>
            Gets the read-only list of conversion methods.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetParameterMapPath(System.String,System.String)">
            <summary>
            Returns the mapping path of the parameter.
            </summary>
            <returns>String that represents the mapping path of the parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.TryGetParameterMapPath(System.String,Terrasoft.Core.Process.ProcessParameterMapInfo@)">
            <summary>
            Parses parameter meta path and creates an instance of <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/> that
            provides information about parameter value binding to a process parameter.
            </summary>
            <param name="parameterMetaPath">Parameter meta path string in process schema.</param>
            <param name="mapPathInfo">An instance of <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>.</param>
            <returns>Returns <c>true</c>, if meta path has been converted successfully, else - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.CreateProcessParameterInfo(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Creates an instance of <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> with data of process parameter.
            </summary>
            <param name="schemaParameter">Process schema parameter.</param>
            <returns>Process parameter data.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetParameterMapData(System.String)">
            <summary>
            Generates data about bindings of parameter value to process parameters.
            </summary>
            <param name="schemaParameterValue">Value of the process schema parameter or process element parameter.
            </param>
            <returns>Data about parameter value bindings to process parameters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetIsProcessParameterBinding(System.Collections.Generic.LinkedList{Terrasoft.Core.Process.ProcessParameterMapInfo},System.String)">
            <summary>
            Determines that parameter value is set from another parameter of process.
            </summary>
            <param name="parameterMapData">Data about bindings between parameter value and process parameters.</param>
            <param name="parameterValue">Process parameter value.</param>
            <returns><c>true</c>, if the parameter value is set from a different process parameter;
            else - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GenerateProcessParameterMappings">
            <summary>
            Creates a table of process parameter mappings.
            </summary>
            <returns>Table of process parameter mappings.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetParametrizedProcessSchemaElement(System.Guid)">
            <summary>
            Gets the parametrized process schema element by the its identifier.
            </summary>
            <param name="schemaElementUId">The element's identifier.</param>
            <returns>
            "The process schema element implemented interface
            <see cref="T:Terrasoft.Core.Process.IProcessParametersMetaInfo" />.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetParametrizedSchemaElements">
            <summary>
            Returns the process schema elements that implement <see cref="T:Terrasoft.Core.Process.IProcessParametersMetaInfo" />.
            </summary>
            <returns>
            The list of the elements.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.TryGetProcessItemName(System.String,System.String@)">
            <summary>
            Attempts to get process schema parameter name or process element parameter name.
            </summary>
            <param name="parameterMapPath">Represents parameter mapping path.</param>
            <param name="itemName">Represents a string consisting of comma-separated parameter names.</param>
            <returns>
            <c>true</c> if the parameter exists, otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.FindProcessSchemaParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Finds the process schema parameter by its map info.
            </summary>
            <param name="parameterMapInfo">The process schema parameter path.</param>
            <returns>The found process schema parameter or <c>null</c> if its not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetProcessSchemaParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Gets the process parameter by its map info.
            </summary>
            <param name="parameterMapInfo">The process parameter map info.</param>
            <returns>
            The found process parameter.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.GetProcessSchemaParameter(System.String)">
            <summary>
            Gets the process parameter by its path.
            </summary>
            <param name="parameterMapPath">The process parameter path.</param>
            <returns>
            The found process parameter.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.TryGenerate(Terrasoft.Core.Process.FlowSchemaGeneratorResult@)">
            <summary>
            Generates a new flow schema. A return value indicates whether the generation succeeded or failed.
            </summary>
            <param name="generatorResult">Represents data of the flow schema generation results.</param>
            <returns><c>true</c> if flow schema is generated, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseFlowSchemaGenerator`1.TryGetResultParameterValueType(System.Guid,System.Type@)">
            <summary>
            Attempts to get type of schema result parameter value.
            </summary>
            <param name="schemaElementUId">The element's identifier.</param>
            <param name="type">Represents type of the result parameter.</param>
            <returns><c>true</c> if type get successfully, otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseInterpretationValidator`1">
            <summary>
            Validates that the schema metadata is correct and possibility to execute with or without compilation..
            </summary>
            <typeparam name="TProcessSchema"></typeparam>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            ############## ################ #########.
            </summary>
            <param name="userConnection">################ ###########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.Validate(`0,System.Collections.Generic.List{Terrasoft.Core.Process.IProcessSchemaValidationRule},System.Boolean)">
            <summary>
            Validates that the process schema is correct and interpretable. Fills the
            <see cref="P:Terrasoft.Core.Process.ProcessValidationResult.Results"/> collection with the validation info about the process items.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="validationRules">The validation functions chain.</param>
            <param name="checkAllRules">Indicates that all validation rules should be checked. If <c>false</c>, stops
            on the first rule that found incorrect or non-interpretable process schema item.
            </param>
            <returns><c>true</c>, if all rules were passed, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.GetDefaultValidationRules(`0)">
            <summary>
            Returns a list of rules to validate schema by default.
            </summary>
            <param name="schema">Schema.</param>
            <returns>List of rules.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.Validate(`0,System.Boolean)">
            <summary>
            ########## ##### ######## ## ####### ########### ############# # ######### ######### ValidatorInfo 
            ########### ## #########, ####### ####### ##########, - #### ####### #### #######.
            </summary>
            <param name="processSchema">##### ###### ########.</param>
            <param name="checkAllRules">#######, ########### ## ############# ######### ### ####### #########. ####
            ##### <c>false</c> - ########## ######### ## ###### #######, ####### ########## ################## #######.
            </param>
            <returns><c>true</c> - #### ### ####### ######### ####### ######## # </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.Validate(`0)">
            <summary>
            Validates the specified process schema.
            </summary>
            <param name="processSchema">The process schema.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessData">
            <summary>
            Represents common process data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.Id">
            <summary>
            Gets or sets identifier of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.CreatedById">
            <summary>
            Gets or sets identifier of the contact who creates entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.CreatedOn">
            <summary>
            Gets or sets date and time that indicates when entity is created.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.ModifiedById">
            <summary>
            Gets or sets identifier of the contact who modifies entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.ModifiedOn">
            <summary>
            Gets or sets date and time that indicates when entity is modified.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.SchemaElementUId">
            <summary>Gets or sets the schema element unique identifier of the process element.</summary>
            <value>The schema element unique identifier of the process element.</value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.Status">
            <summary>
            Gets or sets the execution state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.OwnerId">
            <summary>
            Gets or sets identifier of the contact.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessData.PropertiesData">
            <summary>Gets or sets the properties data of the process element.</summary>
            <value>The properties data of the process element.</value>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessElementFactory">
            <summary>
            Base type for <see cref="T:Terrasoft.Core.Process.IProcessElementFactory"/> implementations.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IProcessElementFactory" />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessElementFactory.CreateSubProcessInstance(Terrasoft.Core.Process.ProcessSchemaSubProcess)">
            <summary>Creates the subprocess instance.</summary>
            <param name="schemaSubProcess">The subprocess schema.</param>
            <returns>The subprocess instance</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessElementFactory.InitializeFlowNodeProperties(Terrasoft.Core.Process.ProcessFlowElement,Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Initializes base element properties.
            </summary>
            <param name="element">Process element.</param>
            <param name="schemaElement">Schema element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessElementFactory.CreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessElementFactory.CreateSubProcess(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessElementLog">
            <summary>
            Represents basic data of the process element Log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.Id">
            <summary>
            Gets or sets identifier of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.CreatedById">
            <summary>
            Gets or sets identifier of the contact who creates entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.ModifiedById">
            <summary>
            Gets or sets identifier of the contact who modifies entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.StartDate">
            <summary>
            Gets or sets an element's execution start date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.Caption">
            <summary>
            Gets or sets an element's caption.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.Status">
            <summary>
            Gets or sets the execution state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessElementLog.OwnerId">
            <summary>
            Gets or sets identifier of the contact.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessItemModificationEventArgs`1">
            <summary>
            An event arguments class for <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaManager`1"/>'s events.
            </summary>
            <typeparam name="TBaseProcessSchema">The type of the base process schema.</typeparam>
            <seealso cref="T:Terrasoft.Core.SchemaManagerItemActionEventArgs" />
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessItemModificationEventArgs`1.ManagerItem">
            <summary>
            Gets or sets the manager item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer">
            <summary>
            Base process meta data synchronizer that contains utility methods for synchronization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.#ctor(Terrasoft.Core.DB.IQueryExecutor)">
            <summary>
            Base constructor. 
            </summary>
            <param name="queryExecutor">Query executor</param>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.QueryExecutor">
            <summary>
            Query executor.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.EntitySchemaName">
            <summary>
            Entity schema name that will be synced.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.GetParentOrProcessUId(System.Guid,System.Guid,System.Guid)">
            <summary>
            Returns pararent process uId if parent exists.
            </summary>
            <param name="uId">Process uId.</param>
            <param name="parentUId">Parent process uId.</param>
            <param name="defaultSchemaUId">Default schema uId.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.PrepareProcessData(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Returns base process data.
            </summary>
            <param name="process">Process to get data from.</param>
            <returns>Tuple for process data.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.RemoveBindedProcessDataByColumns(Terrasoft.Core.Process.ProcessSchema,System.String,System.String[])">
            <summary>
            Removes all binded to process uId meta data.
            </summary>
            <param name="process">Process whose data will be deleted</param>
            <param name="bindedColumn">Column that bind meta data</param>
            <param name="additionalBindedColumns">Aditional columns that bind meta data</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.SaveElementData``1(``0,System.Action{Terrasoft.Core.DB.Insert,``0})">
            <summary>
            Saves single process element data.
            </summary>
            <typeparam name="T">Process element type</typeparam>
            <param name="processElement">Process element to save</param>
            <param name="dataApplier">Lambda that will apply process element data to query</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.SaveElementsData``1(System.Collections.Generic.IEnumerable{``0},System.Action{Terrasoft.Core.DB.Insert,``0})">
            <summary>
            Saves all given process elements data.
            </summary>
            <typeparam name="T">Process element type</typeparam>
            <param name="processElements">Process elements collection to save</param>
            <param name="dataApplier">Lambda that will apply process element data to query</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.SaveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessMetaDataSynchronizer.RemoveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchema">
            <summary>
            Represents base class for the process diagram.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.SerializeToDBPropertyName">
            <summary>
            The meta data index for the "SerializeToDB" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.MaxLoopCountPropertyName">
            <summary>
            The meta data index for the "MaxLoopCount" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.IsLoggingPropertyName">
            <summary>
            The meta data index for the "IsLogging" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.SerializeToMemoryPropertyName">
            <summary>
            The meta data index for the "SerializeToMemory" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.IsActiveVersionName">
            <summary>
            The meta data index for the "IsActiveVersion" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.IsDeliveredName">
            <summary>
            The meta data index for the "IsDelivered" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.VersionName">
            <summary>
            The meta data index for the "Version" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.IsActiveVersionPropertyName">
            <summary>
            The constant value that indicates the "IsActiveVersion" property name.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.IsDeliveredPropertyName">
            <summary>
            The constant value that indicates the "IsDelivered" property name.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.VersionPropertyName">
            <summary>
            The constant value that indicates the "Version" property name.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema.EntitySchemaUIdPropertyName">
            <summary>
            The constant value that indicates the "EntitySchemaUId" property name.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            Creates a new instance with specified schema manager.
            </summary>
            <param name="schemaManager">Instance that implements the <see cref="T:Terrasoft.Core.ISchemaManager"/> interface.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.#ctor(Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance that inherited the <see cref="T:Terrasoft.Core.Process.BaseProcessSchema"/> type.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.CaptionParameterUId">
            <summary>
            Unique identifier of the caption parameter.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.NotificationCaptionParameterUId">
            <summary>
            Unique identifier of the notification caption parameter.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.DependencyFactory">
            <summary>
            Gets the dependency factory.
            </summary>
            <value>
            The dependency factory.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.BaseElements">
            <summary>
            Gets the base elements.
            </summary>
            <value>
            The base elements.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.UseBackgroundMode">
            <summary>
            Returns a value indicating whether background execution enabled for current schema.
            </summary>
            <value>
            <c>true</c> if background execution is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.IsInterpretable">
            <summary>
            Gets or sets flag that indicates whether the process can be interpreted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.Manager">
            <summary>
            Gets instance that implements the <see cref="T:Terrasoft.Core.IManager"/> interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.SerializeToDB">
            <summary>
            Gets or sets flag that indicates whether the process needs to be serialized to DB.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchema._isMaxLoopCountInitialized">
            <summary>
            Gets or sets maximum number of process item repetitions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.IsLogging">
            <summary>
            Gets or sets flag that indicates whether the process needs to be logged.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.SerializeToMemory">
            <summary>
            Gets or sets flag that indicates whether the process needs to be serialized to memory.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.ParentSchemaUId">
            <summary>
            Gets or sets UId of the parent schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.IsValid">
            <summary>
            Flag determines whether the current schema is valid.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.IsActiveVersion">
            <summary>
            Gets the value indicating whether this schema is active.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.IsDelivered">
            <summary>
            Gets the value indicating whether this schema is delivered.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.Version">
            <summary>
            Gets or sets the version number of the current schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.BpmnElementName">
            <summary>
            Returns the name of the business process element BPMN.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.NotificationCaption">
            <summary>
            Get schema parameter that represents the caption of process notification.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.EntitySchemaUId">
            <summary>
            Gets entity schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.UseSystemSecurityContext">
            <summary>
            Gets or sets value that indicates whether is needed system security context.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.IsTracing">
            <summary>
            Process is in tracing mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchema.ExecutionTracePoints">
            <summary>
            Value that indicates whether is needed 
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.CompleteApplyingMetaDataValues">
            <summary>
            Loads resources and synchronizes elements parameters. Called at the end of meta data initialization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.LoadResources">
            <summary>
            Loads schema resources.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.CheckSchemaHasInvalidElements">
            <summary>
            Checks whether the current schema has invalid elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetIsEnabled">
            <summary>
            Returns the enabled state.
            </summary>
            <returns><c>true</c> if current schema is enabled; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetStartSignalsMetaInfo">
            <summary>
            Gets the collection of meta information items for each start signal.
            </summary>
            <returns>The collection of meta information items for each start signal.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetInvalidElementNames(System.String,System.Collections.Generic.List{System.Guid})">
            <summary>
            Returns list of invalid process elements.
            </summary>
            <param name="ownerSchemaName">Sub-process owner schema name.</param>
            <param name="validatedSchemaUIds">Validated schemas identifiers.</param>
            <returns>List of invalid process elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GenerateFlowSchema(Terrasoft.Core.Process.IProcessComponentSetStateService)">
            <summary>
            Generates the flow schema.
            </summary>
            <param name="stateService">The state service.</param>
            <returns>Generated flow schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetFlowEngineStateService">
            <summary>
            Returns the flow engine state service.
            </summary>
            <returns>Flow engine state service.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.Verify">
            <summary>
            Verifies the current schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetBaseSchemaElements">
            <summary>
            Gets the base schema elements.
            </summary>
            <returns>The base elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetHasInvalidElements">
            <summary>
            Returns flag that indicates invalid elements.
            </summary>
            <returns>Flag that indicates invalid elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetUseBackgroundMode(System.Guid)">
            <summary>
            Returns a value indicating whether background execution enabled for current schema element.
            </summary>
            <param name="elementUId">The element identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetCanStartInBackgroundMode">
            <summary>
            Returns a value indicating whether the process can be started in background mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.SynchronizeParameters">
            <summary>
            Synchronizes elements parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            Initializes of localized schema values.
            </summary>
            <param name="resourceManagerName">Name of the resource manager.</param>
            <param name="resourceGroupName">Name of the resource group.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Gets localized schema values.
            </summary>
            <param name="values">Localized values.</param>
            <param name="shouldIncludeInherited">Determines whether should get inherited values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.LoadLocalizableValues">
            <summary>
            Loads localized schema values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.ForceGetParameters">
            <summary>
            Forcibly obtains process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchema.CreateProcess(Terrasoft.Core.UserConnection)">
            <summary>
            Creates new process instance for current schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Process instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1">
            <summary>
            Base class for process schema dependency factories.
            </summary>
            <typeparam name="T">The type of schema.</typeparam>
            <seealso cref="T:Terrasoft.Core.Process.IProcessSchemaDependencyFactory" />
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>
            The schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1.FlowSchemaGenerator">
            <summary>
            Gets the flow schema generator.
            </summary>
            <value>
            The flow schema generator.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1.ElementsEnumerator">
            <summary>
            Gets the elements enumerator.
            </summary>
            <value>
            The elements enumerator.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1.ElementExtraDataBuilder">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1.CreateProcessElementFactory(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Creates the process element factory.
            </summary>
            <param name="process">The process instance.</param>
            <returns>
            The process element factory.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaElement">
            <summary>
            Represents base class for the process diagram elements.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchemaElement.ContainerUIdMetaIndex">
            <summary>
            The meta data index for the "ContainerUId" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchemaElement.UseBackgroundModeMetaIndex">
            <summary>
            The meta data index for the "UseBackgroundMode" property.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.#ctor(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElement"/> type.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchemaElement._caption">
            <summary>
            Caption.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaElement.ContainerUId">
            <summary>
            Gets or sets container UId for the current element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaElement.UseBackgroundMode">
            <summary>
            Gets or sets value that indicates whether the current element is used background mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaElement.IsSequenceFlow">
            <summary>
            Flag that indicates that an element of a business process schema is a connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaElement.BpmnElementName">
            <summary>
            Gets or sets name of the BPMN element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.CreateSequenceFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates element of the process transition.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> type.</returns>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.InitializeLocalizableValues(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Initializes resources from the specified storage from the specified manager and resorce group name.
            </summary>
            <param name="storage">Resource storage.</param>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue})">
            <summary>
            Returns localizable values list.
            </summary>
            <param name="values">Localizable values list.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Returns localizable values list.
            </summary>
            <param name="values">Localizable values list.</param>
            <param name="includeInherited">Flag that indicates include inherited resources or not.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.LoadLocalizableValues">
            <summary>
            Loads localizable value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetOutgoingsDefaultFlows">
            <summary>
            Returns outgoing default flows for the current element.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetOutgoingsConditionalFlows">
            <summary>
            Returns outgoing conditional sequence flows for the current element.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetOutgoingsDefaultFlows(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Returns outgoing default flows for the specified element.
            </summary>
            <param name="flowNode">Process element.</param>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetOutgoingsConditionalFlows(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Returns outgoing conditional sequence flows for the specified element.
            </summary>
            <param name="flowNode">Process element.</param>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElement.GetCaptionOrName">
            <summary>
            Returns the caption or name when caption is not defined.
            </summary>
            <returns>The caption or name.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaElements`1">
            <summary>
            Class for base elements of the process schema.
            </summary>
            <typeparam name="T">The type of the process schema.</typeparam>
            <seealso cref="T:Terrasoft.Core.Process.IBaseProcessSchemaElements" />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaElements`1"/> class.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaElements`1.Schema">
            <summary>
            Gets the schema.
            </summary>
            <value>
            The schema.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.Find(System.Func{Terrasoft.Core.Process.BaseProcessSchemaElement,System.Boolean})">
            <summary>
            Finds element if condition returns true.
            </summary>
            <param name="condition">Condition function.</param>
            <returns>Process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the
            collection.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.FindByUId(System.Guid)">
            <summary>
            Finds the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.GetByUId(System.Guid)">
            <summary>
            Gets the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <returns>Found element.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Element was not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.FindByName(System.String)">
            <summary>
            Finds the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaElements`1.GetByName(System.String)">
            <summary>
            Gets the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Element was not found.</exception>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaFactoryMetaItemCollection`1">
            <summary>
            Represents collection of items of the meta data.
            </summary>
            <typeparam name="T">Instance that derives the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaItem"/> type.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaFactoryMetaItemCollection`1.CreateItem(Terrasoft.Common.DataReader)">
            <summary>
            Creates instace of the item at the current position in the meta data set.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaFactoryMetaItemCollection`1.CreateItemInstance(System.String)">
            <summary>
            Creates instace of the item by its type name.
            </summary>
            <param name="typeName">Type name of the item.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaFactoryMetaItemCollection`1.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Fills collection with items of the meta data.
            </summary>
            <param name="metaItems">Collection of the meta items.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaFactoryMetaItemCollection`1.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaFactoryMetaItemCollection`1.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            Reads meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaItem">
            <summary>
            Represents base class for the process items.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchemaItem.TypeNamePropertyName">
            <summary>
            The meta data index for the "TypeName" property.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.#ctor(Terrasoft.Core.Process.BaseProcessSchemaItem)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaItem"/> type.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchemaItem._type">
            <summary>
            Gets the <see cref="T:System.Type"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaItem.TypeName">
            <summary>
            Gets full name of the <see cref="T:System.Type"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaItem.IsValid">
            <summary>
            Indicates element valid state.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.ToString">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            Fills collection with items of the meta data.
            </summary>
            <param name="metaItems">Collection of the meta items.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaItem.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement"/> type.</returns>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaManager`1">
            <summary>
            Represents base class for the process manager.
            </summary>
            <typeparam name="TBaseProcessSchema">The value of any type.</typeparam>
        </member>
        <member name="F:Terrasoft.Core.Process.BaseProcessSchemaManager`1.VersionPropertyName">
            <summary>
            The version property name
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaManager`1.Log">
            <summary>
            Returns the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaManager`1.BaseProcessSchemaSettingsHelper">
            <summary>
            Gets or sets the helper for manage process schema instance settings.
            </summary>
            <value>
            The process schema settings helper.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaManager`1.ProcessLogStorage">
            <summary>
            Returns the process log storage.
            </summary>
            <value>
            The process log storage.
            </value>
        </member>
        <member name="E:Terrasoft.Core.Process.BaseProcessSchemaManager`1.ProcessEnabled">
            <summary>
            Event of process enabling.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.OnProcessEnabled(Terrasoft.Core.Process.BaseProcessItemModificationEventArgs{`0})">
            <summary>
            Process enabling event handler.
            </summary>
            <param name="e">Process enabling arguments.</param>
        </member>
        <member name="E:Terrasoft.Core.Process.BaseProcessSchemaManager`1.ProcessDisabled">
            <summary>
            Event of process disabling.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.OnProcessDisabled(Terrasoft.Core.Process.BaseProcessItemModificationEventArgs{`0})">
            <summary>
            Process disabling event handler.
            </summary>
            <param name="e">Process disabling arguments.</param>
        </member>
        <member name="E:Terrasoft.Core.Process.BaseProcessSchemaManager`1.ProcessVersionChanged">
            <summary>
            Event of process version changing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.OnProcessVersionChanged(Terrasoft.Core.Process.BaseProcessItemModificationEventArgs{`0})">
            <summary>
            Process version changed event handler.
            </summary>
            <param name="e">Process version changing arguments.</param>
        </member>
        <member name="E:Terrasoft.Core.Process.BaseProcessSchemaManager`1.ProcessInfoActualized">
            <summary>
            Event of process version changing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.OnProcessInfoActualized(Terrasoft.Core.Process.BaseProcessSchemaModificationEventArgs{`0})">
            <summary>
            Process version changed event handler.
            </summary>
            <param name="e">Process version changing arguments.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.CreateInterpretationValidator(Terrasoft.Core.UserConnection)">
            <summary>
            Gets the interpretation validator for process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>Interpretation validator instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.SaveMetaDataDifferencePackage(`0,Terrasoft.Core.Configuration.SysSchema,System.String,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            The method is empty: the meta data difference package does not apply for process schemas.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetSchemaSources(`0,System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Gets the schema sources.
            </summary>
            <param name="schema">The schema.</param>
            <param name="schemaId">The schema identifier.</param>
            <param name="connection">The connection.</param>
            <returns>The schema sources.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetParentSchemaLocalizableValues(`0)">
            <summary>
            Gets the parent schema localizable values.
            </summary>
            <param name="schema">The schema.</param>
            <returns>
            The localizable data.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.CreateItem">
            <summary>
            Creates the item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.CreateSchemaInstance(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Creates the schema instance.
            </summary>
            <param name="schemaManagerItem">The schema manager item.</param>
            <param name="assembly">Assembly contains instance type.</param>
            <returns>Created instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.DeriveSchemaManagerItem(Terrasoft.Core.UserConnection,Terrasoft.Core.Entities.EntityCollection)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.ActualizeSchemaInfo(`0,System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Actualizes the flow data for the given schema.
            </summary>
            <param name="schema">The schema.</param>
            <param name="schemaId">The schema identifier.</param>
            <param name="connection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.SaveFlowSchema(`0,Terrasoft.Core.UserConnection)">
            <summary>
            Saves the flow schema for the given process schema.
            </summary>
            <param name="schema">The process schema.</param>
            <param name="connection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetProcessStatisticInfoQuery(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Gets the process statistic information query.
            </summary>
            <param name="sysProcessLogId">The system process log record identifier.</param>
            <param name="userConnection">The user connection.</param>
            <returns>The statistic information query.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetSchemaMetaData(Terrasoft.Core.UserConnection,`0)">
            <summary>
            Extracts schema meta data.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schema">Schema.</param>
            <returns>Byte array, which represent schema meta data.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.AssignSysSchemaProperties(Terrasoft.Core.Configuration.SysSchema,Terrasoft.Core.ISchemaManagerItem{`0},System.Guid)">
            <summary>
            Assigned properties of the SysSchema object.
            </summary>
            <param name="sysSchema">Instance of the SysSchema.</param>
            <param name="managerItem">Manager item.</param>
            <param name="packageId">Package identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.SaveSysSchemaResources(Terrasoft.Core.UserConnection,`0,Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Saves resources of the schema.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schema">Instance of the schema.</param>
            <param name="managerItem">Manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.SaveClonedSchema(Terrasoft.Core.UserConnection,Terrasoft.Core.ISchemaManagerItem{`0},Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Creates the cloned schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="designItem">The manager item.</param>
            <param name="sourceItem">The source manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.CreateSchemaCopy(Terrasoft.Core.UserConnection,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Creates copy of the schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sourceSchemaUId">The unique identifier of the source schema.</param>
            <param name="name">The name of the new schema.</param>
            <param name="caption">The caption of the new schema.</param>
            <param name="packageUId">The package identifier of the new schema.</param>
            <returns>The new schema instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetItemFromMetaData(System.Guid,Terrasoft.Core.UserConnection,System.Boolean,System.Guid,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetParentSchemas(System.Guid,Terrasoft.Core.UserConnection,System.Boolean,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Gets the parent schemas for the given one.
            </summary>
            <param name="schemaUId">The schema unique identifier.</param>
            <param name="userConnection">The user connection.</param>
            <param name="usePackageHierarchy"><c>true</c> if package hierarchy should be used, otherwise - <c>false</c>.
            </param>
            <param name="sysPackageId">The system package identifier.</param>
            <param name="workspaceId">The workspace identifier.</param>
            <returns>
            The collection of schemas, which are parent for the given one.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetCopiedSchemaInstance(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>Gets the copied schema instance.</summary>
            <param name="item">The design item.</param>
            <returns>Instance of the copied schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.FindItemById(System.Guid)">
            <summary>
            Searches for the element with the given identifier.
            </summary>
            <param name="id">The identifier of the element to find.</param>
            <returns>The element with the given identifier or <c>null</c> if it was not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetItemById(System.Guid)">
            <summary>
            Gets the element with the given identifier.
            </summary>
            <param name="id">The identifier of the element to get.</param>
            <returns>The element with the given identifier.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">The element was not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetIsActiveVersion(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Returns <c>true</c> if specified item is active version; otherwise - <c>false</c>.
            </summary>
            <param name="itemToCheck">The current item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.FindDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Performs manager initialization, using the specified schema manager provider and information from
            application configuration.
            </summary>
            <param name="provider">Schema manager provider.</param>
            <param name="configuration">Configuration information.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetMetaDataSerializer(Terrasoft.Core.UserConnection)">
            <summary>
            Gets serializer for the meta data.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>Instance that implements the <see cref="T:Terrasoft.Core.IMetaDataSerializer"/> interface.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetProcessValidationResult(`0,Terrasoft.Core.UserConnection)">
            <summary>
            Validates schema for ability to interpretation.
            </summary>
            <param name="process">Base process schema.</param>
            <param name="userConnection">User connection.</param>
            <returns>Results of analyzes for ability to interpretation.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetItemFromMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Returns item of the schema manager, using the specified identifier and user connection.
            </summary>
            <param name="schemaUId">Schema Id.</param>
            <param name="userConnection">User connection.</param>
            <returns>Item of the schema manager.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.RemoveRunningProcessDataByUId(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Removes the running process data by process schema identifier.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="processSchemaUId">The process schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.RemoveRunningProcessData(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Removes the running process data by process schema identifier.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="processSchemaId">The process schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.EnableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Enables the process.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaId">The process schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.DisableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Disables the process.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaId">The process schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetIsProcessEnabled(System.Guid)">
            <summary>
            Gets the is process enabled.
            </summary>
            <param name="schemaId">The process schema identifier.</param>
            <returns><c>true</c> if schema is enabled; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetIsActiveVersion(System.Guid)">
            <summary>
            Gets the is active version of the process schema.
            </summary>
            <param name="schemaId">The process schema identifier.</param>
            <returns><c>true</c> if schema is active version; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetMaxProcessVersionInPackage(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Returns max version for the schema in a package.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="parentSchemaId">The parent process schema identifier.</param>
            <param name="packageUId">The package unique identifier.</param>
            <returns>The version number.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetProcessStatisticInfo(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Gets the information for the each process schema element execution count.
            </summary>
            <param name="processLogRecordId">The process log record identifier.</param>
            <param name="userConnection">The user connection.</param>
            <returns>The set of the pairs "element unique identifier" -> "execution count".</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.SetActiveVersionItem(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Sets active version item.
            </summary>
            <param name="managerItem">Manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetActiveVersionItem(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Gets active version item.
            </summary>
            <param name="currentItem">Current version item.</param>
            <returns>Gets active version item.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.SetIsDeliveredPropertyValue(System.Guid,System.Boolean)">
            <summary>
            Sets is delivered property value.
            </summary>
            <param name="schemaUId">Schema UId.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.GetAllVersionItems(System.Guid)">
            <summary>
            Gets all version items by schema UId.
            </summary>
            <param name="schemaUId">The schema UId.</param>
            <returns>The list of schema items.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.Terrasoft#Core#Process#IBaseProcessSchemaManager#GetItemById(System.Guid)">
            <summary>
            Returns the base process schema item with specified identifier.
            </summary>
            <param name="schemaId">The schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManager`1.Terrasoft#Core#Process#IBaseProcessSchemaManager#FindParentSchema(Terrasoft.Core.Process.BaseProcessSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1">
            <summary>
            The base class for the process schema manager item.
            </summary>
            <typeparam name="TBaseProcessSchema">The type of the process schema.</typeparam>
            <seealso cref="T:Terrasoft.Core.SchemaManagerItem`1" />
            <seealso cref="T:Terrasoft.Core.Process.IBaseProcessSchemaManagerItem" />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.#ctor(Terrasoft.Core.SchemaManager{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="manager">Schema manager in which this instance is created
            <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.#ctor(Terrasoft.Core.ISchemaManagerItem{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
            <param name="isShallowClone">
            Flag that indicates whether the item's instance will not be cloned too.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.Terrasoft#Core#Process#IBaseProcessSchemaManagerItem#Instance">
            <summary>
            Returns initialized schema instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.UseInstanceFromMetaData">
            <summary>
            Returns a value indicating whether the instance should be initialized from meta data.
            </summary>
            <value>
            <c>true</c> if instance should be initialized from meta data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Cloned instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.CloneShallow">
            <summary>
            Performs the shallow clone of this instance.
            </summary>
            <returns>Shallow clone of this instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.Verify">
            <summary>
            Verifies this item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1.GetIsEnabled">
            <summary>
            Returns <c>true</c> if current instance is enabled, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper">
            <summary>
            Implements <see cref="T:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper"/> interface.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper"/>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper.#ctor(Terrasoft.Core.AppConnection,System.Func{Terrasoft.Core.UserConnection,Terrasoft.Core.DB.IQueryExecutor})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper"/> class.
            </summary>
            <param name="appConnection">The application connection.</param>
            <param name="queryExecutorFactoryMethod">The query executor factory method.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper.#ctor(Terrasoft.Core.AppConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper"/> class.
            </summary>
            <param name="appConnection">The application connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper.DisableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Deactivates the process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sysSchemaId">The process schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper.EnableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Activates the process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sysSchemaId">The process schema id.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper.GetDisabledProcesses">
            <summary>
            Returns information about disabled processes. Where both key and value is an id of disabled process schema.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessSchemaSettingsHelper.GetIsProcessEnabled(System.Guid)">
            <summary>
            Returns process schema enabled state.
            </summary>
            <param name="sysSchemaId">The system schema identifier.</param>
            <returns>
            <c>True</c> if process schema is enabled otherwise <c>False</c>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.InitializeLocalizableValues(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.InitializeLocalizableValues(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.LoadLocalizableValues">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.InitializeCreatedInSchemaUId">
            <summary>
            The method is not used.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskSchema.InitializeModifiedInSchemaUId">
            <summary>
            The method is not used.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.GetIsEmptyLookup(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Indicates that the given value is empty and has lookup type.
            </summary>
            <param name="value">The value.</param>
            <param name="dataValueType">The <see cref="T:Terrasoft.Core.DataValueType"/> of the value.</param>
            <returns><c>true</c> if the value is empty lookup value. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.GetIsEmptyDateTime(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Indicates that the given value is empty and has <c>DateTime</c> type.
            </summary>
            <param name="value">The value.</param>
            <param name="dataValueType">The <see cref="T:Terrasoft.Core.DataValueType"/> of the value.</param>
            <returns><c>true</c> if the value is empty <c>DateTime</c> value. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.InteractWithUser(Terrasoft.Core.Process.ProcessUserTask,Terrasoft.Core.Process.ProcessExecutingContext,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Executes interaction with user for specified <paramref name="userTask"/>. 
            </summary>
            <param name="userTask">User task.</param>
            <param name="context">Process executing context.</param>
            <param name="userConnection">User connection.</param>
            <param name="interactOnlyIfUserIsPerformer">When defined as <code>true</code>, interaction will be
            executed only in case when performer is defined and current user is performer.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.SetEntityColumnValues(Terrasoft.Core.Process.ProcessActivity,Terrasoft.Core.Entities.Entity)">
            <summary>
            Sets entity column values by element parameter values.
            </summary>
            <param name="source">Element.</param>
            <param name="entity">Entity.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.SetDynamicParameterValues(Terrasoft.Core.Process.ProcessActivity,Terrasoft.Core.Entities.Entity)">
            <summary>
            Sets dynamic parameter values by entity column values.
            </summary>
            <param name="source">Process element.</param>
            <param name="entity">Entity.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.GetIsEmptyLookupOrDateTimeValue(System.Object,Terrasoft.Core.DataValueType)">
            <summary>
            Indicates that the given value is empty and has lookup or <c>DateTime</c> type.
            </summary>
            <param name="value">The value.</param>
            <param name="dataValueType">The <see cref="T:Terrasoft.Core.DataValueType"/> of the value.</param>
            <returns><c>true</c> if the value is empty lookup or <c>DateTime</c> value. Otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.BaseProcessUserTaskUtilities.CreateDynamicProcessSchemaParameterIfNotExist(Terrasoft.Core.Process.ProcessUserTaskSchema,Terrasoft.Core.Entities.EntitySchemaColumn)">
            <summary>
            Creates dynamic parameter if it not exist in target schema by the specified entity schema column.
            </summary>
            <param name="target">Element.</param>
            <param name="column">Entity schema column.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.BpmnElementVocabulary">
            <summary>
            The types of the flow elements.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.FlowCancellationTokenName">
            <summary>Flow cancellation token name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.CollaborationDiagramName">
            <summary>The collaboration diagram name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.StartEventName">
            <summary>The start event name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.StartMessageName">
            <summary>The start message name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.StartSignalName">
            <summary>The start signal name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.StartTimerEventName">
            <summary>The start timer event name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.TerminateEventName">
            <summary>The terminate event name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.UserTaskName">
            <summary>The user task name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.ScriptTaskName">
            <summary>The script task name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.FormulaTaskName">
            <summary>The formula task name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.SequenceFlowName">
            <summary>The sequence flow name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.ConditionalSequenceFlowName">
            <summary>The conditional sequence flow name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.ParallelGatewayName">
            <summary>The parallel gateway name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.ExclusiveGatewayName">
            <summary>The exclusive gateway name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.InclusiveGatewayName">
            <summary>The inclusive gateway name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.IntermediateCatchSignalName">
            <summary>The intermediate catch signal name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.IntermediateThrowSignalName">
            <summary>The intermediate throw signal name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.IntermediateCatchMessageName">
            <summary>The intermediate catch message name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.IntermediateThrowMessageName">
            <summary>The intermediate throw message name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.SubProcessName">
            <summary>The sub process name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.EventSubProcessName">
            <summary>The event sub process name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.IntermediateCatchTimerEventName">
            <summary>The intermediate catch timer event name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.EventBasedGatewayName">
            <summary>The event based gateway name.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.BpmnElementVocabulary.CoreUserTaskName">
            <summary>An other core user task name.</summary>
        </member>
        <member name="M:Terrasoft.Core.Process.BpmnElementVocabulary.GetShouldProcessByTaskService(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Defines that the business process element requires execution by the <see cref="T:Terrasoft.Core.Process.TaskService"/> service.
            </summary>
            <returns> <c>true</c>, if the element of the business process requires execution by the service
            <see cref="T:Terrasoft.Core.Process.TaskService"/>; otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.CachingProcessSchemaSettingsHelper">
            <summary>
            Caching proxy for <see cref="T:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper"/> that uses
            <see cref="T:Terrasoft.Core.Store.ISynchronizedLocalCache"/> to store results.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper" />
        </member>
        <member name="M:Terrasoft.Core.Process.CachingProcessSchemaSettingsHelper.#ctor(Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper,Terrasoft.Core.Store.ISynchronizedLocalCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.CachingProcessSchemaSettingsHelper"/> class.
            </summary>
            <param name="helper">The helper instance.</param>
            <param name="cache">The cache.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.CancelProcessExecutingEventArgs">
            <summary>
            Represents class that contains cancel executing event data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.CancelProcessExecutingEventArgs.MustKeepProcessData">
            <summary>
            Gets or sets a value indicating whether process data should be kept after cancel execution.
            </summary>
            <value>
            <c>true</c> if process data should be kept after cancel execution; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Process.CommonProcessUtilities">
            <summary>
            Provides utility methods used in processes run time.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.CommonProcessUtilities.ProcessLog">
            <summary>
            Gets the process logger.
            </summary>
            <value>
            The process logger.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.CommonProcessUtilities.ProcessDesignLog">
            <summary>
            Gets the process design logger.
            </summary>
            <value>
            The process design logger.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.CommonProcessUtilities.JsonSerializerSettings">
            <summary>
            Gets the JSON serializer settings.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetNameOrCaption(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Returns caption or name if caption is empty.
            </summary>
            <param name="source">The manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetNameOrCaption(Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Returns caption or name if caption is empty.
            </summary>
            <param name="source">The schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetCanUseFlowEngine(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Returns <c>true</c> if process schema can be interpreted, otherwise <c>false</c>.
            </summary>
            <param name="source">The process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetCanUseFlowEngine(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Returns <c>true</c> if process schema can be interpreted, otherwise <c>false</c>.
            </summary>
            <param name="source">The process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.TryGetCanUseFlowEngine(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema},System.Boolean@)">
            <summary>
            Returns <c>true</c> if item contains all extra property values in order to recognize that process schema
            can be interpreted.
            </summary>
            <param name="source">The manager item.</param>
            <param name="canUseFlowEngine">if set to <c>true</c> process schema can be interpreted.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetBaseProcessSchemaItem(Terrasoft.Core.UserConnection,System.String,System.Guid)">
            <summary>Returns the base process schema manager item.</summary>
            <param name="source">The user connection.</param>
            <param name="managerName">Name of the process schema manager.</param>
            <param name="schemaId">The schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.FindBaseProcessSchemaManager(Terrasoft.Core.UserConnection,System.String)">
            <summary>Finds the base process schema manager.</summary>
            <param name="source">The user connection.</param>
            <param name="managerName">Name of the process schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetPropertiesData(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Returns process data.
            </summary>
            <param name="processItem">Process item.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.ExecuteWithinLock``1(System.Func{``0},System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Takes distributed lock for <paramref name="processLockKey"/> and executes the <paramref name="actionToRun"/>
            delegate while holding the lock.
            </summary>
            <param name="actionToRun">The action to run.</param>
            <param name="processLockKey">The process lock key.</param>
            <param name="lockTimeout">The lock timeout.</param>
            <exception cref="T:Terrasoft.Core.TryDistributedLockException">When distributed lock is not acquired.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.PublishDurationMetric(Terrasoft.Core.Process.ProcessActivity,System.Action,System.String)">
            <summary>
            Measures action duration and sends metric.
            </summary>
            <param name="source">Process activity.</param>
            <param name="action">Action to measure duration of.</param>
            <param name="label">Metric label.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetCanUseSystemSecurityContext(Terrasoft.Core.Process.Process)">
            <summary>
            Determines whether the current element can be executed with system security context.
            </summary>
            <param name="owner">Instance of the process.</param>
            <returns> <c>true</c>, if the process element can be executed with system security context;
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.CommonProcessUtilities.GetInternalProcessEngine(Terrasoft.Core.UserConnection)">
            <summary>
            Returns <see cref="T:Terrasoft.Core.IInternalProcessEngine"/> instance for current user. 
            </summary>
            <param name="source">User connection.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ConditionalSequenceFlow">
            <summary>
            ############ ########## ######### ######-######## # ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/>,
            ######### ##### ######## <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">##### ########.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ConditionalSequenceFlow.ActivityResults">
            <summary>
            ########## ########## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ConditionalSequenceFlow.PressedButtonsCode">
            <summary>
            #### ####### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ConditionalSequenceFlow.ResultParameterName">
            <summary>
            ### ############### ######### ######## ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataWriter">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ###### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataReader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ####### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.CheckCondition(System.Guid)">
            <summary>
            ######### ######## ####### ######## # ########## ######## ######-########.
            </summary>
            <param name="processUId">############# ########## ########, ### ######## ########## ######### #######.
            </param>
            <returns><c>true</c>, #### ########### ####### ######## # ########## ######## ######-########;
            ##### — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.Equals(System.Object)">
            <summary>
            ##########, ##### ## ###### ######### <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/> # ######## ######### 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">######### <see cref="T:System.Object"/>, ####### ############ # ####### ########### 
            <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/>.</param>
            <returns><c>true</c>, #### ############ ####### #########; ##### — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ConditionalSequenceFlow.GetHashCode">
            <summary>
            ########## ###-### #######.
            </summary>
            <returns>###-### #######.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.DynamicProcessSchemaParameter">
            <summary>
            Dynamic process parameter class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.DynamicProcessSchemaParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.DynamicProcessSchemaParameter"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.DynamicProcessSchemaParameter.#ctor(Terrasoft.Core.Process.DynamicProcessSchemaParameter)">
            <summary>
            Initializes a new cloned instance of the <see cref="T:Terrasoft.Core.Process.DynamicProcessSchemaParameter"/> class.
            </summary>
            <param name="source">Instance for clone.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.DynamicProcessSchemaParameter.IsDynamic">
            <summary>
            Gets flag that indicates whether the parameter is dynamic.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.DynamicProcessSchemaParameter.Clone">
            <summary>
            Clones parameter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcess.CompleteProcess">
            <summary>
            Completes execution of the current process.
            </summary>
            <returns>True if completed, otherwise throws exception.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            If the running process is not found.
            </exception> 
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcess.WritePropertiesDataToDB(Terrasoft.Core.UserConnection)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.EmbeddedProcessSchema.HasUserDefinedCode">
            <summary>
            Gets a value indicating whether this instance has user code in <see cref="P:Terrasoft.Core.Process.EmbeddedProcessSchema.UserDefinedCode"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.EmbeddedProcessSchema.SerializeToDB">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.EmbeddedProcessSchema.SerializeToMemory">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.EmbeddedProcessSchema.IsLogging">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.EmbeddedProcessSchema.ConvertedMethodsSchemaUIdList">
            <summary>
            Gets the schema UId list where methods converted into <see cref="P:Terrasoft.Core.Process.EmbeddedProcessSchema.UserDefinedCode"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.EmbeddedProcessSchema.UserDefinedCode">
            <summary>
            Gets or sets the content with user code.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.InitializeProperties">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.CompleteApplyingMetaDataValues">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.SaveUserDefinedCode(System.Action{System.Action{Terrasoft.Core.DesignMode.ISchemaContentSaver}})">
            <summary>
            Saves <see cref="P:Terrasoft.Core.Process.EmbeddedProcessSchema.UserDefinedCode"/> when its defined, and prevents further writing its to data writer
            in <see cref="M:Terrasoft.Core.Process.EmbeddedProcessSchema.WriteMetaData(Terrasoft.Common.DataWriter)"/> method.
            </summary>
            <param name="savingAction">Action used for delayed resolution of the <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentSaver"/>
            instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.ForceGetUserDefinedCode">
            <summary>
            Returns user defined code using <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentReader"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.GetOwnMethods">
            <summary>
            Returns methods, created or modified in current schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.SetUniqueNameAndCaptionForItem(Terrasoft.Core.IDesignItem,Terrasoft.Core.DesignModeClassDescriptor,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.GenerateItemUniqueIndex(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.EmbeddedProcessSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.EmptyElementExtraDataBuilder">
            <summary>
            Stub class for the interface <inheritdoc cref="T:Terrasoft.Core.Process.IElementExtraDataBuilder"/> implementation.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.EmptyElementExtraDataBuilder.Instance">
            <summary>
            Instance of the <inheritdoc cref="T:Terrasoft.Core.Process.EmptyElementExtraDataBuilder"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EmptyElementExtraDataBuilder.Build(Terrasoft.Core.Process.ProcessElementNotification,Terrasoft.Core.Process.ProcessActivity)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.EmptyProcessNotifier">
            <summary>
            Provides empty methods to set up notification events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EmptyProcessNotifier.Publish(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Method does nothing.
            </summary>
            <param name="notification">Notification data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.EmptyProcessNotifier.Cancel(System.Guid)">
            <summary>
            Method does nothing.
            </summary>
            <param name="id">Identifier of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.EntityColumnMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.#ctor(System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessSchemaParameterValue},System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.EntityColumnMappingCollection"/> class.
            </summary>
            <param name="columnsInfo">The column values information. Key - column meta path, value - process schema
            parameter value for the column.</param>
            <param name="entitySchemaUId">The entity schema unique identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.op_Explicit(Terrasoft.Core.Process.LocalizableParameterValuesList)~Terrasoft.Core.Process.EntityColumnMappingCollection">
            <summary>
            Performs an explicit conversion from <see cref="T:Terrasoft.Core.Process.LocalizableParameterValuesList"/> to
            <see cref="T:Terrasoft.Core.Process.EntityColumnMappingCollection"/>.
            </summary>
            <param name="localizableList">The localizable list.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.DeserializeValue(Terrasoft.Core.Process.ProcessSchemaParameterValue)">
            <summary>
            Deserializes the value.
            </summary>
            <param name="sourceValue">Parameter source value.</param>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.DeserializeValue(System.String)">
            <summary>
            Deserializes the value.
            </summary>
            <param name="value">Serialized value.</param>
            <returns>Deserialized value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.SerializeValue">
            <summary>
            Serializes the value to json string.
            </summary>
            <returns>Serialized value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingCollection.ToLocalizableList(Terrasoft.Core.DataValueTypeManager)">
            <summary>
            Converts current collection to localizable list.
            </summary>
            <param name="dataValueTypeManager">The data value type manager.<remarks>Used to define which parameter
            values should be localized.</remarks></param>
            <returns>
            Localizable list that represents current mapping collection.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingItem.GetSchemaColumnByMetaPath(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Gets the schema column by meta path.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The process schema.</param>
            <returns>The schema column.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingItem.GetSchemaColumnByMetaPath(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Gets the schema column by meta path regarding the given package.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="packageUId">The schema's package identifier.</param>
            <returns>The schema column.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingItem.GetSchema(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Returns schema regarding the given packageUId and SchemaUId.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="packageUId">The schema package identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Process.EntityColumnMappingValues">
            <summary>
            Represents a list of entity column values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingValues.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create a new instance of the <see cref="T:Terrasoft.Core.Process.EntityColumnMappingValues"/> class.
            </summary>
            <param name="values">Values of entity columns.</param>
            <param name="fetchMetaPaths">Meta paths of columns to fetch.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityColumnMappingValues.#ctor(Terrasoft.Core.UserConnection,System.Guid,Terrasoft.Core.Process.EntityColumnMappingCollection,System.String,System.Func{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.EntityColumnMappingValues"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="packageUId">Package identifier of the entity.</param>
            <param name="mappingCollection">Entity mapping collection.</param>
            <param name="parameterName">The name of the process parameter.</param>
            <param name="getColumnValueFunc">The function, which returns the value for the column macro.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.EntityColumnMappingValues.Values">
            <summary>
            Gets values of entity columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.EntityColumnMappingValues.FetchMetaPathes">
            <summary>
            Meta paths of columns to fetch.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.EntityUsedByProcessException">
            <summary>
            Exception is thrown while entity used by the process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.EntityUsedByProcessException.#ctor(System.Collections.ObjectModel.Collection{Terrasoft.Core.Configuration.ProcessListener})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.EntityUsedByProcessException"/> class.
            </summary>
            <param name="processListeners">Running process identifier.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.EntityUsedByProcessException.ProcessListeners">
            <summary>
            Gets or sets entity process listeners.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ExceptionHelper">
            <summary>
            Class with exception helper methods.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ExceptionHelper.ThrowSchemaColumnNotFoundException``1(System.Guid,System.String,System.String)">
            <summary>
            Raises a <see cref="T:Terrasoft.Core.EntitySchemaColumnNotFoundException"/>.
            </summary>
            <typeparam name="T">Type to return from method.</typeparam>
            <param name="schemaUId">Unique identifier of Entity schema.</param>
            <param name="schemaName">Entity schema name.</param>
            <param name="columnMetaPath">Entity schema column meta path.</param>
            <returns>Throws exception.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ExceptionHelper.ThrowSchemaNotFoundException``1(System.Guid)">
            <summary>
            Raises a <see cref="T:Terrasoft.Core.EntitySchemaNotFoundException"/>.
            </summary>
            <typeparam name="T">Type to return from method.</typeparam>
            <param name="schemaUId">Unique identifier of Entity schema.</param>
            <returns>Throws exception.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ExecutionTracePoints">
            <summary>
            Used to setup process execution tracing level.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionTracePoints.None">
            <summary>
            Process execution tracing disabled.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionTracePoints.Startup">
            <summary>
            Process startup event tracing enabled.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowCancellationToken">
            <summary>
            Represents a "virtual" element, that is placed after each intermediate signal
            in case of ExclusiveEventBasedGateway existance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowCancellationToken.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Initialized an instance of <see cref="T:Terrasoft.Core.Process.FlowCancellationToken"/>.
            </summary>
            <param name="flowSchema">Instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/> to initialize with.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowCancellationToken.#ctor(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            Initialized an instance of <see cref="T:Terrasoft.Core.Process.FlowCancellationToken"/>.
            </summary>
            <param name="flowSchema">Instance of <see cref="T:Terrasoft.Core.Process.FlowSchema"/> to initialize with.</param>
            <param name="bpmnElementName">An element's name according to BPM Notation.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowCancellationToken.ElementsToCancel">
            <summary>
            Contains an elements collection that need to be cancelled when current element is executed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowCancellationToken.WriteProperties(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowCancellationToken.ReadProperties(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowCancellationToken.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            ############ ####### ######-########.
            </summary>
            <param name="visitor">######### ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, ####### ######## ## ####### #####
            ########## ########.</param>
            <param name="previousFlowElement">## ############.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowConditionalGateway">
            <summary>
            Base class for BPMN elements containing conditional flows.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.#ctor(Terrasoft.Core.Process.FlowSchema,System.String,Terrasoft.Core.Process.ConditionEvalStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.FlowConditionalGateway"/> class using the flow schema.
            </summary>
            <param name="flowSchema">The flow schema.</param>
            <param name="bpmnElementName">Name of the BPMN element.</param>
            <param name="conditionEvalStrategy">The conditional flows evaluation strategy.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.#ctor(Terrasoft.Core.Process.FlowElement,Terrasoft.Core.Process.ConditionEvalStrategy)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.FlowConditionalGateway"/> class.
            </summary>
            <param name="flowElement">The instance of the flow element.</param>
            <param name="conditionEvalStrategy">The conditional flows evaluation strategy.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.ShouldRemoveDefSequenceFlowOnVisited">
            <summary>
            Gets a value indicating whether the default sequence flow should be removed on <see cref="M:Terrasoft.Core.Process.FlowConditionalGateway.OnVisited(Terrasoft.Core.Process.FlowElement)"/> event
            when conditional flows exist in <see cref="P:Terrasoft.Core.Process.FlowConditionalGateway.ResultSequenceFlows"/>.
            </summary>
            <value>
            <c>true</c> if the default sequence flow should be removed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.UseClonedInstance">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.ResultSequenceFlows">
            <summary>
            The set of output sequence flows.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowConditionalGateway.ConditionEvalStrategy">
            <summary>
            Gets the conditional flows evaluation strategy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.OnVisited(Terrasoft.Core.Process.FlowElement)">
            <summary>
            Called when <see cref="E:Terrasoft.Core.Process.FlowElement.Visited"/> event fired.
            </summary>
            <param name="flowElement">The flow element.</param>
            <returns>The elements that should be executed in the flow after the current gateway.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.SubscribeOnVisited(System.Func{Terrasoft.Core.Process.FlowElement,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement}})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowConditionalGateway.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.FlowElement">
            <summary>
            ############ ####### ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.#ctor(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/>, ######### ##### ######## <see cref="P:Terrasoft.Core.Process.FlowElement.FlowSchema"/>
            # BPMN ############ ######## ######-########.
            </summary>
            <param name="flowSchema">##### ########.</param>
            <param name="bpmnElementName">BPMN ############ ######## ######-########.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.UseClonedInstance">
            <summary>
            Returns <c>true</c> if a schema needs to clone an element when instantiating it, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.ForceSaveState">
            <summary>
            Returns <c>true</c> if current element state should be updated in persistent storage, otherwise
            <c>false</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.UId">
            <summary>
            ########## # ############# ############# ######## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.Name">
            <summary>
            ########## # ############# ############ ######## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.BpmnElementName">
            <summary>
            ########## BPMN ############ ######## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.FlowSchema">
            <summary>
            ########## ######### ##### ######-######## <see cref="P:Terrasoft.Core.Process.FlowElement.FlowSchema"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.ParameterStore">
            <summary>
            ######### ########## ######-######## <see cref="T:Terrasoft.Core.Process.IProcessParameterStore"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.FlowService">
            <summary>
            ###### ###### ######### <see cref="P:Terrasoft.Core.Process.FlowElement.FlowService"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.ParameterPathes">
            <summary>
            ######## ##### # ######### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowElement.IsUsedInEventSubProcess">
            <summary>
            #######, ############ ## # ########## ###########.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.FlowElement.Visited">
            <summary>
            #######, ########### ##### ####### ### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.SubscribeOnVisited(System.Func{Terrasoft.Core.Process.FlowElement,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement}})">
            <summary>
            ########### ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ## ####### "#######".
            </summary>
            <param name="defaultHandler">##### ## ######### ### ###### ####### "#######".</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.Equals(System.Object)">
            <summary>
            ##########, ##### ## ###### ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> # ######## ######### 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">######### <see cref="T:System.Object"/>, ####### ############ # ####### ########### 
            <see cref="T:Terrasoft.Core.Process.FlowElement"/>.</param>
            <returns><c>true</c>, #### ############ ####### #########; ##### — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.GetHashCode">
            <summary>
            ########## ###-### #######.
            </summary>
            <returns>###-### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            ########## ######## ######-######## # ####### ######### ########## <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="dataWriter">######### ###### ### ###### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            ###### ######## ######-######## # ####### ######### ########## <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="dataReader">######### ###### ### ###### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            ############ ####### ######-########.
            </summary>
            <param name="visitor">######### ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, ####### ######## ## ####### #####
            ########## ########.</param>
            <param name="previousFlowElement">## ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowElement.Clone">
            <summary>
            ####### ##### ########## ######## ######-########.
            </summary>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowEngine">
            <summary>
            Represents a class that initiates the start of the business process and initializes all the necessary 
            components for its execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessComponentSetStrategy)">
            <summary>
            Initialize instance of <see cref="T:Terrasoft.Core.Process.FlowEngine"/> with user connection settings.
            </summary>
            <param name="userConnection">User Connection.</param>
            <param name="processComponentSetStrategy">Instance of <see cref="T:Terrasoft.Core.Process.ProcessComponentSetStrategy"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initialize instance of <see cref="T:Terrasoft.Core.Process.FlowEngine"/> with user connection settings.
            </summary>
            <param name="userConnection">User Connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowEngine.CreatedInAppVersion">
            <summary>
            The application version, from which the process can be interpreted.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.GetIsVersionSupported(System.String)">
            <summary>
            Returns true if version is supported by <see cref="T:Terrasoft.Core.Process.FlowEngine"/>.
            </summary>
            <param name="versionToCheck">The version to check.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.EnqueueProcess(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Move to queue started message for the process running.
            </summary>
            <param name="processComponentSet">Instance of <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/></param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunSubProcess(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Runs the subprocess.
            </summary>
            <param name="process">Instance of the subprocess.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Runs the process.
            </summary>
            <param name="schema">Schema of the process.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.BaseProcessSchema,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Runs the process.
            </summary>
            <param name="schema">Schema of the process.</param>
            <param name="nameValueMap">Parameter values.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.BaseProcessSchema,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Runs the process.
            </summary>
            <param name="schema">Schema of the process.</param>
            <param name="nameValueMap">Parameter values.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngine.RunProcess(Terrasoft.Core.Process.ProcessComponentSet,System.Guid,System.Guid)">
            <summary>
            Runs the process.
            </summary>
            <param name="processComponentSet">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> class.</param>
            <param name="startSignalUId">Identifier of the start signal.</param>
            <param name="entityId">Identifier of the entity.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowEngineStateService">
            <summary>
            Manages the data of processes previously running in the system.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.#ctor(System.Func{System.String,System.String,Terrasoft.Core.Process.ProcessComponentSet},Terrasoft.Core.Store.CacheStoreProvider,Terrasoft.Core.Store.IPersistentStoreDBProvider)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.FlowEngineStateService"/> type.
            </summary>
            <param name="restoreMethod">Method to restore process instance.</param>
            <param name="cacheStoreProvider">Provider of the cache store.</param>
            <param name="dbProvider">DB provider.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.FlowEngineStateService"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindProcessComponentSet(System.Guid)">
            <summary>
            Finds for a set of process components by a given identifier.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <returns>Instance of the process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetProcessComponentSet(System.Guid)">
            <summary>
            Finds for a set of process components by a given identifier. If the component set is not found,
            an exception is thrown.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <returns>Instance of the process.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException"> If a set of process components with an identifier
            <paramref name="processUId"/> not found in storage.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveProcessComponentSet(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Saves a set of process components in the repository.
            </summary>
            <param name="process">A set of components of a running process that is saved in the repository.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveProcessComponentSet(System.Guid)">
            <summary>
            Removes a set of process components from the repository.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindFlowSchema(System.Guid)">
            <summary>
            Finds the flow schema according to the specified identifier.
            </summary>
            <param name="schemaId">Identifier of the schema.</param>
            <returns>Flow schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetFlowSchema(System.Guid)">
            <summary>
            Returns flow schema by a given identifier. If a schema is not found, an exception is thrown.
            </summary>
            <param name="schemaId">Identifier of the schema.</param>
            <returns>Flow schema.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException"> If a schema is not found with an identifier
            <paramref name="schemaId"/> not found in storage.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveFlowSchema(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Saves a flow schema in the repository.
            </summary>
            <param name="flowSchema">A flow schema that is saved in the repository.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveFlowSchema(System.Guid)">
            <summary>
            Removes a flow schema from the repository.
            </summary>
            <param name="flowSchemaUId">Unique identifier of the schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindFlowVisitor(System.Guid,Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Finds the process visitor for the specified process unique identifier.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="flowSchema">Flow schema.</param>
            <returns>Visitor of the flow schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveFlowVisitor(Terrasoft.Core.Process.FlowVisitor)">
            <summary>
            Saves a visitor in the repository.
            </summary>
            <param name="flowVisitor">Visitor of the flow schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveFlowVisitor(System.Guid)">
            <summary>
            Removes a visitor from the repository.
            </summary>
            <param name="processUId">The unique identifier of the process instance for which the visitor was created.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetParameterInfoPathes(System.Guid)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterInfoPathes(System.Guid)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetProcessParameterPathes(System.Guid)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.GetProcessParameterPathes(System.Guid)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindParameterInfo(System.Guid,System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.FindParameterInfo(System.Guid,System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetParameterInfo(System.Guid,System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterInfo(System.Guid,System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveParametersInfo(System.Guid)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.RemoveParametersInfo(System.Guid)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetParametersMapInfo(System.Guid)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.GetParametersMapInfo(System.Guid)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Decimal)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Enum)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue(System.Guid,System.String,Terrasoft.Common.ISerializableObject)">
            <inheritdoc cref="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,Terrasoft.Common.ISerializableObject)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.SetParameterValue``1(System.Guid,System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Decimal@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Double@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Enum@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.FindParameterValue(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.GetParameterValue(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.RemoveParameterValues(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.ContainsParameterPath(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.Terrasoft#Core#Process#IInternalProcessParameterStore#InternalSetParameterValue``1(System.Guid,System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.Terrasoft#Core#Process#IInternalProcessParameterStore#SetProcessParameterPaths(System.Guid,System.Collections.Generic.HashSet{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.Terrasoft#Core#Process#IInternalProcessParameterStore#InternalSaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.Terrasoft#Core#Process#IInternalProcessParameterStore#SetParameterInfoPaths(System.Guid,System.Collections.Generic.HashSet{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.Terrasoft#Core#Process#IInternalProcessParameterStore#GetParametersInfo(System.Guid,Terrasoft.Core.Process.BaseProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowEngineStateService.Terrasoft#Core#Process#IInternalProcessParameterStore#RemoveParameterValues(System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.FlowExclusiveGateway">
            <summary>
            ############ ####### "########### ###" ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowExclusiveGateway.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowExclusiveGateway"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">##### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowExclusiveGateway.#ctor(Terrasoft.Core.Process.FlowElement)">
            <summary>
            ####### ##### ########## <see cref="T:Terrasoft.Core.Process.FlowExclusiveGateway"/>.
            </summary>
            <param name="flowElement">"######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowExclusiveGateway.Clone">
            <summary>
            ####### ##### ########## ######## ######-########.
            </summary>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowInclusiveGateway">
            <summary>
            ############ ####### "########## ###" ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowInclusiveGateway.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowInclusiveGateway"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">##### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowInclusiveGateway.#ctor(Terrasoft.Core.Process.FlowElement)">
            <summary>
            ####### ##### ########## <see cref="T:Terrasoft.Core.Process.FlowInclusiveGateway"/>.
            </summary>
            <param name="flowElement">"######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowInclusiveGateway.Clone">
            <summary>
            ####### ##### ########## ######## ######-########.
            </summary>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowIntermediateCatchMessage">
            <summary>
            ############ ####### "############# ############## #########" ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateCatchMessage.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowIntermediateCatchMessage"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">"######### <see cref="T:Terrasoft.Core.Process.FlowSchema"/> ##### ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateCatchMessage.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            ############ ####### ######-########.
            </summary>
            <param name="visitor">######### ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, ####### ######## ## ####### #####
            ########## ########.</param>
            <param name="previousFlowElement">########## ####### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateCatchMessage.Clone">
            <summary>
            ####### ##### ########## ######## ######-########.
            </summary>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowIntermediateMessageEvent">
            <summary>
            ############ ####### ##### ######### ######-########, ############ # ############## #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.#ctor(Terrasoft.Core.Process.FlowIntermediateMessageEvent)">
            <summary>
            ####### ##### ########## <see cref="T:Terrasoft.Core.Process.FlowIntermediateMessageEvent"/>.
            </summary>
            <param name="flowElement">"######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.#ctor(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowIntermediateMessageEvent"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema"></param>
            <param name="bpmnElementName">### #### ######## ########.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowIntermediateMessageEvent.Message">
            <summary>
            ##### c########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataWriter">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ###### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateMessageEvent.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataReader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ####### #######.
            </param>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowIntermediateThrowMessage">
            <summary>
            ############ ####### "############# ############ #########" ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.#ctor(Terrasoft.Core.Process.FlowIntermediateThrowMessage)">
            <summary>
            ####### ##### ########## <see cref="T:Terrasoft.Core.Process.FlowIntermediateThrowMessage"/>.
            </summary>
            <param name="flowElement">"######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowIntermediateThrowMessage"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">"######### <see cref="T:Terrasoft.Core.Process.FlowSchema"/> ##### ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.FlowIntermediateThrowMessage.Clone">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.FlowParallelGateway">
            <summary>
            ############ ####### "#" ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowParallelGateway"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema"></param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowParallelGateway.UseClonedInstance">
            <summary>
            ##########, ##### ## ##### ### ############### ######## ########### ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowParallelGateway.ForceSaveState">
            <summary>
            Returns <c>True</c> if current element state should be updated in persistent storage, otherwise
            <c>False</c>.
            </summary>
            <value>
            <c>True</c> if current element state should be updated in persistent storage, otherwise <c>False</c>.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            ########## ######## ######## ######-######## # ####### ######### ########## <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="dataWriter">######### ###### ### ###### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            ###### ######## ######## ######-######## # ####### ######### ########## <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="dataReader">######### ###### ### ###### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            ############ ####### ######-########.
            </summary>
            <param name="visitor">######### ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, ####### ######## ## ####### #####
            ########## ########.</param>
            <param name="previousFlowElement">########## ####### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowParallelGateway.Clone">
            <summary>
            ####### ##### ########## ######## ######-########.
            </summary>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowSchema">
            <summary>
            ##### ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.#ctor(System.Guid,System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowSchema"/>, ######### ########### #########.
            </summary>
            <param name="schemaUId">############# ##### ######-########.</param>
            <param name="schemaName">############ ##### ######-########.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.SchemaId">
            <summary>
            ########## ############# ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.SequenceFlows">
            <summary>
            ########## ##### ########## ##### ########## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.FlowElements">
            <summary>
            ########## ##### ######### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchema.ParametersMapInfo">
            <summary>
            ####### ###### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GenerateSequenceFlowName(System.String,System.String)">
            <summary>
            Generates sequence flow name.
            </summary>
            <param name="source">Source element name.</param>
            <param name="target">Target element name.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.AddSequenceFlow(System.String,System.String)">
            <summary>
            Creates and adds to schema sequence flow from 'source' to 'target' element.
            </summary>
            <param name="sourceName">Source element name.</param>
            <param name="targetName">Target element name.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.SequenceFlow"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.AddFlowElement(System.Guid,System.String,System.String)">
            <summary>
            Adds flow element to schema.
            </summary>
            <param name="uid">Element identifier.</param>
            <param name="name">Element name.</param>
            <param name="bpmnElementName">BPMN element name.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Process.FlowElement"/>Flow element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.AddUserTask(System.Guid,System.String)">
            <summary>
            Adds user task flow element to schema.
            </summary>
            <param name="uid">Element identifier.</param>
            <param name="name">Element name.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.AddSequenceFlow(Terrasoft.Core.Process.IFlowElement,Terrasoft.Core.Process.IFlowElement)">
            <summary>
            Creates and adds to schema sequence flow from 'source' to 'target' flow element.
            </summary>
            <param name="source">Source element.</param>
            <param name="target">Target element.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.SequenceFlow"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateConditionalSequenceFlowWithGateway(Terrasoft.Core.Process.IFlowElement,Terrasoft.Core.Process.IFlowElement)">
            <summary>
            Creates and adds to schema conditional sequence flow
            from 'source' to 'target' element with exclusive gateway.
            </summary>
            <param name="source">Source element.</param>
            <param name="target">Target element.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateConditionalSequenceFlow(Terrasoft.Core.Process.IFlowElement,Terrasoft.Core.Process.IFlowElement)">
            <summary>
            Creates and adds to schema conditional sequence flow from 'source' to 'target' element.
            </summary>
            <param name="source">Source element.</param>
            <param name="target">Target element.</param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.AddParallelGateway(System.String)">
            <summary>
            Adds parallel gateway with specified name.
            </summary>
            <param name="name">Gateway name.</param>
            <returns>Gateway flow element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Deserialize(System.String)">
            <summary>
            ########## ############## ########## <see cref="T:Terrasoft.Core.Process.FlowSchema"/> ## ######### #########.
            </summary>
            <param name="serializedValue">######### ############# ###### <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</param>
            <returns>########## ######### <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataReader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ####### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataWriter">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ###### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Accept(Terrasoft.Core.Process.FlowVisitor,Terrasoft.Core.Process.FlowElement)">
            <summary>
            ######### ###### ######### ######### ######-########.
            </summary>
            <param name="visitor">
            ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>, ############## ####### ##### ########## ########.
            </param>
            <param name="previousFlowElement">## ############.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindFlowElement(System.String)">
            <summary>
            ############ ##### ######## ######-######## ## ############.
            </summary>
            <param name="name">############ ########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########, #### ####### ######,
            #### ### - ########## <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindFlowElement(System.Guid)">
            <summary>
            ############ ##### ######## ######-######## ## ##############.
            </summary>
            <param name="uid">############# ########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########, #### ####### ######,
            #### ### - ########## <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetFlowElement(System.String)">
            <summary>
            ############ ##### ######## ######-######## ## ############.
            </summary>
            <param name="name">############ ########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########, #### ####### ######,
            #### ### - ########## ##########.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            ############, #### ####### # ###### <paramref name="name"/> ## ######.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetFlowElement(System.Guid)">
            <summary>
            ############ ##### ######## ######-######## ## ##############.
            </summary>
            <param name="uid">############# ########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########, #### ####### ######,
            #### ### - ########## ##########.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            ############, #### ####### # ############### <paramref name="uid"/> ## ######.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Add(Terrasoft.Core.Process.FlowElement)">
            <summary>
            ######### # ##### ####### ######-########.
            </summary>
            <param name="flowElement">####### ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Add(Terrasoft.Core.Process.SequenceFlow)">
            <summary>
            ######### # ##### ########## ##### ##########.
            </summary>
            <param name="sequenceFlow">######### ########## #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetFlowElementInstance(Terrasoft.Core.Process.FlowElement)">
            <summary>
            ####### ######### ######## ######-######## ## ###### ######## #####.
            </summary>
            <param name="flowElement">########## ######## ######-########.</param>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateFlowElement(System.String)">
            <summary>
            Creates a flow element by the given BPMN element name <seealso cref="T:Terrasoft.Core.Process.BpmnElementVocabulary"/>.
            </summary>
            <param name="bpmnElementName">BPMN element name.</param>
            <returns>The instance of the <see cref="T:Terrasoft.Core.Process.FlowElement"/> class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateFlowElement(System.Guid,System.String,System.String)">
            <summary>
            ####### ####### ######-########.
            </summary>
            <param name="uid">############# ########.</param>
            <param name="name">############ ########.</param>
            <param name="bpmnElementName">BPMN ############ ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateSequenceFlow(System.Guid,System.String)">
            <summary>
            ####### ######### ########## ##### ##########.
            </summary>
            <param name="uid">############# ##########.</param>
            <param name="name">############ ##########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.CreateConditionalSequenceFlow(System.Guid,System.String)">
            <summary>
            ####### ######### ########## ##### ########## c ########.
            </summary>
            <param name="uid">############# ##########.</param>
            <param name="name">############ ##########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Process.ConditionalSequenceFlow"/> ########## ##### ########## ######-########
            c ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlow(System.String)">
            <summary>
            ############ ##### ########## ##### ########## ######-######## ## ############ ##########.
            </summary>
            <param name="name">############ ##########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########,
            #### ####### ######, #### ### - ########## <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlow(System.Guid)">
            <summary>
            ############ ##### ########## ##### ########## ######-######## ## ##############.
            </summary>
            <param name="uid">############# ##########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########,
            #### ####### ######, #### ### - ########## <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.GetSequenceFlow(System.Guid)">
            <summary>
            ############ ##### ########## ##### ########## ######-######## ## ##############.
            </summary>
            <param name="uid">############# ########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########,
            #### ####### ######, #### ### - ########## <c>null</c>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            ############, #### ####### # ############### <paramref name="uid"/> ## ######.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlowsByTargetUId(System.Guid)">
            <summary>
            ############ ##### ########## ##### ########## ######-######## ## ############## ########, # #######
            ######## ##########.
            </summary>
            <param name="targetFlowElementUId">############# ########, # ####### ######## ##########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########,
            #### ####### ######, #### ### - ########## <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.FindSequenceFlowsBySourceUId(System.Guid)">
            <summary>
            ############ ##### ########## ##### ########## ######-######## ## ############## ########, ## ########
            ####### ##########.
            </summary>
            <param name="sourceFlowElementUId">############# ########, ## ######## ####### ##########.</param>
            <returns>
            ########## ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########,
            #### ####### ######, #### ### - ########## <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchema.Serialize">
            <summary>
            ############# ######### ####### ######.
            </summary>
            <returns>########## ######### ############# ###### <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowSchemaGenerator">
            <summary>
            The generator for the business process schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.FlowSchemaGenerator"/> class with the specified
            business-process schema.
            </summary>
            <param name="processSchema">Schema of the business-process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGenerator.Generate">
            <summary>
            Generates the process flow schema.
            </summary>
            <returns>Process flow schema.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowSchemaGeneratorResult">
            <summary>
            Represents data of the flow schema generation results.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchemaGeneratorResult.ProcessValidationResult">
            <summary>
            The validation result. The value is changed if generation was failed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowSchemaGeneratorResult.FlowSchema">
            <summary>
            The flow schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities">
            <summary>
            Provides auxiliary methods for generating (parsing) of process schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.PropertyDelimiter">
            <summary>
            The property delimiter.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.ExpressionConvertors">
            <summary>
            The list of conversion methods.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetSchemaParameterValueMacros(System.Guid,System.Guid)">
            <summary>
            Returns a macros of the parameter value.
            </summary>
            <param name="schemaElementUId">UId of the schema element.</param>
            <param name="schemaParameterUId">UId of the parameter.</param>
            <returns>Returns string that represents a macros of the parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetSchemaParameterValueMacros(System.Guid)">
            <summary>
            Returns a macros of the parameter value.
            </summary>
            <param name="schemaParameterUId">UId of the parameter.</param>
            <returns>Returns string that represents a macros of the parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetCodeConversionTemplateSysSettings(System.String,System.String)">
            <summary>
            Generates code string for getting the system setting value.
            </summary>
            <param name="valueTypeName">The type name.</param>
            <param name="sysSettingsCode">The code of the system setting.</param>
            <returns>Code string.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetPropertyValueMacros(System.String)">
            <summary>
            Returns a macros of the property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Returns string that represents a macros of the property value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.CreateProcessParameterInfo(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Creates instance of the <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> type.
            </summary>
            <param name="schemaParameter">Process parameter.</param>
            <returns>Data of the process parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.ConvertExpressionTextToCode(Terrasoft.Core.UserConnection,System.String,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ExpressionConverter})">
            <summary>
            Generates code string based on expression text.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="expressionText">Text of expression.</param>
            <param name="expressionConvertors">List of functions that convert expression text to executable code.
            </param>
            <returns>Code string.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetProcessParameterPath(System.String,System.String)">
            <summary>
            Generates a string with actual path to parameter of process element.
            The path is generated based on the specified parameter Id and process element Id.
            </summary>
            <param name="parameterUId">Process schema parameter Id.</param>
            <param name="rootParameterPath">Path to the root parameter.</param>
            <returns>String with path to the process parameter or process element parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetProcessParameterPath(System.Guid,System.Guid)">
            <summary>
            Generates a string with actual path to parameter of process element.
            The path is generated based on the specified parameter Id and process element Id.
            </summary>
            <param name="parameterUId">Process schema parameter Id.</param>
            <param name="schemaElementUId">Process element Id.</param>
            <returns>String with path to the process element parameter.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">The <paramref name="parameterUId"/> parameter Id
            or process element Id is empty.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetProcessParameterPath(System.Guid)">
            <summary>
            Generates a string with actual path to process schema parameter.
            The path is generated based on the specified parameter Id.
            </summary>
            <param name="parameterUId">Process schema parameter Id.</param>
            <returns>String with path to the process schema parameter.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">The <paramref name="parameterUId"/> parameter Id
            is empty.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetClassNameProcessMethodsWrapper(Terrasoft.Core.Schema)">
            <summary>
            Gets name of the class that is a container for the process schema methods.
            </summary>
            <param name="schema">Instance that derives the <see cref="T:Terrasoft.Core.Schema"/> type.</param>
            <returns>Class name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetScriptMethodName(System.String)">
            <summary>
            Returns the method name for the script of the process element.
            </summary>
            <param name="schemaElementName">The name of the process element.</param>
            <returns>Method name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.ActualizeFormulaParameter(Terrasoft.Core.Process.BaseProcessSchema,System.String,System.Guid,System.String,System.String)">
            <summary>
            Actualizes the formula parameter before validation.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="formulaValue">The formula value.</param>
            <param name="resultDataValueTypeUId">The result parameter data value type identifier.</param>
            <param name="parameterName">Name of the parameter.</param>
            <param name="elementName">Name of the element.</param>
            <returns>The result info after actualization.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.CreateProcessParameterMapInfo(System.String)">
            <summary>
            Creates an instance of <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>, which provides information about the
            binding of a parameter value to a process parameter.
            </summary>
            <param name="parameterMapPath">String with actual path to the element parameter or process schema.
            </param>
            <returns>Instance of <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.TryGetResultParameterValueType(Terrasoft.Core.Process.IProcessElementMetaInfo,Terrasoft.Core.Process.IFlowSchemaGenerator,System.Type@)">
            <summary>
            Attempts to get type of schema result parameter value.
            </summary>
            <param name="element">Process schema element.</param>
            <param name="generator">Flow schema generator.</param>
            <param name="type">Represents type of the result parameter.</param>
            <returns><c>true</c> if type get successfully, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowSchemaGeneratorUtilities.GetDcmChangeStageUserTaskName(System.Guid,System.Guid)">
            <summary>
            Returns the name of the change stage user task process element.
            </summary>
            <param name="elementUId">Element identifier.</param>
            <param name="nextStageId">Stage record identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowService">
            <summary>
            ########## BPMN-######### # ########### ######### ######-#########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.#ctor(Terrasoft.Core.Process.IMessageQueueManagerItem,Terrasoft.Core.Process.IFlowSchemaStateService,System.Func{System.Guid,Terrasoft.Core.Process.FlowVisitor})">
            <summary>
            Instantiates <see cref="T:Terrasoft.Core.Process.FlowService"/> instance with specified message queue manager and
            FlowVisitor factory func.
            </summary>
            <param name="flowQueue">MessageQueue manager.</param>
            <param name="flowSchemaStateService">The process data control element.</param>
            <param name="flowVisitorFactory">Func, that creates FlowVisitor element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.#ctor(Terrasoft.Core.Process.IMessageQueueManagerItem,Terrasoft.Core.Process.IFlowSchemaStateService)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowService"/> # ######## ######### ######### ######## #########.
            </summary>
            <param name="flowQueue">####### ######### ######## #########.</param>
            <param name="flowSchemaStateService">####### ########## ####### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.SendCheckGatewayConditionsMessage(Terrasoft.Core.Process.FlowElement,System.Collections.Generic.LinkedList{Terrasoft.Core.Process.SequenceFlow},Terrasoft.Core.Process.ConditionEvalStrategy,System.Guid)">
            <summary>
            ######## # ####### ######### ## ########## ######### ######## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.SendErrorMessage(System.Guid,Terrasoft.Core.Process.FlowElement,Terrasoft.Core.Process.FlowElement,System.String)">
            <summary>
            ######## # ####### ######### # ############# ######.
            </summary>
            <param name="processUId">############# ########.</param>
            <param name="flowElement">####### ########, ## ####### ######### ######.</param>
            <param name="previousFlowElement">########## ####### ########.</param>
            <param name="errorMessage">######### ## ######.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowService.Dispose">
            <summary>
            ########### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowStartMessage">
            <summary>
            ############ ####### "######### #########" ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowStartMessage.#ctor(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowStartMessage"/>, ######### ##### ########
            <see cref="T:Terrasoft.Core.Process.FlowSchema"/>.
            </summary>
            <param name="flowSchema">"######### <see cref="T:Terrasoft.Core.Process.FlowSchema"/> ##### ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowStartMessage.Clone">
            <summary>
            ####### ##### ########## ######## ######-########.
            </summary>
            <returns>##### ########## <see cref="T:Terrasoft.Core.Process.FlowElement"/> ######## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowVisitor">
            <summary>
            ######## ## ####### ##### ########## ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor(Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> # ######## ########## ########## ######-########.
            </summary>
            <param name="parameterStore">######### ########## ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor(System.Collections.Generic.IList{Terrasoft.Core.Process.FlowElement})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> class.
            </summary>
            <param name="visitedElementsContainer">The visited elements container.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.#ctor(Terrasoft.Core.Process.IProcessParameterStore,Terrasoft.Core.Process.FlowService,System.Guid)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> # ######## ########## ########## ######-########
            # ####### ###### #########.
            </summary>
            <param name="parameterStore">######### ########## ######-########.</param>
            <param name="flowService">###### ###### #########.</param>
            <param name="processUId">############# ########## ########.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowVisitor.ProcessUId">
            <summary>
            ############# ########## ########, ### ######## ############ ###### ##########.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.FlowVisitor.Visited">
            <summary>
            ####### ############, ##### ####### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.RemoveFromQueue(System.String)">
            <summary>
            Removes an item from Queue by it's name.
            </summary>
            <param name="elementName">Element's name according to process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.RestoreState(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            ############### ######### ########## ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.
            </summary>
            <param name="flowSchema">##### ########.</param>
            <param name="serializedValue">######### ############# ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.SetFlowService(Terrasoft.Core.Process.FlowService)">
            <summary>
            ######### ###### ###### #########.
            </summary>
            <param name="flowService">###### ###### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.GetIsStateSaveRequired">
            <summary>
            Returns <c>True</c> when some of visited flow element need be saved in persistent storage,
            otherwise <c>False</c>.
            </summary>
            <returns> <c>True</c> when some of visited flow element need be saved in persistent storage,
            otherwise <c>False</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Deserialize(Terrasoft.Core.Process.FlowSchema,System.String)">
            <summary>
            ########## ############## ########## <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> ## ######### ################ ########.
            </summary>
            <param name="flowSchema">##### ########.</param>
            <param name="serializedValue">######### ############# ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</param>
            <returns>########## ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Equals(System.Object)">
            <summary>
            ##########, ##### ## ###### ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> # ######## ######### 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">######### <see cref="T:System.Object"/>, ####### ############ # ####### ########### 
            <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</param>
            <returns><c>true</c>, #### ############ ####### #########; ##### — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.GetHashCode">
            <summary>
            ########## ###-### #######.
            </summary>
            <returns>###-### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Visit(System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.FlowElement},Terrasoft.Core.Process.FlowElement)">
            <summary>
            ######## ########, ######### # ##########.
            </summary>
            <param name="flowElements">######### ######### ######-########.</param>
            <param name="previousFlowElement">########## ######### ######## ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.FlowVisitor.Serialize">
            <summary>
            ############# ######### ####### ######.
            </summary>
            <returns>########## ######### ############# ###### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.FlowVisitorQueueItem">
            <summary>
            ############ ######## ##### ########## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowVisitorQueueItem.FlowElement">
            <summary>
            ####### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.FlowVisitorQueueItem.PreviousFlowElement">
            <summary>
            ########## ####### ######-########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IBaseProcessSchemaElements">
            <summary>
            The interface for the process schema base elements.
            </summary>
            <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaElements.FindByUId(System.Guid)">
            <summary>
            Finds the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaElements.GetByUId(System.Guid)">
            <summary>
            Gets the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaElements.FindByName(System.String)">
            <summary>
            Finds the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaElements.GetByName(System.String)">
            <summary>
            Gets the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IBaseProcessSchemaManager">
            <summary>
            The interface for the process schema manager base class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.GetIsProcessEnabled(System.Guid)">
            <summary>
            Gets the is process enabled.
            </summary>
            <param name="schemaId">The process schema identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.GetIsActiveVersion(System.Guid)">
            <summary>
            Gets the is active version of the process schema.
            </summary>
            <param name="schemaId">The process schema identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.SetIsDeliveredPropertyValue(System.Guid,System.Boolean)">
            <summary>
            Sets is delivered property value.
            </summary>
            <param name="schemaUId">Schema UId.</param>
            <param name="value">Value to set.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.GetAllVersionItems(System.Guid)">
            <summary>
            Gets all version items by schema UId.
            </summary>
            <param name="schemaUId">The schema UId.</param>
            <returns>The list of schema items.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.GetItemById(System.Guid)">
            <summary>Returns the base process schema item with specified identifier.</summary>
            <param name="schemaId">The schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.FindParentSchema(Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Returns parent schema.
            </summary>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManager.RemoveRunningProcessData(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Removes the running process data by process schema identifier.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="processSchemaId">The process schema identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IBaseProcessSchemaManagerItem">
            <summary>
            Represents manager item of the base process schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.ISchemaManagerItem" />
        </member>
        <member name="P:Terrasoft.Core.Process.IBaseProcessSchemaManagerItem.Instance">
            <summary>
            Gets the schema instance.
            </summary>
            <value>
            The schema instance.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManagerItem.Verify">
            <summary>
            Verifies this item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaManagerItem.GetIsEnabled">
            <summary>
            Returns <c>true</c> if current instance is enabled, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper">
            <summary>
            Provides methods to manage settings of the process schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper.GetIsProcessEnabled(System.Guid)">
            <summary>
            Returns process schema enabled state.
            </summary>
            <param name="sysSchemaId">The system schema identifier.</param>
            <returns><c>true</c> if process schema is enabled otherwise <c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper.GetDisabledProcesses">
            <summary>
            Returns information about disabled processes. Where both key and value is an identifier of disabled
            process schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper.EnableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Activates the process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sysSchemaId">The process schema id.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IBaseProcessSchemaSettingsHelper.DisableProcess(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Deactivates the process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sysSchemaId">The process schema identifier.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IElementExtraDataBuilder">
            <summary>
            Forms extra data of the process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IElementExtraDataBuilder.Build(Terrasoft.Core.Process.ProcessElementNotification,Terrasoft.Core.Process.ProcessActivity)">
            <summary>
            Fills with extra data of the process element.
            </summary>
            <param name="notificationData">Data of the process element notification event.</param>
            <param name="element">Process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowElementFactory.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.FlowElement"/> type.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ExpressionConverter">
            <summary>
            Defines the method signature for the expression conversion.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sb">The C# code <see cref="T:System.Text.StringBuilder"/>.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IFlowSchemaGenerator">
            <summary>
            Provides methods of the flow schema generator.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IFlowSchemaGenerator.ExpressionConvertors">
            <summary>
            Gets the read-only list of conversion methods.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.Generate">
            <summary>
            Generates the process flow schema.
            </summary>
            <returns>Process flow schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.GetParametrizedProcessSchemaElement(System.Guid)">
            <summary>
            Gets the parametrized process schema element by the its identifier.
            </summary>
            <param name="schemaElementUId">The element's identifier.</param>
            <returns>"The process schema element implemented interface
            <see cref="T:Terrasoft.Core.Process.IParametrizedProcessSchemaElement"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.GetParametrizedSchemaElements">
            <summary>
            Returns the process schema elements that implement <see cref="T:Terrasoft.Core.Process.IParametrizedProcessSchemaElement"/>.
            </summary>
            <returns>The list of the elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.FindProcessSchemaParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Finds the process schema parameter by its map info.
            </summary>
            <param name="parameterMapInfo">The process schema parameter path.</param>
            <returns>The found process schema parameter or <c>null</c> if its not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.GetProcessSchemaParameter(System.String)">
            <summary>
            Gets the process schema parameter by its path.
            </summary>
            <param name="parameterMapPath">The process schema parameter path.</param>
            <returns>The found process schema parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.GetProcessSchemaParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Gets the process schema parameter by its map info.
            </summary>
            <param name="parameterMapInfo">The process schema parameter map info.</param>
            <returns>The found process schema parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.TryGetProcessItemName(System.String,System.String@)">
            <summary>
            Attempts to get process schema parameter name or process element parameter name.
            </summary>
            <param name="parameterMapPath">Represents parameter mapping path.</param>
            <param name="itemName">Represents a string consisting of comma-separated parameter names.</param>
            <returns><c>true</c> if the parameter exists, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.TryGenerate(Terrasoft.Core.Process.FlowSchemaGeneratorResult@)">
            <summary>
            Generates a new flow schema. A return value indicates whether the generation succeeded or failed.
            </summary>
            <param name="generatorResult">Represents data of the flow schema generation results.</param>
            <returns><c>true</c> if flow schema is generated, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaGenerator.TryGetResultParameterValueType(System.Guid,System.Type@)">
            <summary>
            Attempts to get type of schema result parameter value.
            </summary>
            <param name="schemaElementUId">The element's identifier.</param>
            <param name="type">Represents type of the result parameter.</param>
            <returns><c>true</c> if type get successfully, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.FindFlowSchema(System.Guid)">
            <summary>
            ############ ##### ###### ##### ######## ## ######### ##############.
            </summary>
            <param name="schemaId">############# ##### ########.</param>
            <returns>###### ##### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.GetFlowSchema(System.Guid)">
            <summary>
            ########## ###### ##### ######## ## ######### ##############. #### ##### ######## ## #######, 
            ############ ##########.
            </summary>
            <param name="schemaId">############# ##### ########.</param>
            <returns>###### ##### ########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ##### ######## # ###############
            <paramref name="schemaId"/> ## ####### # #########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.FindFlowVisitor(System.Guid,Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ########## ######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/> ## ######### ############## ########.
            </summary>
            <param name="processUId">############# ########## ########.</param>
            <param name="flowSchema">###### ##### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Process.FlowVisitor"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.SaveFlowSchema(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ######### # ######### ###### ##### ########.
            </summary>
            <param name="flowSchema">###### ##### ########, ########## # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.SaveFlowVisitor(Terrasoft.Core.Process.FlowVisitor)">
            <summary>
            ######### # ######### ########## ######### ########.
            </summary>
            <param name="flowVisitor">###### ##### ########, ########## # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.RemoveFlowSchema(System.Guid)">
            <summary>
            ####### ###### ##### ######## ## #########.
            </summary>
            <param name="flowSchemaId">############# ########## ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IFlowSchemaStateService.RemoveFlowVisitor(System.Guid)">
            <summary>
            ####### ###### ##### ######## ## #########.
            </summary>
            <param name="processUId">############# ########## ########, ### ######## ### ###### FlowVisitor.
            </param>
        </member>
        <member name="T:Terrasoft.Core.Process.IInternalProcessParameterStore">
            <summary>
            Provides way to update parameters value and info separately from parameter paths and parameter info paths.
            Used by <see cref="T:Terrasoft.Core.Process.IProcessInstanceParameterStore"/>.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IProcessParameterStore" />
        </member>
        <member name="M:Terrasoft.Core.Process.IInternalProcessParameterStore.InternalSetParameterValue``1(System.Guid,System.String,``0)">
            <summary>
            Saves parameter value.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="processUId">The process identifier.</param>
            <param name="parameterPath">The parameter path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IInternalProcessParameterStore.SetProcessParameterPaths(System.Guid,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Saves the process parameter paths.
            </summary>
            <param name="processUId">The process identifier.</param>
            <param name="parameterPaths">The parameter paths.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IInternalProcessParameterStore.SetParameterInfoPaths(System.Guid,System.Collections.Generic.HashSet{System.String})">
            <summary>
            Saves the parameter information paths.
            </summary>
            <param name="processUId">The process identifier.</param>
            <param name="parameterPaths">The parameter paths.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IInternalProcessParameterStore.InternalSaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <summary>
            Saves parameter information.
            </summary>
            <param name="processUId">The process identifier.</param>
            <param name="parameterPath">The parameter path.</param>
            <param name="parameterInfo">The parameter information.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IInternalProcessParameterStore.GetParametersInfo(System.Guid,Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Returns the parameters information using saved parameters info and current
            <see cref="P:Terrasoft.Core.Process.FlowSchema.ParametersMapInfo"/> from flow schema of specified <paramref name="schema"/>.
            </summary>
            <param name="processUId">The process identifier.</param>
            <param name="schema">Base process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IInternalProcessParameterStore.RemoveParameterValues(System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Removes the parameter values for specified <paramref name="parameterPaths"/>.
            </summary>
            <param name="processUId">The process identifier.</param>
            <param name="parameterPaths">The parameter paths.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IParametrizedProcessSchemaElement">
            <summary>
            Provides properties of the parametrized process element and instance methods for the synchronization of
            parameters.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IProcessSchemaSignalEvent"/>
        </member>
        <member name="P:Terrasoft.Core.Process.IParametrizedProcessSchemaElement.EntitySchemaUId">
            <summary>
            Gets or sets the entity schema identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IParametrizedProcessSchemaElement.SynchronizeParameters">
            <summary>
            Synchronizes process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.FindProcessComponentSet(System.Guid)">
            <summary>
            ############ ##### ###### ########### ######## ## ######### ##############.
            </summary>
            <param name="processComponentSetUId">############# ###### ########### ########.</param>
            <returns>##### ########### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.GetProcessComponentSet(System.Guid)">
            <summary>
            ########## ##### ########### ######## ## ######### ##############. #### ##### ########### ## ######, 
            ############ ##########.
            </summary>
            <param name="processComponentSetUId">############# ###### ########### ########.</param>
            <returns>##### ########### ########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ##### ########### ######## # ###############
            <paramref name="processComponentSetUId"/> ## ###### # #########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.SaveProcessComponentSet(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            ######### # ######### ##### ########### ########.
            </summary>
            <param name="processComponentSet">##### ########### ########### ########, ########## # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.FindFlowSchema(System.Guid)">
            <summary>
            ############ ##### ###### ##### ######## ## ######### ##############.
            </summary>
            <param name="schemaId">############# ##### ########.</param>
            <returns>###### ##### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.GetFlowSchema(System.Guid)">
            <summary>
            ########## ###### ##### ######## ## ######### ##############. #### ##### ######## ## #######, 
            ############ ##########.
            </summary>
            <param name="schemaId">############# ##### ########.</param>
            <returns>###### ##### ########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ##### ######## # ###############
            <paramref name="schemaId"/> ## ####### # #########.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.SaveFlowSchema(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ######### # ######### ###### ##### ########.
            </summary>
            <param name="flowSchema">###### ##### ########, ########## # #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.RemoveFlowVisitor(System.Guid)">
            <summary>
            ####### ###### ##### ######## ## #########.
            </summary>
            <param name="processUId">############# ########## ########, ### ######## ### ###### FlowVisitor.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessComponentSetStateService.RemoveProcessComponentSet(System.Guid)">
            <summary>
            ####### ##### ########### ######## ## #########.
            </summary>
            <param name="processComponentSetUId">############# ########## ########.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessDataContractFilterConverter">
            <summary>
            Represents interface for DataContract filter converter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataContractFilterConverter.GetIsDataContractFilter(System.String)">
            <summary>
            Returns is DataContract filter.
            </summary>
            <param name="dataSourceFilters">Serialized filters.</param>
            <returns><c>true</c> if <paramref name="dataSourceFilters" />is DataContract filter;
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataContractFilterConverter.ConvertToEntitySchemaQueryFilterItem(Terrasoft.Core.Entities.EntitySchemaQuery,System.String)">
            <summary>
            Converts <see cref="T:System.String"/> serialized filters to <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/> for
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.
            </summary>
            <param name="esq">Instance of the EntitySchemaQuery class.</param>
            <param name="serializedFilters">Serialized filters.</param>
            <returns><see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/> for <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataContractFilterConverter.ConvertToEntitySchemaQueryFilterItem(Terrasoft.Core.Entities.EntitySchemaQuery,Terrasoft.Core.Process.Process,System.String)">
            <summary>
            Converts <see cref="T:System.String"/> process serialized filters to <see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/> for
            <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/> with process parameter mappings processing.
            </summary>
            <param name="esq">Instance of the EntitySchemaQuery class.</param>
            <param name="processActivityOwner">Process activity to obtain parameters.</param>
            <param name="serializedFilters">Serialized filters.</param>
            <returns><see cref="T:Terrasoft.Core.Entities.IEntitySchemaQueryFilterItem"/> for <see cref="T:Terrasoft.Core.Entities.EntitySchemaQuery"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataContractFilterConverter.ConvertToProcessDataContractFilters(Terrasoft.Core.Process.Process,System.String)">
            <summary>
            Converts a set of filters to process format.
            </summary>
            <param name="processActivityOwner">Instance of the <see cref="T:Terrasoft.Core.Process.Process"/> class.</param>
            <param name="dataSourceFilters">Serialized filters.</param>
            <returns>Set of filters in the process format.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataContractFilterConverter.GetActivityFinalStatusFilter(System.Guid,Terrasoft.Core.Entities.Entity)">
            <summary>
            Returns the serialized filter for activities in final status.
            </summary>
            <param name="resultColumnUId">The status column identifier.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessDataSourceFiltersConverter">
            <summary>
            ######### ### ########## ########## ###### # ######### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataSourceFiltersConverter.ConvertToProcessDataSourceFilters(Terrasoft.Core.Process.ProcessActivity,System.Guid,System.String)">
            <summary>
            ############ ##### ######## # ###### ########.
            </summary>
            <param name="processElement">####### ########.</param>
            <param name="entitySchemaUId">############# ##### #######.</param>
            <param name="dataSourceFilters">##### ########.</param>
            <returns>##### ######## # ####### ########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessDataStorage">
            <summary>
            Type helps to work with process data repository.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.Register(Terrasoft.Core.Process.ProcessElementData)">
            <summary>
            Registers the process element data.
            </summary>
            <param name="data">Data of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.Update(Terrasoft.Core.Process.ProcessElementData)">
            <summary>
            Updates the process element data.
            </summary>
            <param name="data">Data of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.GetProcessElementsData(System.Guid)">
            <summary>Gets the elements data for specified process.</summary>
            <param name="processUId">The process unique identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.Register(Terrasoft.Core.Process.ProcessData)">
            <summary>
            Registers the process data.
            </summary>
            <param name="data">Data of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.Register(Terrasoft.Core.Process.ProcessListenerData)">
            <summary>
            Registers the specified listener without check whether element exists.
            </summary>
            <param name="listener">The listener.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.Register(Terrasoft.Core.Process.ProcessListenerData,System.Boolean)">
            <summary>
            Registers the specified listener.
            </summary>
            <param name="listener">The listener.</param>
            <param name="checkElementExist">If defined as <c>true</c> listener will be inserted only when process
            element exist.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.Update(Terrasoft.Core.Process.ProcessData,Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Updates the process data.
            </summary>
            <param name="data">Data of the process.</param>
            <param name="dbExecutor">Data base executor.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.GetProcessData(System.Guid)">
            <summary>
            Gets the process data with sub process for the specified process.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.GetProcessId(System.Guid)">
            <summary>
            Gets identifier of the process instance.
            </summary>
            <param name="elementUId">Unique identifier of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.GetElementCompletionInfo(System.Guid)">
            <summary>
            Returns the element completion information.
            </summary>
            <param name="processElementUId">The process element identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.GetProcessIntermediateEvents(System.String)">
            <summary>
            Returns data of the registered intermediate events.
            </summary>
            <param name="signal">The signal.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.GetProcessElementsToDo(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Returns data of the process elements which are needed for user interaction.
            </summary>
            <param name="elementIds">Identifiers of process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessDataStorage.RemoveProcessListener(System.String,System.String,System.Guid,System.Guid,Terrasoft.Core.Entities.EntityChangeType,Terrasoft.Core.DB.DBExecutor)">
            <summary>
            Removes the process listener for the specified entity.
            </summary>
            <param name="entitySchemaName">Name of the entity schema.</param>
            <param name="entitySchemaPrimaryColumnName">Primary column name of the entity schema.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="processElementUId">The process element identifier.</param>
            <param name="entityChangeType">Type of the entity change.</param>
            <param name="dbExecutor">Data base executor.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessElementFactory">
            <summary>
            Creates instance of ProcessFlowElement using its metadata information defined in schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessElementFactory.CreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <summary>
            Creates the process element depending on its meta data.
            </summary>
            <param name="schemaElement">The schema element meta data.</param>
            <returns>The process element instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessElementFactory.CreateSubProcess(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Returns the sub process instance.
            </summary>
            <param name="schemaSubProcess">The sub process schema element.</param>
            <param name="baseProcessSchema">The process schema for sub process.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessElementInstanceFactory">
            <summary>
            Provides method for the creation of process element instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessElementInstanceFactory.CreateProcessElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates the process element.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>The process element instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessElementMetaInfo">
            <summary>
            Represents meta info of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessElementMetaInfo.BpmnElementName">
            <summary>
            Returns the element name in BPM notation.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessExecutorOptions">
            <summary>
            Defines options used to execute process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutorOptions.UseSpecifiedVersion">
            <summary>
            Determines whether the current process executor runs specified version of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutorOptions.UseSyncMode">
            <summary>
            Determines whether the current process executor runs in synchronous mode.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutorOptions.ShowExecutionPage">
            <summary>
            Determines whether the current process can show execution pages.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutorOptions.UseRunProcessAccessControl">
            <summary>
            Determines whether to user process access control or not.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessExecutor">
            <summary>
            Provides a set of methods for executing business processes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.Execute(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Executes process with corresponding schema name.
            </summary>
            <param name="processSchemaName">Name of process schema.</param>
            <param name="parameterValues">Initial parameter values, where key is process parameter name and value is 
            serialized parameter value.</param> 
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.Execute``1(System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Executes process with corresponding schema name and returns process parameter value.
            </summary>
            <typeparam name="TResult">Result parameter value type.</typeparam>
            <param name="processSchemaName">Name of process schema.</param>
            <param name="resultParameterName">Name of parameter to read result from.</param>
            <param name="parameterValues">Initial parameter values, where key is process parameter name and value is 
            serialized parameter value.</param>
            <returns>Result parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.ExecuteByCaption(System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Executes process with corresponding schema caption.
            </summary>
            <param name="processSchemaCaption">Caption of process schema.</param>
            <param name="parameterValues">Initial parameter values, where key is process parameter name and value is 
            serialized parameter value.</param> 
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.ExecuteByCaption``1(System.String,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Executes process with corresponding schema caption and returns process parameter value.
            </summary>
            <typeparam name="TResult">Result parameter value type.</typeparam>
            <param name="processSchemaCaption">Caption of process schema.</param>
            <param name="resultParameterName">Name of parameter to read result from.</param>
            <param name="parameterValues">Initial parameter values, where key is process parameter name and value is 
            serialized parameter value.</param>
            <returns>Result parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.Execute(System.Guid,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Executes process with corresponding schema UId.
            </summary>
            <param name="processSchemaUId">UId of process schema.</param>
            <param name="parameterValues">Initial parameter values, where key is process parameter name and value is 
            serialized parameter value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.Execute``1(System.Guid,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Executes process with corresponding schema UId and returns process parameter value.
            </summary>
            <typeparam name="TResult">Result parameter value type.</typeparam>
            <param name="processSchemaUId">UId of process schema.</param>
            <param name="resultParameterName">Name of parameter to read result from.</param>
            <param name="parameterValues">Initial parameter values. Where Key is process parameter name and value is 
            serialized parameter value.</param>
            <returns>Result parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessExecutor.CancelExecutionAsync(System.Guid)">
            <summary>
            Asynchronously canceles process execution.
            </summary>
            <param name="processId">Identifier of the process.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessFlowElementDispatcher">
            <summary>
            Provides methods for interaction with flow elements of process instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessFlowElementDispatcher.GetRunningElements``1">
            <summary>
            Returns running flow element instances of type provided by TFlowElement.
            </summary>
            <typeparam name="TFlowElement">Type of requested elements.</typeparam>
            <returns>Running flow elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessFlowElementDispatcher.CompleteActivityExecution(System.Collections.Generic.IEnumerable{System.Guid},System.Object[])">
            <summary>
            Completes execution of running activitiy elements.
            </summary>
            <param name="elementUIds">Element identifiers to complete.</param>
            <param name="parameters">Arguments for <see cref="M:Terrasoft.Core.Process.ProcessActivity.CompleteExecuting(System.Object[])"/>.</param>
            <exception cref="T:System.InvalidOperationException">If requested activity is not running.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessFlowElementDispatcher.CancelActivityExecution(System.Collections.Generic.IEnumerable{System.Guid},System.Object[])">
            <summary>
            Cancels execution of running activitiy elements.
            </summary>
            <param name="elementUIds">Element identifiers to cancel.</param>
            <param name="parameters">Arguments for <see cref="M:Terrasoft.Core.Process.ProcessActivity.CancelExecuting(System.Object[])"/>.</param>
            <exception cref="T:System.InvalidOperationException">Requested activity is not running.</exception>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessInstanceParameterStore">
            <summary>
            Provides methods to get and update process parameter values and parameter information.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.UpdateParameterValue``1(System.String,``0)">
            <summary>
            Updates the parameter value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="parameterPath">The parameter path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.SetParameterValue``1(Terrasoft.Core.Process.ProcessSchemaParameter,System.Guid,``0)">
            <summary>
            Sets the parameter value, clears it's <see cref="P:Terrasoft.Core.Process.ProcessParameterInfo.InitialValue"/> and
            <see cref="P:Terrasoft.Core.Process.ProcessParameterInfo.InitialSource"/> if parameter info exists, otherwise creates parameter info.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="parameter">The schema parameter.</param>
            <param name="schemaElementUId">The schema element identifier.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.SetParameterValue``1(System.String,``0)">
            <summary>
            Sets the parameter value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="parameterPath">The parameter path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.TryFindValue(System.String,System.Object@)">
            <summary>
            Tries to find parameter value by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <param name="value">The parameter value.</param>
            <returns><c>true</c> if parameter value was found, otherwise <c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.FindParameterValue(System.String)">
            <summary>
            Finds the parameter value by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>Parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetParameterValue(System.String)">
            <summary>
            Returns the parameter value by its path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>Parameter value.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException" />
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.TryGetParameterValue``1(System.String,``0@)">
            <summary>
            Tries to get parameter value by its path.
            </summary>
            <typeparam name="T">Value type.</typeparam>
            <param name="parameterPath">The parameter path.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if parameter value was received, otherwise <c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.RemoveParameterValues">
            <summary>
            Removes all the parameter values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.SynchronizeParametersMapInfo(System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Synchronizes parameters mapping info of a running process in the case where his schema was changed
            after the launch.
            </summary>
            <param name="schemaMapInfo">Generated parameters mapping info.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.PersistParameterValues">
            <summary>
            Replicates the parameter values to persistent storage and set it's as active.
            </summary>
            <returns>Active storage.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.EnterInMemoryMode">
            <summary>
            Initializes memory storage for parameter values.
            </summary>
            <returns>Active storage.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetContainsMapPath(System.String)">
            <summary>
            Gets <c>true</c> if parameter with specified <paramref name="parameterPath"/> has parameter info in store,
            otherwise <c>false</c>.
            </summary>
            <param name="parameterPath">The parameter path.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetHasValue(System.String)">
            <summary>
            Gets <c>true</c> if parameter with specified <paramref name="parameterPath"/> has value in store, otherwise
            <c>false</c>.
            </summary>
            <param name="parameterPath">The parameter path.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetParameterInfoPaths">
            <summary>
            Returns the process parameter information paths.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetProcessParameterPaths">
            <summary>
            Returns the process parameter paths.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.FindParameterInfoByValue(System.String)">
            <summary>
            Finds the parameter information that <see cref="P:Terrasoft.Core.Process.ProcessParameterInfo.Value"/> property matches
            <paramref name="value"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>Parameter info item.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.FindParameterInfo(System.String)">
            <summary>
            Finds the parameter info by parameter path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>Parameter info item.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetParameterInfo(System.String)">
            <summary>
            Returns the parameter info for specified parameter path.
            </summary>
            <param name="parameterPath">The parameter path.</param>
            <returns>Parameter info item.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessInstanceParameterStore.GetParametersInfo">
            <summary>
            Returns the parameters information. Where the <c>Key</c> is parameter info path and <c>Value</c> is
            parameter info.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessLogStorage">
            <summary>
            Type helps to work with process log.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessLogStorage.UpdateProcessStatusBySchemaId(System.Guid,Terrasoft.Core.Process.ProcessStatus)">
            <summary>
            Update process status by process schema ID.
            <param name="processSchemaId">Process schema identifier</param>
            <param name="status">Process status</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessLogStorage.UpdateProcessStatusById(System.Guid,Terrasoft.Core.Process.ProcessStatus)">
            <summary>
            Update process status by process ID.
            <param name="processId">Process identifier</param>
            <param name="status">Process status</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessLogStorage.Register(Terrasoft.Core.Process.ProcessElementLog)">
            <summary>
            Registers the process element log.
            </summary>
            <param name="elementLog">Log of the process element.</param>
            <returns>Registration UTC date.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessLogStorage.Register(Terrasoft.Core.Process.ProcessLog)">
            <summary>
            Registers the process log.
            </summary>
            <param name="logItem">Log of the process.</param>
            <returns>Registration UTC date.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessLogStorage.Update(Terrasoft.Core.Process.ProcessElementLog)">
            <summary>
            Updates the process element log.
            </summary>
            <param name="elementLog">Log of the process element.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessMetaDataSynchronizer">
            <summary>
            Synchronizer for process meta data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessMetaDataSynchronizer.SaveData(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Saves synchronized process data.
            </summary>
            <param name="process">Process to synchronize with</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessMetaDataSynchronizer.RemoveData(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Removes synchronized process data.
            </summary>
            <param name="process">Process to synchronize with</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessModel">
            <summary>
            Provides access to process instance methods.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessModel.GetScriptTaskMethod(System.String)">
            <summary>
            Returns a reference to an instance of the method by its name.
            </summary>
            <param name="methodName">Method name.</param>
            <returns>Delegate with a certain method signature.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessModel.GetAfterActivitySaveMethod(System.String)">
            <summary>
            Returns a reference to an instance of the method by its name.
            </summary>
            <param name="methodName">Method name.</param>
            <returns>Delegate with a certain method signature.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessNotificationManager">
            <summary>
            Provides methods to create and remove notification events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessNotificationManager.Create(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Creates the notification event.
            </summary>
            <param name="notification">Notification data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessNotificationManager.Update(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns><c>True</c> if notification was updated, otherwise <c>False</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessNotificationManager.Delete(System.Guid)">
            <summary>
            Deletes the notification by specified identifier of the entity.
            </summary>
            <param name="id">Identifier of the notification event.</param>
            <returns><c>true</c> if the notification event is successfully removed; otherwise, false.
            This method also returns <c>false</c> if the notification event was not found in the relation data base.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessNotifier">
            <summary>
            Provides methods to set up notification events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessNotifier.Cancel(System.Guid)">
            <summary>
            Cancels the notification event.
            </summary>
            <param name="id">Identifier of the notification event.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessNotifier.Publish(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Publishes the specified notification event.
            </summary>
            <param name="notification">Notification data.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessParametersDataReader`1">
            <summary>
            Used to provide extended reading methods to <see cref="T:Terrasoft.Common.DataReader"/> implementations used to read interpreted
            process parameter values.
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParametersDataReader`1.Read(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Reads the specified schema parameter info.
            </summary>
            <param name="schemaParameter">The schema parameter.</param>
            <returns>Parameter name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParametersDataReader`1.GetValue(System.Type)">
            <summary>
            Returns the parameter value.
            </summary>
            <param name="type">The value type.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessParametersMetaInfo">
            <summary>
            Represents meta info of the process parameters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessParametersMetaInfo.Parameters">
            <summary>
            Gets process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParametersMetaInfo.ForceGetParameters">
            <summary>
            Forcibly obtains process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessParameterStore">
            <summary>
            The interface for storing the process parameters data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterInfoPathes(System.Guid)">
            <summary>
            Returns the set of paths by which you can retrieve data of the process parameter.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <returns>
            A hash table that contains a set of paths to process parameter data.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.FindParameterInfo(System.Guid,System.String)">
            <summary>
            Finds for process parameter data.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <returns>
            Instance of the <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> type or <c>null</c>, if no data is found.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterInfo(System.Guid,System.String)">
            <summary>
            Returns the data of the process parameter. If no data is found, an exception is thrown.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <returns>
            Instance of the <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> type.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">If the process parameter data is not found.</exception>>.
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Saves data for the parameters of the specified process.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="pathParametersInfo">A list of key/value pairs, where the key is the path to the parameter,
            and the value is the data of the process parameter.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <summary>
            Saves the parameter data of the specified process.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="parameterInfo">Process parameter data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.RemoveParametersInfo(System.Guid)">
            <summary>
            Deletes all parameter data of the specified process.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetParametersMapInfo(System.Guid)">
            <summary>
            Returns the process parameters association table.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetProcessParameterPathes(System.Guid)">
            <summary>
            Returns the set of paths by which you can retrieve the values of the process parameters.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <returns>
            A hash table that contains a set of paths to process parameter values.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.String)">
            <summary>
            Sets the value of the <see cref="T:System.String"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.String"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Guid)">
            <summary>
            Sets the value of the <see cref="T:System.Guid"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Guid"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Int32)">
            <summary>
            Sets the value of the <see cref="T:System.Int32"/> type parameter by generated key. The key is formed
            by the value of the identifier <paramref name="processUId"/> and by the value of the parameter path
            <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Int32"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Decimal)">
            <summary>
            Sets the value of the <see cref="T:System.Decimal"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Decimal"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Double)">
            <summary>
            Sets the value of the <see cref="T:System.Double"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Double"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Enum)">
            <summary>
            Sets the value of the <see cref="T:System.Enum"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Enum"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.DateTime)">
            <summary>
            Sets the value of the <see cref="T:System.DateTime"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.DateTime"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,System.Boolean)">
            <summary>
            Sets the value of the <see cref="T:System.Boolean"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Boolean"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString)">
            <summary>
            Sets the value of the <see cref="T:Terrasoft.Common.LocalizableString"/> type parameter
            by generated key. The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with
            <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue(System.Guid,System.String,Terrasoft.Common.ISerializableObject)">
            <summary>
            Sets the value of the <see cref="T:Terrasoft.Common.ISerializableObject"/> type parameter
            by generated key. The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter type with
            <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.SetParameterValue``1(System.Guid,System.String,``0)">
            <summary>
            Sets the value of the specified type.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the process parameter data.</param>
            <param name="value">The current value of the parameter.</param>
            <typeparam name="T">The value of any type.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.String@)">
            <summary>
            Tries to get the value of the <see cref="T:System.String"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.String"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Guid@)">
            <summary>
            Tries to get the value of the <see cref="T:System.Guid"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Guid"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Int32@)">
            <summary>
            Tries to get the value of the <see cref="T:System.Int32"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Int32"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Decimal@)">
            <summary>
            Tries to get the value of the <see cref="T:System.Decimal"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Decimal"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Double@)">
            <summary>
            Tries to get the value of the <see cref="T:System.Double"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Double"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Enum@)">
            <summary>
            Tries to get the value of the <see cref="T:System.Enum"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Enum"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.DateTime@)">
            <summary>
            Tries to get the value of the <see cref="T:System.DateTime"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.DateTime"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,System.Boolean@)">
            <summary>
            Tries to get the value of the <see cref="T:System.Boolean"/> type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with <see cref="T:System.Boolean"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString@)">
            <summary>
            Tries to get the value of the <see cref="T:Terrasoft.Common.LocalizableString"/>
            type parameter by generated key.
            The key is formed by the value of the identifier <paramref name="processUId"/> and
            by the value of the parameter path <paramref name="parameterPath"/>.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
            <param name="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name="value">The current value of the parameter type with
            <see cref="T:Terrasoft.Common.LocalizableString"/>.</param>
            <returns>
            <c>true</c>, if the repository contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.RemoveParameterValues(System.Guid)">
            <summary>
            Deletes all parameter values of the specified process.
            </summary>
            <param name="processUId">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.FindParameterValue(System.Guid,System.String)">
            <summary>
            Extracts the value of any type by generated key. The key is generated based on the value 
            of the <paramref name="processUId"/> Id and the value of the <paramref name="parameterPath"/> parameter.
            </summary>
            <param name="processUId">Business process UId.</param>
            <param name="parameterPath">Path to the parameter value that must be retrieved.</param>
            <returns>
            Parameter value or <c>null</c>, if parameter not found.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.GetParameterValue(System.Guid,System.String)">
            <summary>
            Extracts the value of any type by generated key. The key is generated based on the value 
            of the <paramref name="processUId"/> Id and the value of the <paramref name="parameterPath"/> parameter.
            </summary>
            <param name="processUId">Business process UId.</param>
            <param name="parameterPath">Path to the parameter value that must be retrieved.</param>
            <returns>
            Parameter value.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            Throws when parameter value does not exist in repository.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterStore.ContainsParameterPath(System.Guid,System.String)">
            <summary>
            Determines whether a parameter path is in the repository.
            </summary>
            <param name="processUId">Process UId.</param>
            <param name="parameterPath">Parameter path.</param>
            <returns>
            <c>true</c>, if repository contains parameter path, otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessParameterValueReceiver">
            <summary>
            Receiver for result parameter value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessParameterValueReceiver.Receive(Terrasoft.Core.Process.BaseProcessSchema,System.Func{Terrasoft.Core.Process.ProcessSchemaParameter,System.Object})">
            <summary>
            Method that receives value.
            </summary>
            <param name="schema">Process schema to receive from.</param>
            <param name="valueGetterFunction">Value getter function.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessSchemaDependencyFactory">
            <summary>
            Provides properties for a process schema dependency factory.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaDependencyFactory.FlowSchemaGenerator">
            <summary>
            Gets the flow schema generator.
            </summary>
            <value>
            The flow schema generator.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaDependencyFactory.ElementsEnumerator">
            <summary>
            Gets the elements enumerator.
            </summary>
            <value>
            The elements enumerator.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaDependencyFactory.ElementExtraDataBuilder">
            <summary>
            Gets the element extra data builder.
            </summary>
            <value>
            The element extra data builder.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessSchemaDependencyFactory.CreateProcessElementFactory(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Creates the process element factory.
            </summary>
            <param name="process">The process instance.</param>
            <returns>The process element factory.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessSchemaElementParametersProvider">
            <summary>
            Provides methods for dynamically creating parameters of the process schema element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessSchemaElementParametersProvider.GetActualParameters(Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode,Terrasoft.Core.SchemaManagerProvider)">
            <summary>
            Gets a collection of the actual parameters for given process schema element.
            </summary>
            <param name="processSchemaElement">The process schema element.</param>
            <param name="schemaManagerProvider">The schema manager provider.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessSchemaSignalEvent">
            <summary>
            Provides properties that represent meta information of start signal.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IProcessSchemaSignalEvent"/>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.Caption">
            <summary>
            Gets or sets caption of the current element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.WaitingRandomSignal">
            <summary>
            Gets or sets flag that indicates whether the current signal is waiting random event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.WaitingEntitySignal">
            <summary>
            Gets or sets flag that indicates whether the current signal is listening event of entity modifications.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.EntitySignal">
            <summary>
            Gets or sets types of entity modifications.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.Entity">
            <summary>
            Gets or sets Id of the entity.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.Signal">
            <summary>
            Gets or sets string, which value is listened by event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.EntitySchemaUId">
            <summary>
            Gets or sets UId of the entity schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.HasEntityColumnChange">
            <summary>
            Gets or sets flag that indicates whether the entity has modifications of column values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.EntityChangedColumns">
            <summary>
            Gets or sets list of column names which values have been modified.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.HasEntityFilters">
            <summary>
            Gets or sets flag that indicates whether the current signal has entity filters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessSchemaSignalEvent.EntityFilters">
            <summary>
            Gets or sets serialized entity filters.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessServiceProvider">
            <summary>
            The interface for the process service provider.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessServiceProvider.InternalFlowEngineStateService">
            <summary>
            Gets or sets the flow engine state service.
            </summary>
            <value>
            The flow engine state service.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessServiceProvider.CreateProcessComponentSet(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Creates component set base on the process schema. Prepares it for work with messages queue.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The process schema.</param>
            <returns>The process component set.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IProcessServiceProvider.CreateProcessComponentSet(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Creates component set base on the process schema. Prepares it for work with messages queue.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The process schema.</param>
            <param name="parameterStore">The store of process paramater values.</param>
            <returns>The process component set.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.IProcessValidationResult">
            <summary>
            Represents validation info about the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.HasErrors">
            <summary>
            Indicates whether the process has errors.
            </summary>
            <value>
            <c>true</c> if the process has errors; otherwise - <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.IsInterpretable">
            <summary>
            Indicates that the process schema can be interpreted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.Message">
            <summary>
            Text message.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.MessageType">
            <summary>
            Type of message.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.ExecutionMode">
            <summary>
            Execution mode of the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.ValidatorInfo">
            <summary>
            The list of the process properties that don't allow it to be interpreted.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.ErrorMessages">
            <summary>
            Returns a list of text messages with errors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.IProcessValidationResult.Results">
            <summary>
            The results of the process schema validation.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IScriptSession">
            <summary>
            ######### ###### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.Eval``1(System.String)">
            <summary>
            ######### #########, ############ ######### ########## #### ######.
            </summary>
            <typeparam name="T">### ######, ####### ###### ####### #########.</typeparam>
            <param name="expression">##### #########.</param>
            <returns>######### ########## #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.Eval(System.String,System.Type)">
            <summary>
            ######### #########, ############ ######### #### <see cref="T:System.Object"/>.
            </summary>
            <param name="expression">##### #########.</param>
            <param name="resultType">######### ### ########## ##########.</param>
            <returns>######### #########, ############ ######### #### <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.SetVariable(System.String,System.Object)">
            <summary>
            ############# ########## # ######### ###### ########## ########.
            </summary>
            <param name="name">### ##########.</param>
            <param name="value">######## ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.SetVariable(System.String,System.Object,System.Type)">
            <summary>
            ############# ########## # ######### ###### # ##### ########## ########.
            </summary>
            <param name="name">### ##########.</param>
            <param name="value">######## ##########.</param>
            <param name="type">### ######## ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.AddReference(System.Type)">
            <summary>
            ######### ###### ## ###, ############ # #########.
            </summary>
            <param name="type">###.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.IScriptSession.Validate(System.String,System.Type)">
            <summary>
            Validates the expression.
            </summary>
            <param name="expression">The text of expression.</param>
            <param name="resultType">The expression result type.</param>
            <exception cref="T:Terrasoft.Core.ValidateExpressionException">Throws, if the expression is not valid.</exception>
        </member>
        <member name="T:Terrasoft.Core.Process.IStartTimerScheduleSynchronizer">
            <summary>
            Represents methods to manage startTimerEvent scheduler jobs.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IStartTimerScheduleSynchronizer.GetTimerEventsInfo(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Returns collection of timer event info.
            </summary>
            <param name="schema">Instance of <see cref="T:Terrasoft.Core.Process.ProcessSchema"/>.</param>
            <returns>Collection of timer event info.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ISysEntityPrcStartEventsHelper">
            <summary>
            Type helps to get process schema listeners and to clear cached data belongs to them.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ISysEntityPrcStartEventsHelper.SysEntityPrcStartEvents">
            <summary>
            Gets a set of the process schema listeners.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ISysEntityPrcStartEventsHelper.ClearCache">
            <summary>
            Clears cache.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ISysPrcPersistentStoreHelper">
            <summary>
            Type helps to work with SysPrcPersistentStore.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ISysPrcPersistentStoreHelper.DeleteByProcessSchemaId(System.Guid)">
            <summary>
            Delete by process schema ID.
            <param name="processSchemaId">Process schema identifier</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ISysPrcPersistentStoreHelper.DeleteByProcessId(System.Guid)">
            <summary>
            Delete by process ID.
            <param name="processId">Process identifier</param>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ISysProcessElementToDoHelper">
            <summary>
            Type helps to work with SysProcessElementToDo.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ISysProcessElementToDoHelper.DeleteByProcessSchemaId(System.Guid)">
            <summary>
            Delete by process schema ID.
            <param name="processSchemaId">Process schema identifier</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ISysProcessElementToDoHelper.DeleteByProcessId(System.Guid)">
            <summary>
            Delete by process ID.
            <param name="processId">Process identifier</param>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.IWebServiceUserTask">
            <summary>
            Provides the functionality of the web service user task.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.IWebServiceUserTask.Execute(Terrasoft.Core.Process.ProcessWebService,Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Provides main execution method of the web service user task.
            </summary>
            <param name="userTask">The instanse of the <see cref="T:Terrasoft.Core.Process.ProcessWebService"/>.</param>
            <param name="context">The process execution context.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverterBehavior">
            <summary>
            Behavior of Json converter <see cref="T:Newtonsoft.Json.JsonConverter" /> for dictionary with partially localizable values
            of process parameters.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverterBehavior.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverterBehavior.IgnoreLczValues">
            <summary>
            Ignore localizable values.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.LocalizableParameterValue">
            <summary>
            Class represents partially localizable value of the process parameter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValue.#ctor(Terrasoft.Common.LocalizableString)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.LocalizableParameterValue"/> with the specified
            parameter list.
            </summary>
            <param name="localizableString">Localizable value of the parameter.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValue.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.LocalizableParameterValue"/> with the specified
            parameter list.
            </summary>
            <param name="value">Value of the parameter.</param>
            <param name="isLocalizable">Flag that indicates whether the value is localizable.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.LocalizableParameterValue._localizableValue">
            <summary>
            Returns localizable value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.LocalizableParameterValue.Value">
            <summary>
            Returns value of the parameter.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.LocalizableParameterValue.IsLocalizable">
            <summary>
            Flag that indicates whether the value is localizable.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.LocalizableParameterValues">
            <summary>
            Dictionary of partially localizable values of process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValues.#ctor">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.LocalizableParameterValues"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValues.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.LocalizableParameterValues"/>.
            </summary>
            <param name="itemUId">Id of the localizable parameter value list.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.LocalizableParameterValues._itemUId">
            <summary>
            Returns Id of the localizable parameter value list.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValues.Add(System.String,System.String,System.Boolean)">
            <summary>
            Adds value to the localizable parameter value list.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value of the <see cref="T:System.String"/> type.</param>
            <param name="isLocalizable">Flag that indicates whether the value is localizable.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValues.Add(System.String,System.Object,System.Boolean)">
            <summary>
            Adds value to the localizable parameter value list.
            </summary>
            <param name="key">Key.</param>
            <param name="value">Value of the <see cref="T:System.Object"/> type.</param>
            <param name="isLocalizable">Flag that indicates whether the value is localizable.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValues.Add(System.Collections.Generic.KeyValuePair{System.String,Terrasoft.Core.Process.LocalizableParameterValue})">
            <summary>
            Adds value to the localizable parameter value list.
            </summary>
            <param name="item">Structure with specified key and value.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverter">
            <summary>
            Class represents Json converter of the dictionary of the partially localizable values of process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Generates Json.
            </summary>
            <param name="writer">Json writer.</param>
            <param name="value">Value of the <see cref="T:System.Object"/> type.</param>
            <param name="serializer">Json serializer.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Returns deserializd object.
            </summary>
            <param name="reader">Json reader.</param>
            <param name="objectType">Specified data type.</param>
            <param name="existingValue">Value of the <see cref="T:System.Object"/> type.</param>
            <param name="serializer">Json serializer.</param>
            <returns>Deserializd object.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesJsonConverter.CanConvert(System.Type)">
            <summary>
            Determines whether the specified type can be converted to the specified data type.
            </summary>
            <param name="objectType">Specified data type.</param>
            <returns><c>true</c> if the specified data can be converted to the specified data type;
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.LocalizableParameterValuesList">
            <summary>
            List of partially localizable values of process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.#ctor">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.LocalizableParameterValuesList"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.DeserializeData(System.String)">
            <summary>Deserializes the Json string.
            </summary>
            <param name="source">Json string.</param>
            <returns>The object <see cref="T:Terrasoft.Core.Process.LocalizableParameterValuesList"/> being deserialized.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.GetFrom77FormatList(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.String[])">
            <summary>
            Converts the data which are used in version 7.7 to the list of the partially localizable values.
            </summary>
            <param name="source">The data format is used in version 7.7.</param>
            <param name="localizableItems">Keys of the localizable values.</param>
            <returns>The object <see cref="T:Terrasoft.Core.Process.LocalizableParameterValuesList"/> being converted.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.DeserializeFrom77FormatData(System.String,System.String[])">
            <summary>
            Deserializes the data which are used in version 7.7.
            </summary>
            <param name="source">Serialized data in version 7.7.</param>
            <param name="localizableItems">Keys of the localizable values.</param>
            <returns>The object <see cref="T:Terrasoft.Core.Process.LocalizableParameterValuesList"/> being deserialized.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.GetSerializedItems">
            <summary>
            Returns all items in serialized state.
            </summary>
            <returns>All items in serialized state.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.SetupDefaultLocalizableValues(System.String,System.String)">
            <summary>
            Sets default localizable value.
            </summary>
            <param name="recordName">Key of the localizable value.</param>
            <param name="defaultValue">Default value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.GetLocalizableItems">
            <summary>
            Returns list values that are localizable.
            </summary>
            <returns>Instance of the type <see cref="T:Terrasoft.Core.Process.LocalizableParameterValuesList"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.GetSerializedMetaDataItems">
            <summary>
            Returns serialized list values that are not localizable.
            </summary>
            <returns>Serialized list values that are not localizable.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.To77FormatList">
            <summary>
            Converts the data which are used in version 7.7.
            </summary>
            <returns>The data which are used in version 7.7.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.InitializeLocalizableValues(Terrasoft.Common.IResourceStorage,System.String,System.String,System.Boolean)">
            <summary>
            Initializes localizable values.
            </summary>
            <param name="storage">Resource repository.</param>
            <param name="resourceManagerName">Name of the resource manager.</param>
            <param name="resourceGroupName">Resource group name.</param>
            <param name="resetCachedValues">Determines that it can reset cached values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.LoadLocalizableValues">
            <summary>
            Loads localizable values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.LocalizableParameterValuesList.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue})">
            <summary>
            Fills out collection of the localizable values.
            </summary>
            <param name="values">Collection of the localizable values.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.MessageQueueManager">
            <summary>
            ##### #######, ########### ######### <see cref="T:Terrasoft.Core.Process.IMessageQueueManager"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.MessageQueueManager.Create">
            <summary>
            ########## ######### #######, ### ####### ##### ########## <c>MsgQueueTypeName</c> ################# #####.
            </summary>
            <returns>######### ###### #######, ####### ######### ######### <see cref="T:Terrasoft.Core.Process.IMessageQueueManager"/>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ParameterValuesValidationRule.FlowSchemaGeneratorWrapper.ParametersMapInfo">
            <summary>
            Gets or sets the parameters map information.
            </summary>
            <value>
            The parameters map information.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ParameterValuesValidationRule.FlowSchemaGeneratorWrapper.ParameterValueProvider">
            <summary>
            Gets or sets the process parameter value provider.
            </summary>
            <value>
            The process parameter value provider.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ParameterValuesValidationRule.FlowSchemaGeneratorWrapper.TryGenerate(Terrasoft.Core.Process.ProcessValidationResult@)">
            <summary>
            Tries to generate a new flow schema.
            </summary>
            <param name="validationResult">Validation result.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ParameterValuesValidationRule.ValidateFormulaValue(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema,System.String,System.String,System.Type)">
            <summary>
            Validates the formula value.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="processSchema">The process schema.</param>
            <param name="formulaValue">The formula value.</param>
            <param name="parameterPath">The parameter path.</param>
            <param name="resultParameterValueType">Type of the result parameter value.</param>
            <returns>The result of the validation.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.PrepareForReExecuteEventArgs`1">
            <summary>
            Represents event data that are needed for preparing process element before execution.
            </summary>
            <typeparam name="TProcessElement">Instance implements the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</typeparam>
        </member>
        <member name="P:Terrasoft.Core.Process.PrepareForReExecuteEventArgs`1.SourceInstance">
            <summary>
            Gets or sets current instance of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.PrepareForReExecuteEventArgs`1.ExecutingInstance">
            <summary>
            Gets or sets actual instance of the process element.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.Process">
            <summary>
            Represents abstraction for process instances.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessActivity" />
        </member>
        <member name="M:Terrasoft.Core.Process.Process.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.Process"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.Process"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.IProcessServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.Process"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="serviceProvider">The process service provider.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.UseFlowEngineMode">
            <summary>
            Indicates whether the current process can be executed in interpreted environment.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ProcessModel">
            <summary>
            Gets instance that implements the<see cref= "T:Terrasoft.Core.Process.IProcessModel" /> interface.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.Process._processParametersDataWriterSettings">
            <summary>
            Process parameters data writer settings.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.Process._isTracing">
            <summary>
            Gets is element tracing.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.Process._processParametersTracer">
            <summary>
            Process parameters tracer.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.CanBeInterpreted">
            <summary>
            Indicates whether the current process can be executed in interpreted environment.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.IsSubProcess">
            <summary>
            Gets flag that indicates whether instance is subprocess.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ProcessServiceProvider">
            <summary>
            Gets or sets the process service provider.
            </summary>
            <value>
            The process service provider.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.UseBackgroundMode">
            <summary>
            Gets a value indicating whether process elements can be executed in background mode.
            </summary>
            <value>
            <c>True</c> if background execution of the top level process is enabled, otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.BaseProcessSchema">
            <summary>
            Gets or sets the base process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.DataStorage">
            <summary>Gets or sets the data storage.</summary>
            <value>The data storage.</value>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.LogStorage">
            <summary>Gets or sets the log storage.</summary>
            <value>The log storage.</value>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.InstanceParameterStore">
            <summary>
            Gets the parameter store of current process instance.
            </summary>
            <value>
            The instance parameter store.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.LockKey">
            <summary>
            Get key of the lock.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ElementExtraDataBuilder">
            <summary>
            Gets builder of the element extra data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.SchemaUIdPropertyName">
            <summary>
            Gets the meta data index for the "SchemaUId" property.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.SchemaManagerNamePropertyName">
            <summary>
            Gets the meta data index for the "SchemaManagerName" property.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.SchemaManagerName">
            <summary>
            Gets or sets name of schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.SchemaManager">
            <summary>
            Gets instance that implements the <see cref="T:Terrasoft.Core.ISchemaManager"/> interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.IsProcess">
            <summary>
            Gets value that determines it is a process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.IsSaved">
            <summary>
            Gets or sets value that determines whether it is embedded process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.Result">
            <summary>
            Gets or sets result of the current process execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.SerializeToMemory">
            <summary>
            Gets or sets value that determines whether it is required to serialize the current process in memory.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.InstanceUId">
            <summary>
            Gets string value that represents unique identifier of the current process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ActivatedEventElements">
            <summary>
            Gets a collection of the activated events.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ThrowEvents">
            <summary>
            Gets a set of events that are required to trigger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.FlowElements">
            <summary>
            Gets a set of the process elements that were executed or are required to execute.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.WaitingUserTasks">
            <summary>
            Gets a set of the process elements that are going to show execution page.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.MetaPathParameterValues">
            <summary>
            Gets a collection of keys and values, where key is the meta-path and value is delegate.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.InternalContext">
            <summary>
            Gets or sets instance of the <see cref="T:Terrasoft.Core.Process.ProcessExecutingContext"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.IsEmbedded">
            <summary>
            Gets value that determines whether it is embedded process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.MaxLoopCount">
            <summary>
            Gets maximum number of process repetitions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.IsProcessExecutedBySignal">
            <summary>
            Gets or sets value that determines whether the current process is started by signal.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ShowExecutionPage">
            <summary>
            Gets or sets value that determines whether the current process could shows execution pages.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.IsProcessExecutedByService">
            <summary>
            Gets or sets value that determines whether the current process is started by service.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ProcessType">
            <summary>
            Gets or sets the class type of the current process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ProcessSchema">
            <summary>
            Gets the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.ParameterValueProvider">
            <summary>
            Gets the family of algorithms that are used to obtain the values of the process parameters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.Process.UseSystemSecurityContext">
            <summary>
            Gets or sets value that indicates whether is needed system security context.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.Process.OnBeforeExecute">
            <summary>
            Occurs when the element needs to be prepared before execution.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.Process.PrepareForReExecute">
            <summary>
            Occurs when the element needs to be prepared before re execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.OnPrepareForReExecute">
            <summary>
            Fires immediately before the element needs to be executed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.RemoveProcessFromDb">
            <summary>
            Removes the process from database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes the current process.
            </summary>
            <param name="context">The execution context.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.HasMapping(System.String)">
            <summary>
            Determines whether the specified parameter has mapping value.
            </summary>
            <param name="parameterName">Parameter name.</param>
            <returns><c>true</c> if parameter exists and it has mapping value; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.WriteProcessParameters">
            <summary>
            Writes parameter values of the current process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.PrepareStart(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Method does nothing.
            </summary>
            <param name="context">The execution context.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CompleteApplyingFlowElementsPropertiesData">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.TryCreateFlowElementInstance(System.String,System.Guid,Terrasoft.Core.Process.ProcessFlowElement@)">
            <summary>
            Tries the create flow element instance.
            </summary>
            <param name="propertyName">Name of the corresponding process class property.</param>
            <param name="schemaElementUId">The schema element identifier.</param>
            <param name="processFlowElement">The process flow element.</param>
            <returns><c>True</c>, if the instance was created, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CompleteProcess">
            <summary>
            Completes execution of the current process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InitializeMetaPathParameterValues">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParameterValueByUId(System.String)">
            <summary>
            Returns value of the parameter.
            </summary>
            <param name="uId">Unique identifier.</param>
            <returns>Value of the process parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ShouldTraceOnExecuted(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.UpdateStatusInLog(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Updates status of the process in DB.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="newStatus">Status of the process.</param>
            <param name="errorDescription">Description of the error.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.UpdateStatusInLog(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus)">
            <summary>
            Updates status of the process in DB.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="newStatus">Status of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.RegisterInDB(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Performs registration of the process data in DB.
            <param name="userConnection">The user connection.</param>
            <param name="status">The process status.</param>
            <param name="error">The description of the error.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ForceGetProcessFlowElement(System.String)">
            <summary>
            Method not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ReadSubProcessParameters(Terrasoft.Core.Process.IProcessElementMetaInfo,Terrasoft.Core.Process.Process)">
            <summary>
            Reads the parameter values of sub process to the parameter values of current instance.
            </summary>
            <param name="subProcessElementSchema">The sub process element schema.</param>
            <param name="subProcessElementInstance">The sub process element instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CreateParametersDataWriter(System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter})">
            <summary>
            Returns the element parameters data writer for current process instance.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <param name="parameters">The schema element parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CreateParametersDataWriter(System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter})">
            <summary>
            Returns the parameters data writer for current process instance.
            </summary>
            <param name="parameters">The schema element parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CreateParametersDataWriter">
            <summary>
            Returns the parameters data writer for current process instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InitializeProcessElement(Terrasoft.Core.Process.ProcessFlowElement,Terrasoft.Core.Process.BaseProcessData)">
            <summary>
            Initialize process element.
            </summary>
            <param name="element">Process element.</param>
            <param name="elementData">Data of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ActualizeProcessElement(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Actualizes instance of the process into the private field of the class.
            </summary>
            <param name="element">Element of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InternalExecuteProcess(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes process.
            </summary>
            <param name="context">The executing context.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InitMemoryParameterStore">
            <summary>
            Initializes the memory parameter store.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ClearProcessData">
            <summary>
            Clears the process data. Used in interpreted processes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Run(Terrasoft.Core.Process.StartSignalOptions)">
            <summary>
            Runs process from specified signal element.
            </summary>
            <param name="options">The executing options.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Run(Terrasoft.Core.Process.StartElementOptions)">
            <summary>
            Runs process from specified element.
            </summary>
            <param name="options">The executing options.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Run(Terrasoft.Core.Process.StartProcessOptions,Terrasoft.Core.Process.IProcessParameterValueReceiver)">
            <summary>
            Runs process.
            </summary>
            <param name="options">The executing options.</param>
            <param name="receiver">Receiver for result parameter value.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetProcessDescriptor">
            <summary>
            Returns descriptor of the current process.
            </summary>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.TryCreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessData,Terrasoft.Core.Process.ProcessFlowElement@)">
            <summary>
            Creates process element instance by its schema.
            </summary>
            <param name="elementSchema">The element schema.</param>
            <param name="processElement">The process element.</param>
            <param name="elementData">Data of the process element.</param>
            <returns><c>True</c>, if the instance was created, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CreateSubProcess(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.ProcessData)">
            <summary>
            Creates the sub process element instance by its schema.
            </summary>
            <param name="subProcessElementSchema">The element schema.</param>
            <param name="subProcessSchema">The sub process schema.</param>
            <param name="processData">Data of the process.</param>
            <returns>Sub process element instance, if it was created, otherwise - <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetProcessBranch">
            <summary>
            Returns a branch of the process instances.
            </summary>
            <returns>List of the process instances.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.SetPrivateFieldValue(System.String,System.Object,System.Object)">
            <summary>
            Sets the value of private field of a process instance.
            </summary>
            <param name="fieldName">Field name that is declared in the "source" argument.</param>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.Process.Process"/> type.</param>
            <param name="value">The new field value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Assign(Terrasoft.Core.Process.ProcessFlowElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ProcessQueue(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Processes a queue consisting of process elements.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if queue is successfully processed; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.FillWaitingUserTaskCollection(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Fills collection with items of the process elements that can interact with user.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ShouldWriteFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Returns value that determines whether the current process should write state of the specified process
            element.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
            <returns><c>true</c>, if the current process should write state of the specified element;
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.WriteFlowElementsProperty(Terrasoft.Common.DataWriter)">
            <summary>
            Writes state of the process elements.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.SetParameterValue``1(System.String,``0)">
            <summary>
            Sets protected parameter value by it's name.
            </summary>
            <typeparam name="T">The type of parameter.</typeparam>
            <param name="parameterName">The parameter name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParameterValue``1(System.String)">
            <summary>
            Gets parameter value by it's name.
            </summary>
            <typeparam name="T">The type of parameter.</typeparam>
            <param name="parameterName">The name of parameter.</param>
            <returns>Returns the value of the property by name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParameterValues">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Returns parameter value.
            </summary>
            <param name="parameter">Process schema parameter.</param>
            <returns>Parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Execute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes the current process.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CancelExecuting(System.Object[])">
            <summary>
            Cancels the executing.
            </summary>
            <param name="parameters">Array of the parameter values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetPropertiesData(System.Boolean)">
            <summary>
            Returns serialized state of the current process.
            </summary>
            <param name="shouldWriteElements">Indicates whether to write other process elements.</param>
            <returns>String that represents serialized state of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CloneShallow">
            <summary>
            Creates a shallow copy of the current process.
            </summary>
            <returns>Instance that is a copy of the current process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.WritePropertiesData">
            <summary>
            Writes state of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ReadPropertiesData">
            <summary>
            Reads state of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ReadPropertiesDataFromDB(Terrasoft.Core.UserConnection)">
            <summary>
            Reads state of the current process from DB.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ReadPropertiesData(Terrasoft.Common.DataReader)">
            <summary>
            Reads state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Writes state of the current process.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
            <param name="shouldWriteElements">Indicates whether to write process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.WritePropertiesDataToDB(Terrasoft.Core.UserConnection)">
            <summary>
            Writes state of the current process to DB.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.WritePropertiesDataToMemory">
            <summary>
            Writes state of the current process to memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetIsReexecution">
            <summary>
            Returns flag that indicates if process has been executed one or more times.
            </summary>
            <returns><c>true</c> if current element has been executed; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.FindParameter(Terrasoft.Core.Process.ProcessParameterMapInfo)">
            <summary>
            Finds parameter by map info.
            </summary>
            <param name="mapInfo">Parameter map info.</param>
            <returns>Parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.InitializeFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Method must be implemented in derived classes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Execute(Terrasoft.Core.Process.ProcessFlowElement,System.Object[])">
            <summary>
            Executes the process element.
            </summary>
            <param name="processElement">Process element.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ConvertToProcessDataSourceFilters(Terrasoft.Core.Process.ProcessActivity,System.Guid,System.String)">
            <summary>
            Converts a set of filters to a process format.
            </summary>
            <param name="processActivity">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivity"/> class.</param>
            <param name="entitySchemaUId">Unique identifier of the entity schema.</param>
            <param name="dataSourceFilters">Set of the filter values.</param>
            <returns>Converted value of the set of filters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.ThrowEvent(Terrasoft.Core.Process.ProcessExecutingContext,System.String)">
            <summary>
            Method does noting.
            </summary>
            <param name="context">Execution context.</param>
            <param name="eventHandler">Name of the event handler.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Execute(Terrasoft.Core.UserConnection)">
            <summary>
            Executes the current process.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParameterValueByMetaPath(System.String)">
            <summary>
            Gets the process parameter value by meta path.
            </summary>
            <param name="metaPath">The process parameter meta path.</param>
            <returns>The process parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.Execute(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Executes the current process.
            </summary>
            <param name="userConnection">User connection.</param>
            /// <param name="startQueueTasksItem">The name of the process element in the queue.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.FindFlowElementByUId(System.Guid)">
            <summary>
            Finds process element by its unique identifier.
            </summary>
            <param name="elementUId">Unique identifier of the process element.</param>
            <returns>Found process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.FindFlowElementByName(System.String)">
            <summary>
            Finds process element by its name.
            </summary>
            <param name="name">Name of the process element.</param>
            <returns>Found process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.FindFlowElementBySchemaElementUId(System.Guid)">
            <summary>
            Finds the flow element by schema element UId.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetFlowElementBySchemaElementUId(System.Guid)">
            <summary>
            Gets the flow element by schema element UId
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <returns>The process flow element</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when process flow element is not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetFlowElementsBySchemaElementUId(System.Guid)">
            <summary>
            Gets the enumerator of the flow elements founded by their schema element UId.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <returns>The enumerator of the flow elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.CancelExecution">
            <summary>
            Cancels execution of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.Process.GetParentProcess">
            <summary>
            Returns instance of the main process.
            </summary>
            <returns>Process.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessActivity">
            <summary>
            Represents a process activity.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivity"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivity"/> type.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.UseFlowEngineMode">
            <summary>
            Indicates whether the current process element can be executed in interpreted environment.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.ProcessNotifier">
            <summary>
            Gets the notifier instance of the current process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.ProcessParametersDataWriterSettings">
            <summary>
            Gets settings <see cref="P:Terrasoft.Core.Process.ProcessActivity.ProcessParametersDataWriterSettings"/> for process parameter data writer.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.ProcessParameterStore">
            <summary>
            Gets instance that implements the <see cref="T:Terrasoft.Core.Process.IProcessParameterStore"/> interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.Owner">
            <summary>
            Gets or sets the owner of the current element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.SchemaUId">
            <summary>
            Gets or sets unique identifier of schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.SchemaManager">
            <summary>
            Gets instance that implements the <see cref="T:Terrasoft.Core.ISchemaManager"/> interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.OwnerUId">
            <summary>
            Gets or sets the unique identifier of owner process instance.
            </summary>
            <value>
            The unique identifier of owner process instance.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.UserConnection">
            <summary>
            Gets or sets the user connection.
            </summary>
            <value>
            The user connection.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.SchemaManagerName">
            <summary>
            Gets or sets name of the schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>
            The schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.Storage">
            <summary>
            Gets or sets instance that provides functionality for storing and retrieving resource managers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.IsShownExecutionPage">
            <summary>
            Gets or sets value that determines whether it can show execution page.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivity.ProcessLane">
            <summary>
            Gets or sets instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessActivity._compressor">
            <summary>
            Provides methods for compression and unpacking data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.OnExecuted(Terrasoft.Core.Process.ProcessActivityAfterEventArgs)">
            <summary>
            This method is called after the current process element is executed.
            </summary>
            <param name="e">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivityAfterEventArgs"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.NeedBreakProcessExecuting(Terrasoft.Core.Process.ProcessActivityAfterEventArgs)">
            /// <summary>
            Checks whether there is a need to break owner process execution after current element executed.
            </summary>
            <param name="e">The <see cref="T:Terrasoft.Core.Process.ProcessActivityAfterEventArgs"/> instance containing the event data.</param>
            <returns><c>True</c> if owner process execution must be ended after current element execution; otherwise 
            <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.HasMapping(System.String)">
            <summary>
            Determines whether the specified parameter has mapping value.
            </summary>
            <param name="parameterName">Parameter name.</param>
            <returns><c>true</c> if parameter exists and it has mapping value; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetSchema(System.Guid)">
            <summary>
            Returns instance of the schema.
            </summary>
            <param name="schemaUId">UId of the schema.</param>
            <returns>Instance of the schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.AfterInternalExecute">
            <summary>
            This method is called after the current process element is executed, but before the "Executed" event
            is triggered.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.WriteProcessParameters">
            <summary>
            Writes parameter values of the current process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.FindSchemaElement(System.Guid)">
            <summary>
            Finds the current schema element in schema of the current owner.
            </summary>
            <param name="schemaElementUId">The identifier of the schema element.</param>
            <returns>Found schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetSchemaElement(System.Guid)">
            <summary>
            Returns owner schema element by the specified identifier.
            </summary>
            <param name="schemaElementUId">Schema element identifier.</param>
            <returns>Found schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ReadSerializableObject``1(Terrasoft.Common.DataReader)">
            <summary>
            Reads <see cref="T:Terrasoft.Common.ISerializableObject"/> from <see cref="T:Terrasoft.Common.DataReader"></see>.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="reader">Instance of <see cref="T:Terrasoft.Common.DataReader"></see>.</param>
            <returns>Value from reader.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.WriteSerializableObject``1(Terrasoft.Common.DataWriter,System.String,``0)">
            <summary>
            Writes <see cref="T:Terrasoft.Common.ISerializableObject"/> to <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <typeparam name="T">Type of object.</typeparam>
            <param name="writer">Instance of <see cref="T:Terrasoft.Common.DataWriter"></see>.</param>
            <param name="propertyName">Name of property to write.</param>
            <param name="value">Value to write.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.OnCanceled">
            <summary>
            Executed when element is canceled.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.UpdateStatusInLog(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Updates status of the process element in DB.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="newStatus">Status of the process.</param>
            <param name="error">Description of the error.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetCanRegisterElementData">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ShouldTraceOnExecuted(System.Boolean)">
            <summary>
            Traces executed element.
            </summary>
            <param name="result">Element execution result.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.SetParameterValue(Terrasoft.Core.Process.IProcessParametersMetaInfo,Terrasoft.Core.Process.ProcessSchemaParameter,System.Object,System.Object)">
            <summary>
            Sets parameter value.
            </summary>
            <param name="source">Process element.</param>
            <param name="parameter">Process schema parameter.</param>
            <param name="value">Value.</param>
            <param name="defValue">Default value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ExecuteElement(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes the specified process element.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ApplyParameterValues(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Applies parameter values.
            </summary>
            <param name="parameterValues">Parameter values, where key is name of the parameter and value is
            parameter value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.Complete(System.Object[])">
            <summary>
            Completes executing the current process element.
            </summary>
            <param name="parameters">Array of the parameter values.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.Assign(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Assigns the property values of the current process element to the properties of the specified element.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.CreateFlowElementInstanceByType(System.Type,Terrasoft.Core.Process.Process)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> class by the specified type info.
            </summary>
            <param name="processElementType"></param>
            <param name="process">Instance of the <see cref="T:Terrasoft.Core.Process.Process"/> type.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.CloneShallow">
            <summary>
            Creates a shallow copy of the current process element.
            </summary>
            <returns>Instance that is a copy of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ReadPropertiesData">
            <summary>
            Reads state of the current process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.WritePropertiesData">
            <summary>
            Writes state of the current process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Writes state of the current process element.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
            <param name="shouldWriteElements">Indicates whether to write other process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.Execute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ReadPropertiesDataFromDB(Terrasoft.Core.UserConnection)">
            <summary>
            Reads state of the current process element from DB.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ReadPropertiesDataFromMemory">
            <summary>
            Method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.WritePropertiesDataToMemory">
            <summary>
            Method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.CompleteExecuting(System.Object[])">
            <summary>
            Completes executing the current process element.
            </summary>
            <param name="parameters">Array of the parameter values.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.CancelExecuting(System.Object[])">
            <summary>
            Cancels executing the current process element.
            </summary>
            <param name="parameters">Array of the parameter values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetExecutionData">
            <summary>
            Returns the data required to display the execution page.
            </summary>
            <returns>String that represents the data needed for showing execution page.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetResultParameterAllowedValues">
            <summary>
            Returns allowed values of the result parameter.
            </summary>
            <returns>Allowed values of the result parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetResultAllowedValues">
            <summary>
            Gets the result allowed values.
            </summary>
            <returns>The result allowed values.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.SerializeToString(System.Object)">
            <summary>
            Serializes the specified value.
            </summary>
            <param name="value">The specified value.</param>
            <returns>String that represents the serialized value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.DeserializeFromString``1(System.String)">
            <summary>
            Converts the specified string to an object of the specified type.
            </summary>
            <param name="value">The string to be deserialized.</param>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetLocalizableString(System.String,System.String)">
            <summary>
            Returns string value that depends on the current culture info.
            </summary>
            <param name="managerName">Name of the resource manager.</param>
            <param name="resourceItemName">Name of the resource item.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.ConvertToProcessDataSourceFilters(System.Guid,System.String)">
            <summary>
            Converts a set of filters to a process format.
            </summary>
            <param name="entitySchemaUId">Unique identifier of the entity schema.</param>
            <param name="dataSourceFilters">Set of the filter values.</param>
            <returns>Converted value of the set of filters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.FindSchemaElement">
            <summary>
            Finds the current schema element in schema of the current owner.
            </summary>
            <returns>Found schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetSchemaElement">
            <summary>
            Returns owner schema element.
            </summary>
            <returns>Found schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetIsReexecution">
            <summary>
            Returns flag that indicates if element has been executed one or more times.
            </summary>
            <returns><c>true</c> if current element has been executed; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Returns parameter value.
            </summary>
            <param name="parameter">Process schema parameter.</param>
            <returns>Parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetNotificationData">
            <summary>
            Returns data of the process element notification event.
            </summary>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessElementNotification"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetParameterValues">
            <summary>
            Returns element parameters in (Parameter, ParameterValue) format.
            </summary>
            <returns>Dictionary with element parameters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessActivity.GetParameterValues(System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter})">
            <summary>
            Returns a dictionary with element parameters and its values.
            </summary>
            <returns>Dictionary, where key is instance of the parameter and value is value of the parameter.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessActivityAfterEventArgs">
            <summary>
            Represents the class that contains event data that are needed after execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivityAfterEventArgs.Result">
            <summary>
            Gets or sets the result of the execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivityAfterEventArgs.Context">
            <summary>
            Gets or sets instance of the <see cref="T:Terrasoft.Core.Process.ProcessExecutingContext"/> type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessActivityBeforeEventArgs">
            <summary>
            Represents the class that contains event data are needed before execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivityBeforeEventArgs.IsCanceled">
            <summary>
            Gets or sets whether this process instance has been canceled.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessActivityBeforeEventArgs.Context">
            <summary>
            Gets or sets instance of the <see cref="T:Terrasoft.Core.Process.ProcessExecutingContext"/> type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessBasedSchema">
            <summary>
            ####### ##### #####, ########## ########## #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/> # ######## ########## ####.
            </summary>
            <param name="schemaManager">######## ####.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.#ctor(Terrasoft.Core.Process.ProcessBasedSchema)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/>, ########## ###### ######## #####.
            </summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.ProcessSchemaManager">
            <summary>
            ######## #####, ########## ########## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.IsEventsProcessSchemaInitialized">
            <summary>
            ##########, ################ ## ##### ########### ######## ###### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.EventsProcessSchema">
            <summary>
            ##### ########### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessBasedSchema.ParentProcessBasedSchema">
            <summary>
            ############ #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.InitializeEventsProcessSchema">
            <summary>
            ######### ############# ##### ########### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ####### ######## ####### ##### ## ########## # ####### ######### 
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## 
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ##### # ####### ######### ########## 
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############ 
            ########## #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.GetSchemaReferences">
            <summary>
            ########## ######### ###### ## ######, ####### ########## ### ########## #####.
            </summary>
            <returns>######### ###### ## ######, ####### ########## ### ########## #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            ######### ############# ############ ######## ##### ## ########## ######### ## ######## ###### ######### 
            ######### ########.</summary>
            <param name="resourceManagerName">### ######### ########.</param>
            <param name="resourceGroupName">### ###### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            ######### ########## ######### ##### ############## ####### #####.
            </summary>
            <param name="metaItems">#########, ####### ########### ############## ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.CreateEventsProcess(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ######### ########### ######## #####.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>######### ########## ########### ########.</returns>
            <exception cref="T:System.NotImplementedException">########### ##### ## ########## # ###### 
            <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/>, # ################ # ####### - ########### 
            <see cref="T:Terrasoft.Core.Process.ProcessBasedSchema"/>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessBasedSchema.InitializeEventsProcessSchemaLocalizableValues">
            <summary>
            ######### ############# ############ ######## ##### ########### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessComponentSet">
            <summary>
            Represents a set of process components that are required to run it.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.ProcessComponentSetStrategy,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The schema.</param>
            <param name="processComponentSetStrategy">The process component set strategy.</param>
            <param name="parameterStore">The process parameter store.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> class for the given user connection and
            the process schema.
            </summary>
            <param name="connection">The user connection.</param>
            <param name="schema">The schema.</param>
            <param name="store">The process parameter store.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSet.IsRestoring">
            <summary>
            Gets value that indicates whether the current process in restoring state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSet.ProcessModel">
            <summary>
            Gets instance that implements the<see cref= "T:Terrasoft.Core.Process.IProcessModel" /> interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSet.FlowSchemaUId">
            <summary>
            Gets unique identifier of the flow schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSet.MaxLoopCount">
            <summary>
            Gets maximum number of repetitions.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.ProcessComponentSet.ProcessFlowElementExecuted">
            <summary>
            Occurs when the process element is successfully executed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CompleteApplyingFlowElementsPropertiesData">
            <summary>
            Completes applying state of the process elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.PrepareStart(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Prepares to start the current process.
            </summary>
            <param name="context">The execution context.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.TryCreateFlowElementInstance(System.String,System.Guid,Terrasoft.Core.Process.ProcessFlowElement@)">
            <summary>
            Tries the create flow element instance.
            </summary>
            <param name="propertyName">Name of the corresponding process class property.</param>
            <param name="schemaElementUId">The schema element identifier.</param>
            <param name="processFlowElement">The process flow element.</param>
            <returns><c>True</c>, if the instance was created, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CompleteApplyingPropertiesDataValues">
            <summary>
            Completes applying state of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.WriteProcessParameters">
            <summary>
            Writes parameter values of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies state of the current process.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Restore(System.String,Terrasoft.Core.UserConnection,Terrasoft.Core.Process.IProcessServiceProvider)">
            <summary>
            Restores a process based on serialized property values.
            </summary>
            <param name="serializedData">Serialized state of the process.</param>
            <param name="connection">User connection.</param>
            <param name="serviceProvider">Process service provider.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.ClearProcessData">
            <summary>
            Clears the process data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.ForceGetProcessFlowElement(System.String)">
            <summary>
            Returns an instance of the process element. If the element is not initialized, it will be initialized first.
            </summary>
            <param name="schemaElementName">Name of the schema element.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type..</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CreateParametersDataWriter(System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CreateParametersDataWriter(System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.ReadSubProcessParameters(Terrasoft.Core.Process.IProcessElementMetaInfo,Terrasoft.Core.Process.Process)">
            <summary>
            Reads the parameter values of sub process to the parameter values of current instance.
            </summary>
            <param name="subProcessElementSchema">The sub process element schema.</param>
            <param name="subProcessElementInstance">The sub process element instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InternalExecuteProcess(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes process.
            </summary>
            <param name="context">The executing context.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitMemoryParameterStore">
            <summary>
            Initializes the memory parameter store.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.ActualizeProcessElement(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Actualizes instance of the process into the private field of the class.
            </summary>
            <param name="element">Element of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Run(Terrasoft.Core.Process.StartElementOptions)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Run(Terrasoft.Core.Process.StartSignalOptions)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Run(Terrasoft.Core.Process.StartProcessOptions,Terrasoft.Core.Process.IProcessParameterValueReceiver)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.TryCreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessData,Terrasoft.Core.Process.ProcessFlowElement@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CreateSubProcess(Terrasoft.Core.Process.BaseProcessSchemaElement,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.ProcessData)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Register">
            <summary>
            Performs registration of the process components set in DB.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Execute(System.String,System.Guid)">
            <summary>
            Executes the process element.
            </summary>
            <param name="elementName">Name of the process element.</param>
            <param name="entityId">Identifier of the entity.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeProcessComponentSetParameters(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Initializes parameter values of the current process.
            </summary>
            <param name="nameValueMap">Set of the parameter values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeProcessComponentSetParameters(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
            Initalizes parameter values of the current process.
            </summary>
            <param name="nameValueMap">Set of the parameter values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.PersistMemoryParameterStore">
            <summary>
            Initializes parameter values of the specified subprocess.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CancelElementExecuting(System.String)">
            <summary>
            Cancells an element's execution.
            </summary>
            <param name="flowElementName">Name of an element that is successor
            of <see cref="T:Terrasoft.Core.Process.ProcessActivity"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.OnAfterActivitySave(System.String,Terrasoft.Core.Entities.Entity)">
            <summary>
            Called when AfterActivitySave event of the "User Task" process element throws.
            </summary>
            <param name="methodName">Name of the element's method.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Assign(Terrasoft.Core.Process.ProcessFlowElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.SetParameterValue``1(System.String,``0)">
            <summary>
            Sets protected parameter value by it's name.
            </summary>
            <typeparam name="T">The type of parameter.</typeparam>
            <param name="parameterName">The parameter name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.GetParameterValue``1(System.String)">
            <summary>
            Gets parameter value by it's name.
            </summary>
            <typeparam name="T">The type of parameter.</typeparam>
            <param name="parameterName">The name of parameter.</param>
            <returns>Returns the value of the property by name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Execute(Terrasoft.Core.Process.ProcessFlowElement,System.Object[])">
            <summary>
            Executes the process element.
            </summary>
            <param name="processElement">Process element.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Writes state of the current process.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
            <param name="shouldWriteElements">Indicates whether to write process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.CloneShallow">
            <summary>
            Clones current instance without its flow elements.
            </summary>
            <returns>Shallow clone of current instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.InitializeFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Reads flow element parameter values from parameter store.
            </summary>
            <param name="flowElement">The flow element instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.GetParameterValueByMetaPath(System.String)">
            <summary>
            Gets the process parameter value by meta path.
            </summary>
            <param name="metaPath">The process parameter meta path.</param>
            <returns>The process parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Execute(System.String)">
            <summary>
            Executes process element by its name.
            </summary>
            <param name="elementName">Name of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessComponentSet.Equals(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Determines whether the specified process is equal to the current process.
            </summary>
            <param name="other">The process to compare with the current process.</param>
            <returns><c>true</c> if the specified process is equal to the current process; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessComponentSetStrategy">
            <summary>
            Defines behaviour of <see cref="T:Terrasoft.Core.Process.ProcessComponentSet"/> instance.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.CompleteProcess">
            <summary>
            Process completion behaviour.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.ForceGetFlowElementInstance">
            <summary>
            Obtaining an instance of a business process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.GetAssembly">
            <summary>
            Obtaining an assembly.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.GetNamespaceName">
            <summary>
            Obtaining namespace of <see cref="T:Terrasoft.Core.Process.IProcessModel"/> implementation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.CreateProcessModel">
            <summary>
            Provides access to the process instance methods.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessComponentSetStrategy.CreateFlowEngine">
            <summary>
            Flow engine factory method.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessConvertorUtilities">
            <summary>
            Class provides utility methods for converting.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessConvertorUtilities.FinalActivityStatusFilterMarker">
            <summary>
            Gets the FinalActivityStatus filter marker.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessConvertorUtilities.DataContractFilterGroupClassName">
            <summary>
            Gets the serialized Terrasoft.Nui.ServiceModel.DataContract.FilterGroup class marker.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessConvertorUtilities.DataContractFiltersClassName">
            <summary>
            Gets the serialized Terrasoft.Nui.ServiceModel.DataContract.Filters class marker.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessConvertorUtilities.GetIsDataContractFilter(System.String)">
            <summary>
            Makes a check on DataContract filter.
            </summary>
            <param name="dataSourceFilters">Serialized filters.</param>
            <returns><c>true</c> if <paramref name="dataSourceFilters" />is DataContract filter;
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessData">
            <summary>
            Represents data of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessData.SchemaId">
            <summary>
            Gets or sets identifier of the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessData.ParentId">
            <summary>
            Gets or sets identifier of the parent process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessData.ManagerName">
            <summary>
            Gets or sets name of the schema manager.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessDescriptor">
            <summary>
            Represents the status of process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessDescriptor.UId">
            <summary>
            Id of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessDescriptor.ProcessStatus">
            <summary>
            Contains information about the process status.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessDescriptor.IsNextElementReady">
            <summary>
            Gets or sets a value that indicates whether the next process element is ready to be executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessDescriptor.WaitingUserTasksCount">
            <summary>
            Gets or sets number of the process elements that are going to show execution page.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementCompletionInfo">
            <summary>
            Provides information need to complete process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementCompletionInfo.ElementUId">
            <summary>
            Gets or sets the element identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementCompletionInfo.ProcessUId">
            <summary>
            Gets or sets the process identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementCompletionInfo.RootProcessUId">
            <summary>
            Gets or sets the identifier of the root process.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementData">
            <summary>
            Represents data of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementData.ProcessId">
            <summary>
            Gets or sets identifier of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementData.SchemaUId">
            <summary>
            Gets or sets unique identifier of the process element schema.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementExtraData">
            <summary>
            Represents extra data of the process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementExtraData.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessElementExtraData"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementExtraData.#ctor(System.Byte[])">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessElementExtraData"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementExtraData.Add(System.String,System.Object)">
            <summary>
            Adds or updates property value.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementExtraData.GetValue``1(System.String,``0)">
            <summary>
            Returns the value of the property or <paramref name="defaultValue"/>.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="propertyName">Name of the property.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementExtraData.GetBytes">
            <summary>
            Returns byte array.
            </summary>
            <returns>Serialized value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementExtraData.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementFactory">
            <summary>
            Implements interface <see cref="T:Terrasoft.Core.Process.IProcessElementFactory"/> for process based on process schema.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessElementFactory" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementFactory.#ctor(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessElementFactory"/> class.
            </summary>
            <param name="process">The process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessElementFactory.CreateProcessElement(Terrasoft.Core.Process.BaseProcessSchemaElement)">
            <summary>
            Creates the process element depending on its meta data.
            </summary>
            <param name="schemaElement">The schema element meta data.</param>
            <returns>
            The process element instance.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementLog">
            <summary>
            Represents data of the process element Log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementLog.UtcNowTimeStamp">
            <summary>
            Gets or sets time stamp that is set to the current date and time on this application,
            expressed as the Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementLog.SysProcessId">
            <summary>
            Gets or sets SysProcessData process identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementLog.Type">
            <summary>
            Gets or sets an element's type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementLog.SchemaElementUId">
            <summary>Gets or sets the schema element unique identifier of the process element.</summary>
            <value>The schema element unique identifier of the process element.</value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementLog.ErrorDescription">
            <summary>
            Gets or sets an error text, if there was error.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementLog.NodeId">
            <summary>
            Gets or sets current executing node identifier.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementNotification">
            <summary>
            Represents data of the process element notification event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.ExecutionData">
            <summary>
            Gets or sets the execution data of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.ExtraData">
            <summary>
            Gets or sets the extra data of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.Id">
            <summary>
            Gets or sets identifier of the notification event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.ContactId">
            <summary>
            Gets or sets identifier of the contact.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.ElementSchemaUId">
            <summary>
            Gets or sets unique identifier of the process element schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.ProcessSchemaUId">
            <summary>
            Gets or sets unique identifier of the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.SysProcessDataId">
            <summary>
            Gets or sets identifier of the process data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.Title">
            <summary>
            Gets or sets title of the notification event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.Subject">
            <summary>
            Gets or sets subject of the notification event.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.ManagerName">
            <summary>
            Gets or sets name of the schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementNotification.StartDate">
            <summary>
            Gets or sets start date time.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessElementToDoData">
            <summary>
            Represents data of the process element which is needed for user interaction.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementToDoData.Id">
            <summary>
            Gets or sets identifier of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementToDoData.ProcessSchemaUId">
            <summary>
            Gets or sets unique identifier of the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementToDoData.ManagerName">
            <summary>
            Gets or sets name of the schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementToDoData.ExecutionData">
            <summary>
            Gets or sets the execution data of the process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessElementToDoData.ExtraData">
            <summary>
            Gets or sets the extra data of the process element.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessExecutingContext">
            <summary>
            Represents process execution context.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessExecutingContext.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessExecutingContext"/> type.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.UserConnection">
            <summary>
            Gets user connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.QueueTasks">
            <summary>
            Gets queue of the task names.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.QueueTasksV2">
            <summary>
            Gets queue of the task descriptors.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.Process">
            <summary>
            Gets or sets instance of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.SenderName">
            <summary>
            Gets or sets name of the sender.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.QueueElement">
            <summary>
            Gets or sets process queue element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessExecutingContext.ThrowEventArgs">
            <summary>
            Gets or sets event arguments to throw.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessExpressionHelper">
            <summary>
            Provides auxiliary methods for analyzing (parsing) of expressions.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessExpressionHelper.GetIsImplicitlyCastCompatibleTypesForInt(System.Type,System.Type)">
            <summary>
            Determines whether implicit conversion from one type to the other is available.
            </summary>
            <param name="fromType">From instance of the <see cref="T:System.Type"/> type.</param>
            <param name="toType">To instance of the <see cref="T:System.Type"/> type.</param>
            <returns><c>true</c>, if the “from” instance of the <see cref="T:System.Int32"/> type is compatible to be
            implicitly cast as other type, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessExpressionHelper.GetIsImplicitlyCastCompatibleTypesForList(System.Type,System.Type)">
            <summary>
            Determines whether implicit conversion from one type of list to the other type of list is available.
            </summary>
            <param name="fromType">From instance of the <see cref="T:System.Type"/> type.</param>
            <param name="toType">To instance of the <see cref="T:System.Type"/> type.</param>
            <returns><c>true</c>, if the “from” instance is compatible to be
            implicitly cast as other type, otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessFlowElement">
            <summary>
            Represents a process element.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessFlowElement.UIdPropertyName">
            <summary>
            The meta data index for the "UId" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessFlowElement.NamePropertyName">
            <summary>
            The meta data index for the "Name" property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessFlowElement.StatusPropertyName">
            <summary>
            The meta data index for the "Status" property.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsRegisteredElementInLog">
            <summary>
            Gets or sets value that indicates whether the process element needs to be logged.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsStateRegistered">
            <summary>
            Gets or sets value that indicates whether the process element is registered.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsRestoringState">
            <summary>
            Gets value that indicates whether the current process element in restoring state.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.Log">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.UId">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.Type">
            <summary>
            Gets or sets the name of the current member type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.SerializeToDB">
            <summary>
            Gets or sets value that determines whether it is required to serialize the current element in DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsLogging">
            <summary>
            Gets or sets value determines whether it is required to log the current element in DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.Owner">
            <summary>
            Gets or sets the owner of the current element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsProcess">
            <summary>
            Gets value that determines whether the element is a process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.SchemaElementUId">
            <summary>
            Gets or sets unique identifier of the schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.Status">
            <summary>
            Gets or sets the execution state.
            </summary>
            <value>
            The execution state.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.IsExecuted">
            <summary>
            Gets or sets value that determines whether the current element has been executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.ExecutionResult">
            <summary>
            Gets or sets execution result.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.LoopCounter">
            <summary>
            Gets or sets number of process element repetitions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.SchemaUId">
            <summary>
            Gets or sets unique identifier of schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.CreatedInSchemaUId">
            <summary>
            Gets or sets unique identifier of the owner process schema where the current element has been created.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.PreviousFlowElements">
            <summary>
            Gets or sets a set of previous elements of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.ExecutedEventHandler">
            <summary>
            Gets or sets event handler. It is triggered when current process element has been executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessFlowElement.StartDate">
            <summary>
            Gets or sets date and time of the day when the current process element has been started.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.ProcessFlowElement.TryActualizeOwnerState">
            <summary>
            Occurs when the element is needed to actualize state of the owner process.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.ProcessFlowElement.Executed">
            <summary>
            Occurs when the Execute method is called in the process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.OnExecuted(Terrasoft.Core.Process.ProcessActivityAfterEventArgs)">
            <summary>
            This method is called after the current process element is executed.
            </summary>
            <param name="e">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivityAfterEventArgs"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ReadPropertiesData(Terrasoft.Common.DataReader,System.Action{Terrasoft.Common.DataReader})">
            <summary>
            Reads state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>		
            <param name="action">Action that performs while reading.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.CompleteApplyingPropertiesDataValues">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertyValues(Terrasoft.Common.DataWriter)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.SetDurationQueryParameters(Terrasoft.Core.DB.QueryParameterCollection)">
            <summary>
            Sets value of the duration query parameter.
            </summary>
            <param name="parameters">Query parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.GetCanRegisterElementData">
            <summary>
            Indicates whether the execution state can be registered.
            </summary>
            <returns><c>true</c> if execution state can be registered; otherwise-<c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.RegisterInDB(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus)">
            <summary>
            Performs registration of the process data in DB.
            <param name="userConnection">The user connection.</param>
            <param name="status">The process status.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.RegisterInDB(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Performs registration of the process data in DB.
            <param name="userConnection">The user connection.</param>
            <param name="status">The process status.</param>
            <param name="error">The description of the error.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.UpdateStatusInLog(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus)">
            <summary>
            Updates status of the process element in DB.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="newStatus">Status of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.UpdateStatusInLog(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Updates status of the process element in DB.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="newStatus">Status of the process.</param>
            <param name="error">Description of the error.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.UpdateOwnerStatus(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.Process,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Updates status of the owner process.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="owner">Owner process.</param>
            <param name="status">Status of the process.</param>
            <param name="description">Description of the error.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WriteErrorToProcessLog(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Changes the state of the element and its owner process to error. Writes the error message to process log.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.GetExecutingItem">
            <summary>
            Returns instance of the process element to execute.
            </summary>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ActualizeOwnerState(System.Boolean)">
            <summary>
            Actualizes state of the owner process.
            </summary>
            <param name="isCloned">Flag that indicates whether the process element is cloned.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertiesDataToggled(Terrasoft.Core.UserConnection)">
            <summary>
            Writes process data if feature UseProcessSplitState is enabled.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ReadPropertiesData(System.Byte[])">
            <summary>
            Reads the properties data from specified serialized value.
            </summary>
            <param name="propertiesData">The serialized properties data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ReadPropertiesData(System.IO.TextReader)">
            <summary>
            Reads the properties data from specified text reader.
            </summary>
            <param name="textReader">The properties data text reader.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.SetPrivateFieldValue(System.String,System.Object,System.Object)">
            <summary>
            Sets the value of private field of a process instance. 
            </summary>
            <param name="fieldName">Field name that is declared in the "source" argument.</param>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.Process.Process"/> type.</param>
            <param name="value">The new field value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.Assign(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Assigns the property values of the current process element to the properties of the specified element.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ToString">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ReadPropertiesData">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ReadPropertiesData(Terrasoft.Common.DataReader)">
            <summary>
            Reads state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertiesData">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Writes state of the current process element.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
            <param name="shouldWriteElements">Indicates whether to write other process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.CloneShallow">
            <summary>
            Creates a shallow copy of the current process element.
            </summary>
            <returns>Instance that is a copy of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertiesData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes state of the current process element.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.GetPropertiesData">
            <summary>
            Returns serialized state of the current process element.
            </summary>
            <returns>String that represents serialized state of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.GetPropertiesData(System.Boolean)">
            <summary>
            Returns serialized state of the current process element.
            </summary>
            <param name="shouldWriteElements">Indicates whether to write other process elements.</param>
            <returns>String that represents serialized state of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertiesDataToDB(Terrasoft.Core.UserConnection)">
            <summary>
            Writes state of the current process element to DB.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.Execute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.TryGetPerformer(System.Guid@)">
            <summary>
            Attempts to get performer user.
            </summary>
            <param name="performerUId">Unique identifier of the performer user.</param>
            <returns><c>true</c> if current performer is defined; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.WritePropertiesDataToOwner(Terrasoft.Common.DataWriter)">
            <summary>
            Writes the properties data to owner process data stream.
            </summary>
            <param name="writer">The data writer.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElement.ReadPropertiesDataFromOwner(Terrasoft.Common.DataReader)">
            <summary>
            Reads the properties data from owner process data stream.
            </summary>
            <param name="dataReader">The data reader.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessFlowElementDispatcher">
            <summary>
            Implements <see cref="T:Terrasoft.Core.Process.IProcessFlowElementDispatcher"/> for instance of <see cref="T:Terrasoft.Core.Process.Process"/> type.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.IProcessFlowElementDispatcher" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElementDispatcher.#ctor(Terrasoft.Core.Process.Process)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElementDispatcher"/> class.
            </summary>
            <param name="process">The process instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElementDispatcher.CompleteActivityExecution(System.Collections.Generic.IEnumerable{System.Guid},System.Object[])">
            <summary>
            Completes execution of running activitiy elements.
            </summary>
            <param name="elementUIds">Element identifiers to complete.</param>
            <param name="parameters">Arguments for <see cref="M:Terrasoft.Core.Process.ProcessActivity.CompleteExecuting(System.Object[])" />.</param>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElementDispatcher.CancelActivityExecution(System.Collections.Generic.IEnumerable{System.Guid},System.Object[])">
            <summary>
            Cancels execution of running activitiy elements.
            </summary>
            <param name="elementUIds">Element identifiers to cancel.</param>
            <param name="parameters">Arguments for <see cref="M:Terrasoft.Core.Process.ProcessActivity.CancelExecuting(System.Object[])" />.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFlowElementDispatcher.GetRunningElements``1">
            <summary>
            Returns running flow element instances of type provided by TFlowElement.
            </summary>
            <typeparam name="TFlowElement">Type of requested elements.</typeparam>
            <returns>
            Running flow elements.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessFormulaScriptTask">
            <summary>
            Flow element for formula.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessScriptTask" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessFormulaScriptTask.#ctor(Terrasoft.Core.Process.ProcessSchemaFormulaTask)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessFormulaScriptTask"/> type.
            <param name="schemaFormulaTask">The schema formula task.</param>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessGenerator">
            <summary>
            Provides methods for generating source code.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.GetFlowNodeSchemaName(Terrasoft.Core.Process.ProcessSchemaBaseElement)">
            <summary>
            Returns the schema name of the process that owns the specified element.
            </summary>
            <param name="schemaElement">Schema element.</param>
            <returns>String that represents the schema name of the process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.GetProcessElementClassName(Terrasoft.Core.MetaItem)">
            <summary>
            Generates name of the class by element name.
            </summary>
            <param name="flowNode">Meta item.</param>
            <returns>String that represents class name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.FindProcessSchemaLane(Terrasoft.Core.Process.ProcessSchema,System.Guid)">
            <summary>
            Finds lane by its unique identifier.
            </summary>
            <param name="processSchema">Process schema.</param>
            <param name="laneUId">Unique identifier of the lane.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaLane"/> class.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.WriteMethodAssign(System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.MethodCollectionItem},System.String,Terrasoft.Core.Process.IParametrizedProcessSchemaElement)">
            <summary>
            Writes the "Assign" class method of the process.
            </summary>
            <param name="methods">Set of the class methods.</param>
            <param name="className">Name of the class.</param>
            <param name="parametrizedElement">Parametrized schema element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.GetIsProcessSchemaParameterInherited(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Determines whether the specified parameter is inherited.
            </summary>
            <param name="parameter">Process schema parameter.</param>
            <returns><c>true</c> if parameter is inherited; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.GetParameterFieldName(System.String)">
            <summary>
            Returns name of the class field.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>String that represents the name of the class field.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.FindParameter(System.Guid,Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Finds parameter by the specified identifier.
            </summary>
            <param name="parameterUId">Unique identifier of the process parameter.</param>
            <param name="schema"></param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/> class if it was found;
            otherwise - <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.GenerateReadAndWriteSerializableObjectValue(System.Collections.ObjectModel.Collection{System.String}@,System.Collections.ObjectModel.Collection{System.String}@,System.String,Terrasoft.Core.DataValueType)">
            <summary>
            Generates code lines for methods with names ApplyPropertiesDataValues and WritePropertiesData.
            </summary>
            <param name="writeValuesMethodBody">Code lines of WritePropertiesData method.</param>
            <param name="readValuesMethodBody">Code lines of ApplyPropertiesDataValues method.</param>
            <param name="propertyName">Name of the property.</param>
            /// <param name="dataValueType">Name of the data value type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessGenerator.GenerateMethodsApplyAndWritePropertyValues(Terrasoft.Core.Process.BaseProcessUserTaskSchema,System.Collections.ObjectModel.Collection{System.String},System.Collections.ObjectModel.Collection{System.String})">
            <summary>
            Generates code for methods with names ApplyPropertiesDataValues and WritePropertiesData.
            </summary>
            <param name="schema">Instance that implements the <see cref="T:Terrasoft.Core.Process.BaseProcessUserTaskSchema"/> type.</param>
            <param name="readValuesMethodBody">Code lines of ApplyPropertiesDataValues method.</param>
            <param name="writeValuesMethodBody">Code lines of WritePropertiesData method.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessInstanceParametersDataReader">
            <summary>
            Class provides methods for reading parameter values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.#ctor(System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.ProcessParameterValueProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessInstanceParametersDataReader"/>.
            </summary>
            <param name="schemaParameters">List of parameters from which settings should be read.</param>
            <param name="valueProvider">Instance of the class <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>
            - set of methods for getting the values of the process parameters.</param>
            <param name="isReExecution">Flag that indicates repeated execution of element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.#ctor(System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.ProcessParameterValueProvider,System.Boolean)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessInstanceParametersDataReader"/>.
            </summary>
            <param name="schemaElementUId">Identifier of the process element.</param>
            <param name="schemaParameters">List of parameters from which settings should be read.</param>
            <param name="valueProvider">Instance of the class <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>
            - set of methods for getting the values of the process parameters.</param>
            <param name="isReExecution">Flag that indicates repeated execution of element.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessInstanceParametersDataReader._currentName">
            <summary>
            Returns parameter name.
            </summary>
            <value>
            Parameter name.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.CurrentValue">
            <summary>
            Returns current value of the parameter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.Read(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Moves the current position in the data set to the specified parameter.
            </summary>
            <returns>
            Name of the current parameter.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.Read">
            <summary>
            Moves the current position in the data set to the next parameter.
            </summary>
            <returns>
            Returns string with the name of a parameter in the next data set position or an empty string if reached
            the end of the data set.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.ReadInto">
            <summary>
            Returns the name of the data set type.
            </summary>
            <returns>
            String which is the name of the class <see cref = "T:Terrasoft.Core.Process.ProcessSchemaParameterCollection" />.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.ReadOut">
            <summary>
            Returns empty string.
            </summary>
            <returns>
            Empty string. You must call the function <see cref="M:Terrasoft.Common.DataReader.Read"/>, to get the name
            of the next parameter.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetStringValue">
            <summary>
            Returns a string representation of the parameter value that is at the current position of the data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetGuidValue">
            <summary>
            Returns the instance of the <see cref="T:System.Guid"/>, type corresponding to parameter value
            that is at the current position of data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref="T:System.Guid"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetIntValue">
            <summary>
            Returns the instance of the <see cref="T:System.Int32"/>, type corresponding to parameter value
            that is at the current position of data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetDoubleValue">
            <summary>
            Returns the instance of the <see cref="T:System.Double"/>, type corresponding to parameter value
            that is at the current position of data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref="T:System.Double"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetDateTimeValue">
            <summary>
            Returns the instance of the <see cref="T:System.DateTime"/>, type corresponding to parameter value
            that is at the current position of data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref="T:System.DateTime"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetBoolValue">
            <summary>
            Returns the instance of the <see cref="T:System.Boolean"/>, type corresponding to parameter value
            that is at the current position of data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetValue(System.Type)">
            <summary>
            Returns the parameter value at the current position of data set that is converted to specified type.
            </summary>
            <param name="type">Type.</param>
            <returns>
            Current parameter value that is converted to specified in <paramref name="type"/> type.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetValue``1">
            <summary>
            Returns the parameter value at the current position of data set that is converted to specified type.
            </summary>
            <typeparam name="TValue">The value of any type.</typeparam>
            <returns>
            The converted value.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetLocalizableStringValue">
            <summary>
            Returns the instance of the <see cref="T:Terrasoft.Common.LocalizableString"/>, type corresponding to parameter value
            that is at the current position of data set.
            </summary>
            <returns>
            The current value of the parameter type with <see cref = "T:Terrasoft.Common.LocalizableString" />.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.Close">
            <summary>
            Releases resources.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.ReadNextCollectionItem">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetStreamValue">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetStreamValue(System.IO.Stream)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetEnumValue``1">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetValue(Terrasoft.Common.DataConverter)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetSerialazebleObjectValue(System.Type)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetSerializableObjectValue">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.GetSerializableObjectValue``1">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataReader.HasValue">
            <summary>
            Indicates that there is a value to read in the current position of the data set.
            </summary>
            <returns>
            <c>True</c>, if there is a value to read, otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParametersDataWriterSettings">
            <summary>
            Settings for process parameter data writer.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter">
            <summary>
            Represents methods for sequentially writing values of the process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.IProcessInstanceParameterStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="schemaParameters">The schema element parameters.</param>
            <param name="parameterStore">The process parameter store.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.IProcessInstanceParameterStore,Terrasoft.Core.IDateTimeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="schemaElementUId">The schema element UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.SchemaElementUId"/>.
            </param>
            <param name="schemaElementParameters">The schema element parameters.</param>
            <param name="processParameterStore">The process parameter store.</param>
            <param name="dateTimeProvider"><see cref="T:Terrasoft.Core.IDateTimeProvider"/> instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.IProcessInstanceParameterStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="schemaElementUId">The schema element UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.SchemaElementUId"/>.
            </param>
            <param name="schemaElementParameters">The schema element parameters.</param>
            <param name="processParameterStore">The process parameter store.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.Close">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Guid,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Decimal,System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Enum,System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.Type,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,System.IO.Stream)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.String,Terrasoft.Common.DataConverter,System.Object,System.Object)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteValue(System.Object[])">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteSerializableObjectValue(System.String,System.Object,System.Object)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteStartObject">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteStartObject(System.String)">
            <summary>
            ######## ###### ########## ######### # ######## ###### # ##### ######.
            </summary>
            <param name="name">### #########.</param>
            <remarks>##### ########## # ##### ###### ### ########## #######, ############ ######## ### ########### 
            ######### ##### ######## # ######### ######## # #####, ############ ## ############## ######### ####### # 
            ########### ############## ######### - ###### ## ########## ###### ###### WriteFinishObject.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteFinishObject">
            <summary>
            ######### ###### ########## #########.
            </summary>
            <remarks>
            ##### ########## ###### ######## ########## #########; #### ## ###### ########### ####### #########
            ########, ########## "############" ### ######## - ## ########## ##### ######## ### ########### ############
            # ######### ##########, ##### - ##### ############ ###### # ######### # ####### ###### (### ###########).
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteStartCollection(System.String)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter.WriteFinishCollection">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.SetParameterValue``1(Terrasoft.Core.Process.ProcessSchemaParameter,System.Guid,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.FindParameterInfoByValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.TryFindValue(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.FindParameterValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetParameterValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.UpdateParameterValue``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.RemoveParameterValues">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.PersistParameterValues">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.EnterInMemoryMode">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.SynchronizeParametersMapInfo(System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.SetParameterValue``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetContainsMapPath(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetHasValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetParameterInfoPaths">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetProcessParameterPaths">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.FindParameterInfo(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetParameterInfo(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInstanceParameterStore.GetParametersInfo">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessIntermediateCatchEvent">
            <summary>
            Represents a base class for intermediate catch events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchEvent.#ctor">
            <summary>
            Creates an instance of <see cref="T:Terrasoft.Core.Process.ProcessIntermediateCatchEvent"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchEvent.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates an instance of <see cref="T:Terrasoft.Core.Process.ProcessIntermediateCatchEvent"/>.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchEvent.CompleteExecuting(System.Object[])">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchSignalEvent.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchSignalEvent.WritePropertiesDataToOwner(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchSignalEvent.WritePropertiesDataToDB(Terrasoft.Core.UserConnection)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessIntermediateCatchTimerEvent.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Creates an intermediate catch timer event.
            </summary>
            <param name="context">Process execution context.</param>
            <returns><c>true</c> if element is successfully created; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessIntermediateEventData">
            <summary>
            Represents data of the process intermediate events.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessIntermediateEventData.Id">
            <summary>
            Gets or sets identifier of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessIntermediateEventData.ElementIds">
            <summary>
            Gets or sets identifier of the process elements.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessInterpretationValidator">
            <inheritdoc cref="T:Terrasoft.Core.Process.BaseInterpretationValidator`1"/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessInterpretationValidator.GetDefaultValidationRules(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc cref="M:Terrasoft.Core.Process.BaseInterpretationValidator`1.GetDefaultValidationRules(`0)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessJsonDataReader.GetDateTimeValue">
            <summary>
            Returns the value of the current property of the <see cref="T:System.DateTime"/> type.
            </summary>
            <returns>
            The current value of a property of the <see cref="T:System.DateTime"/> type.
            </returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.EntitySchemaUId">
            <summary>
            Gets or sets the entity schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.RecordId">
            <summary>
            Gets or sets the record identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.ProcessElementUId">
            <summary>
            Gets or sets the process element identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.RecordChangeType">
            <summary>
            Gets or sets types of entity modifications.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.ConditionData">
            <summary>
            Gets or sets condition data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.ChangedColumns">
            <summary>
            Gets or sets data of changed columns.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessListenerData.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessListenerData.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessLog">
            <summary>
            Represents data of the process Log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.CreatedOn">
            <summary>
            Process log item creation date. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.ModifiedOn">
            <summary>
            Process log item modification date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.SysSchemaId">
            <summary>
            Process schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.ParentId">
            <summary>
            Parent process identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.SysWorkspaceId">
            <summary>
            Workspace identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.ClientIP">
            <summary>
            Client IP address.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.PackageUId">
            <summary>
            Process schema package UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.Version">
            <summary>
            Process schema version.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessLog.Schema">
            <summary>
            Gets or sets the process schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessManagerCompositeSynchronizer.InitializeSubscriptions(Terrasoft.Core.Process.ProcessSchemaManager)">
            <summary>
            Initializes synchronizers subscriptions on process manager events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessManagerCompositeSynchronizer.SaveData(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Invokes all process schema manager synchronizers.
            </summary>
            <param name="process">Process to synchronize.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessModel">
            <summary>
            Provides access to the values of process instance parameters and methods of business process elements with
            user's scripts.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessModel.UserConnection">
            <summary>
            Returns the user connection.
            </summary>
            <value>
            The user connection.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessModel.GetScriptTaskMethod(System.String)">
            <inheritdoc cref="T:Terrasoft.Core.Process.IProcessModel" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessModel.GetAfterActivitySaveMethod(System.String)">
            <inheritdoc cref="T:Terrasoft.Core.Process.IProcessModel" />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessNotificationManager">
            <summary>
            Provides methods to create and remove notification events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotificationManager.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance with specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotificationManager.Create(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Creates the notification event.
            </summary>
            <param name="notification">Notification data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotificationManager.Update(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Updates the specified notification.
            </summary>
            <param name="notification">The notification.</param>
            <returns><c>True</c> if notification was updated, otherwise <c>False</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotificationManager.Delete(System.Guid)">
            <summary>
            Deletes the notification by specified identifier of the entity.
            </summary>
            <param name="entityId">Identifier of the entity.</param>
            <returns><c>true</c> if the entity is successfully removed; otherwise, false.
            This method also returns <c>false</c> if the entity was not found in the relation data base.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessNotifier">
            <summary>
            Provides methods to set up notification events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotifier.#ctor(Terrasoft.Core.Process.IProcessNotificationManager)">
            <summary>
            Creates a new instance with specified user connection.
            </summary>
            <param name="notificationManager">Notification manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotifier.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance with specified user connection.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotifier.Publish(Terrasoft.Core.Process.ProcessElementNotification)">
            <summary>
            Publishes the specified notificarion event.
            </summary>
            <param name="notification">Notification data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessNotifier.Cancel(System.Guid)">
            <summary>
            Canceles the publisched notification event.
            </summary>
            <param name="id">Identifier of the process element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParallelGateway.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies state of the current process element.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParallelGateway.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes the current process element.
            </summary>
            <param name="context">The execution context.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParallelGateway.GetExecutingItem">
            <summary>
            Returns instance of the process element to execute.
            </summary>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParallelGateway.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Writes state of the current process element.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
            <param name="shouldWriteElements">Indicates whether to write other process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParallelGateway.CloneShallow">
            <summary>
            Creates a shallow copy of the current process element.
            </summary>
            <returns>Instance that is a copy of the current process element.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterDataUtils">
            <summary>
            Contains utility methods to read and write process parameter values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterDataUtils.InitializeParameterValues(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.ProcessParameterValueProvider,Terrasoft.Common.DataWriter)">
            <summary>
            Initializes the process parameter values using <paramref name="parameterValues"/> name value map.
            </summary>
            <param name="parameterValues">The parameter values.</param>
            <param name="processSchema">The process schema.</param>
            <param name="parameterValueProvider">The parameter value provider.</param>
            <param name="parametersDataWriter">The parameters data writer.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterDataUtils.ParseDateTimeValue(System.String)">
            <summary>
            Parses the date time value from string.
            </summary>
            <param name="stringValue">The string value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterDataUtils.TryParseDateValueFromConst(System.String,System.DateTime@)">
            <summary>
            Tries to parse date value from constant parameter source value. Returns only date part.
            </summary>
            <param name="parameterConstValue">The constant source value.</param>
            <param name="result">The result.</param>
            <returns>Returns <c>true</c> if date was parsed, otherwise <c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterDataUtils.TryParseDateTimeValueFromConst(System.String,System.DateTime@)">
            <summary>
            Tries to parse date value from constant parameter source value.
            </summary>
            <param name="parameterConstValue">The parameter constant value.</param>
            <param name="result">The result.</param>
            <returns>Returns <c>true</c> if date was parsed, otherwise <c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterDataUtils.TryParseTimeValueFromConst(System.String,System.TimeSpan@)">
            <summary>
            Tries to parse time interval value from constant parameter source value.
            </summary>
            <param name="parameterValue">The parameter constant value.</param>
            <param name="result">The result.</param>
            <returns>Returns <c>true</c> if time interval successfully were parsed; otherwise - <c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterDataUtils.Parse(System.String,System.Type)">
            <summary>
            Converts the string representation of a value in a specified invariant culture format to its
            object type equivalent.
            </summary>
            <param name="value">A string that contains a number to convert.</param>
            <param name="type">The type of object to return.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterInfoErrorType">
            <summary>
            Represents type of the error.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterErrorInfo">
            <summary>
            Represents an error information.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterErrorInfo.#ctor">
            <summary>
            Creates a new instance of the <inheritdoc cref="T:Terrasoft.Core.Process.ProcessParameterErrorInfo"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterErrorInfo.ErrorType">
            <summary>
            Gets or sets type of the error.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterErrorInfo.ErrorData">
            <summary>
            Gets or sets data of the error.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterErrorInfo.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterErrorInfo.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterErrorInfo.GetHashCode">
            <summary>
            Serves as the default hash function.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterErrorInfo.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterInfo">
            <summary>
            Represents the information about the process parameter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.Value">
            <summary>
            Gets or sets parameter value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.DataValueTypeUId">
            <summary>
            Gets or sets unique identifier of the data value type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.Name">
            <summary>
            Gets or sets parameter name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.Source">
            <summary>
            Gets or sets source of the parameter value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.InitialValue">
            <summary>
            Gets or sets initial parameter value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.InitialSource">
            <summary>
            Gets or sets initial source of the parameter value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.MustReadFromParameterStore">
            <summary>
            Flag that indicates whether the current value is forced to be read from the data store.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.SubParameterMetaPathSet">
            <summary>
            A set of meta paths to the components of the main parameter (for example, identifiers of columns
            for the type of parameter <see cref="T:Terrasoft.Core.Entities.Entity"/>).
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterInfo.ProcessParameterInfoPathes">
            <summary>
            A list of key/value pairs, where the key is the path to the parameter, and the value is the process
            parameter macro.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.Equals(System.Object)">
            <summary>
            Determines whether two object instances are equal.
            </summary>
            <param name="other">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessParameterInfo"/> type.</param>
            <returns>
            <c>true</c>> if the specified object is equal to the current object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.ToString">
            <summary>
            Returns a string that represents the current instance.
            </summary>
            <returns>A string that represents the current instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfo.Clone">
            <summary>
            Returns a copy of the current instance.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterInfoComposer">
            <summary>
            Represents the class responsible for correcting the process parameter mapping info in the event
            that its schema was changed after launch.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfoComposer.GetComposedParameterMappings(System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo},System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Merges the link table of a running process with the specified template set of parameter relationships.
            </summary>
            <param name="parametersMapInfo">Generated parameters mapping data.</param>
            <param name="currentParametersMapInfo">Current parameters mapping data.</param>
            <returns>Joint table of links with additions from the template and changes made during the execution
            of the process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterInfoComposer.ActualizeParameterMappingInfo(System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo},System.Collections.Generic.Dictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <summary>
            Returns parameters info provided in <paramref name="currentParametersInfo"/> and actualized using data from
            current flow schema provided in <paramref name="schemaMapInfo"/>.
            </summary>
            <param name="schemaMapInfo">Current flow schema parameters mapping data .</param>
            <param name="currentParametersInfo">Current process parameters mapping data.</param>
            <returns>Actualized parameters info.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterMapInfo">
            <summary>
            ############ ########## ######## ######## ######### # ######### ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMapInfo.#ctor(System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/> # ######## ############### ######### #####
            ######-########.
            </summary>
            <param name="parameterUId">############# ######### ##### ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMapInfo.#ctor(System.String,System.String)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/> # ######## ############### ######### #
            ######## ##### ######-########.
            </summary>
            <param name="schemaElementUId">############# ######## ##### ######-########.</param>
            <param name="parameterUId">############# ######### ##### ######-########.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMapInfo.#ctor(System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessParameterMapInfo"/> class.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <param name="parameterUId">The parameter identifier.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.ParameterUId">
            <summary>
            ############# ######### ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.SchemaElementUId">
            <summary>
            ############# ######## ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.MapPath">
            <summary>
            ###### #### # ######### ######## ### ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.SubParameterMetaPath">
            <summary>
            ###### #### #### # ######### ######## ### ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMapInfo.ParameterMacros">
            <summary>
            ###### ######### ######## ### ##### ######-########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterMemoryStore">
            <summary>
            In memory store for process parameter values.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMemoryStore.ParameterInfoPathes">
            <summary>
            Gets the set of paths by which you can retrieve process parameter data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMemoryStore.ParameterInfoLocalStore">
            <summary>
            Gets the repository of the process parameter data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterMemoryStore.ParameterStores">
            <summary>
            Gets the set of the repositories where stores the process parameter values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Replicate(Terrasoft.Core.Process.IProcessParameterStore,System.Guid)">
            <summary>
            Replicates data to another repository.
            </summary>
            <param name="store">Instance that implements the <see cref="T:Terrasoft.Core.Process.IProcessParameterStore"/> interface.</param>
            <param name="uid">Unique identifier of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Replicate(Terrasoft.Core.Process.IProcessInstanceParameterStore)">
            <summary>
            Replicates data to another repository.
            </summary>
            <param name="store">Destination store. </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.GetParameterInfoPathes(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.FindParameterInfo(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.GetParameterInfo(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SaveParametersInfo(System.Guid,System.Collections.Generic.IDictionary{System.String,Terrasoft.Core.Process.ProcessParameterInfo})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.GetParametersMapInfo(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.GetProcessParameterPathes(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.FindParameterValue(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.GetParameterValue(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.ContainsParameterPath(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,Terrasoft.Common.ISerializableObject)">
            <inheritdoc>
            <cref>IProcessParameterStore.SetParameterValue(Guid, string, ISerializableObject)</cref>
            </inheritdoc>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue``1(System.Guid,System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.SetParameterValue(System.Guid,System.String,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.Decimal@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.Guid@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.Int32@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.Enum@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.DateTime@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.Boolean@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.LocalizableString@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,System.Double@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.RemoveParameterValues(System.Guid)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.RemoveParametersInfo(System.Guid)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.TryGetParameterValue(System.Guid,System.String,Terrasoft.Common.ISerializableObject@)">
            <summary>
            Attempts to retrieve the value of a parameter of the <see cref="T:Terrasoft.Common.ISerializableObject"/>
            type on the generated key. The key is formed by the value of the identifier <paramref name="processUId" />
            and the value of the parameter <paramref name="parameterPath" />.
            </summary>
            <param name ="processUId">The process unique identifier.</param>
            <param name ="parameterPath">The path to the value of the parameter to be retrieved.</param>
            <param name ="value">The value of the parameter of the <see cref="T:Terrasoft.Common.ISerializableObject" /> type.</param>
            <returns>
            <c>true</c>, if the store contains the value of the parameter on the generated key;
            otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Terrasoft#Core#Process#IInternalProcessParameterStore#InternalSetParameterValue``1(System.Guid,System.String,``0)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Terrasoft#Core#Process#IInternalProcessParameterStore#SetProcessParameterPaths(System.Guid,System.Collections.Generic.HashSet{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Terrasoft#Core#Process#IInternalProcessParameterStore#SetParameterInfoPaths(System.Guid,System.Collections.Generic.HashSet{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Terrasoft#Core#Process#IInternalProcessParameterStore#InternalSaveParameterInfo(System.Guid,System.String,Terrasoft.Core.Process.ProcessParameterInfo)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Terrasoft#Core#Process#IInternalProcessParameterStore#GetParametersInfo(System.Guid,Terrasoft.Core.Process.BaseProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterMemoryStore.Terrasoft#Core#Process#IInternalProcessParameterStore#RemoveParameterValues(System.Guid,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParametersDataWriter">
            <summary>
            Represents methods for sequentially writing values of the process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/> class. Used to provide
            parameterless constructor for <see cref="T:Terrasoft.Core.Process.ProcessInstanceParametersDataWriter"/>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="processUId">The process UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.UId"/>.</param>
            <param name="schemaParameters">The schema element parameters.</param>
            <param name="parameterStore">The process parameter store.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.IProcessParameterStore,Terrasoft.Core.IDateTimeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="processUId">The process UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.UId"/>.</param>
            <param name="schemaElementUId">The schema element UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.SchemaElementUId"/>.
            </param>
            <param name="schemaElementParameters">The schema element parameters.</param>
            <param name="processParameterStore">The process parameter store.</param>
            <param name="dateTimeProvider"><see cref="T:Terrasoft.Core.IDateTimeProvider"/> instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.#ctor(Terrasoft.Core.Process.ProcessParametersDataWriterSettings,System.Guid,System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessParametersDataWriter"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="processUId">The process UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.UId"/>.</param>
            <param name="schemaElementUId">The schema element UId <see cref="P:Terrasoft.Core.Process.ProcessFlowElement.SchemaElementUId"/>.
            </param>
            <param name="schemaElementParameters">The schema element parameters.</param>
            <param name="processParameterStore">The process parameter store.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources;
            <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.Close">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Guid,System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Decimal,System.Decimal)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Double,System.Double)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Enum,System.Enum)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.DateTime,System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.Type,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,System.IO.Stream)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.String,Terrasoft.Common.DataConverter,System.Object,System.Object)">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteValue(System.Object[])">
            <summary>
            The method is not implemented.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteSerializableObjectValue(System.String,System.Object,System.Object)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteStartObject">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteStartObject(System.String)">
            <summary>
            ######## ###### ########## ######### # ######## ###### # ##### ######.
            </summary>
            <param name="name">### #########.</param>
            <remarks>##### ########## # ##### ###### ### ########## #######, ############ ######## ### ########### 
            ######### ##### ######## # ######### ######## # #####, ############ ## ############## ######### ####### # 
            ########### ############## ######### - ###### ## ########## ###### ###### WriteFinishObject.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteFinishObject">
            <summary>
            ######### ###### ########## #########.
            </summary>
            <remarks>
            ##### ########## ###### ######## ########## #########; #### ## ###### ########### ####### #########
            ########, ########## "############" ### ######## - ## ########## ##### ######## ### ########### ############
            # ######### ##########, ##### - ##### ############ ###### # ######### # ####### ###### (### ###########).
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteStartCollection(System.String)">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParametersDataWriter.WriteFinishCollection">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterValueProvider">
            <summary>
            Class represents methods for evaluating and validating parameter values.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.#ctor">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/> with the specified
            user connection.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.#ctor(Terrasoft.Core.UserConnection,System.Guid,Terrasoft.Core.Process.IProcessParameterStore,Terrasoft.Core.Process.IFlowSchemaGenerator,Terrasoft.Core.Process.IProcessInstanceParameterStore)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessParameterValueProvider"/>.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="processUId">Process identifier.</param>
            <param name="parameterStore">Storage of process parameters.</param>
            <param name="flowSchemaGenerator">Flow schema generator of the process schema.</param>
            <param name="instanceParameterStore">Parameter store for process instance.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.FlowSchemaGenerator">
            <summary>
            Generator of a process scheme.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.InstanceParameterStore">
            <summary>
            Process instance parameter store.
            </summary>
            <value>
            The parameter store for process instance.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.ProcessParameterStore">
            <summary>
            Storage of process parameters.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.GetSysSettingsValue">
            <summary>
            Function of getting system settings.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.GetSysVariableValue">
            <summary>
            Function of getting system variables.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.CreateEntity">
            <summary>
            Function of getting reference object to which process parameter refers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.ConvertExpressionTextToCode">
            <summary>
            Function of converting of expression text in a line of a code.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueProvider.ScriptSession">
            <summary>
            The service which is carrying out expression execution.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.HasExpressionContext(System.String)">
            <summary>
            Checks if key exists in contexts store.
            </summary>
            <param name="contextKey">Key in store.</param>
            <returns><c>true</c>, if key exists in store.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetExpressionContextPropertyValue(System.String,System.String)">
            <summary>
            Gets value from expression context.
            </summary>
            <param name="contextKey">Key in store.</param>
            <param name="propertyName">Key in context element.</param>
            <returns>Value from context.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetExpressionContextPropertyValue(System.String)">
            <summary>
            Gets value from expression context.
            </summary>
            <param name="propertyName">Key in context element.</param>
            <returns>Value from context.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.TryGetObjectListValue(System.Type,System.Object,Terrasoft.Common.ISerializableObject@)">
            <summary>
            Attempts to retrieve the value of the <see cref="T:Terrasoft.Common.ISerializableObject"/> type.
            </summary>
            <param name="type">Type.</param>
            <param name="value">Value to deserialize.</param>
            <param name="objectList">List of values which supports serialization.</param>
            <returns><c>true</c>, if a value is needed to be deserialized; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.EvaluateFormula(Terrasoft.Core.Process.ProcessParameterMapInfo,System.String,System.Object)">
            <summary>
            Evaluates the process formula defined in <paramref name="sourceParameterMapInfo"/> and updates
            parameter <paramref name="resultParameterMetaPath"/> with resulting value or with
            <paramref name="defValue"/> in case if evaluated value is <c>null</c>.
            </summary>
            <param name="sourceParameterMapInfo">The source parameter map information.</param>
            <param name="resultParameterMetaPath">The result parameter meta path.</param>
            <param name="defValue">The default value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.CreateParametersReader(System.Guid,System.Collections.Generic.IEnumerable{Terrasoft.Core.Process.ProcessSchemaParameter},System.Boolean)">
            <summary>
            Creates the parameters data reader instance for specified process element.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <param name="parameters">The parameters to read.</param>
            <param name="isReExecution">Flag that indicates repeated execution of element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetExpressionContext(System.String)">
            <summary>
            Gets context by parameter expression.
            </summary>
            <param name="contextKey">Expression.</param>
            <returns>Current context.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.ValidateExpression(System.String,System.Type)">
            <summary>
            Verifies the correctness of expression. Generates exception when expression is incorrect.
            </summary>
            <param name="expressionText">Expression text.</param>
            <param name="resultType">Expected type of the evaluation result.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetNoneEmptySysSettingsValue(System.String,System.Type)">
            <summary>
            Returns existing value of the system settings and checks whether the value is set.
            </summary>
            <param name="code">Code of the system settings.</param>
            <param name="type">Type of the system settings.</param>
            <returns>Value of the system settings.</returns>
            <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">
            Throws exception if the system settings with <paramref name="code"/> code is not set.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.EvalExpression``1(System.String)">
            <summary>
            Evaluates expression and returns the value with specified type.
            </summary>
            <param name="expressionText">Expression text.</param>
            <returns>Evaluation result.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.EvalExpression(System.String,System.Type)">
            <summary>
            Evaluates expression and returns the value with <see cref="T:System.Object"/> type.
            </summary>
            <param name="expressionText">Expression text.</param>
            <param name="resultType">Expected type of the evaluation result.</param>
            <returns>Evaluation result.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetParameterValue(Terrasoft.Core.Process.ProcessParameterMapInfo,System.Boolean)">
            <summary>
            Returns value of the process parameter.
            </summary>
            <param name="parameterMapInfo"> Data of the process parameter mapping.</param>
            <param name="isReExecution">Flag that indicates repeated execution of element.</param>
            <returns>Value of the process parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter,System.Guid)">
            <summary>
            Returns value of the process parameter.
            </summary>
            <param name="parameter">Process parameter</param>
            <param name="schemaElementUId">Identifier of the process element.</param>
            <returns>Value of the process parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter,System.Guid,System.Boolean)">
            <summary>
            Returns value of the process parameter.
            </summary>
            <param name="parameter">Process parameter</param>
            <param name="schemaElementUId">Identifier of the process element.</param>
            <param name="isReExecution">Flag that indicates repeated execution of element.</param>
            <returns>Value of the process parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueProvider.GetEntityColumnValue(System.Guid,System.String,System.String)">
            <summary>
            Gets the entity column value.
            </summary>
            <param name="entitySchemaUId">The entity schema identifier.</param>
            <param name="recordIdPath">The path to "RecordId" parameter.</param>
            <param name="columnMetaPath">The read column meta path.</param>
            <returns>Entity column value or <see cref="M:Terrasoft.Common.ReflectionUtilities.GetDefValue(System.Type)"/> when entity column
            value is <c>null</c>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            If "RecordId" parameter can not be got.
            </exception>
            <exception cref="T:Terrasoft.Core.ProcessParameterValueException">
            If unable to find entity record with Id specified in "RecordId" parameter.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessParameterValueReceiver`1">
            <summary>
            Receiver for result parameter value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueReceiver`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SingleProcessParameterValueReceive class.
            </summary>
            <param name="requestedParameterName">Requested parameter name.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessParameterValueReceiver`1.ReceivedValue">
            <summary>
            Received value.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessParameterValueReceiver`1.Receive(Terrasoft.Core.Process.BaseProcessSchema,System.Func{Terrasoft.Core.Process.ProcessSchemaParameter,System.Object})">
            <summary>
            Method that receives value.
            </summary>
            <param name="schema">Process schema to receive from.</param>
            <param name="valueGetterFunction">Value getter function.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessPropertyGenerator">
            <summary>
            Class provides methods for generating class properties of the process.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessPropertyGenerator.GetColumnValueFunctionsFieldName">
            <summary>
            The name for the "_getColumnValueFunctions" class field.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessPropertyGenerator.GetColumnValueFunctionsPropertyName">
            <summary>
            The name for the "GetColumnValueFunctions" class property.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessPropertyGenerator.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchemaParameter,Terrasoft.Core.Process.IParametrizedProcessSchemaElement,System.Func{Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.ProcessSchemaParameter,System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessPropertyGenerator"/> class.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="parameter">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/> class.</param>
            <param name="schemaElement">Parameterized schema element.</param>
            <param name="generateParameterFieldValue">Function that generates class field value.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessPropertyGenerator.PropertyDescriptor">
            <summary>
            Gets instance of the <see cref="T:Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyCollectionItem"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessPropertyGenerator.WriteProcessParameterPropertyEntityCollectionDataValueType(System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyCollectionItem},Terrasoft.Core.Process.ProcessSchemaParameter,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Fills the set of the class property items with another class property item.
            </summary>
            <param name="properties">Set of the property items.</param>
            <param name="parameter">Process schema parameter.</param>
            <param name="propertyName">Property name.</param>
            <param name="virtualProperty">Virtual keyword. </param>
            <param name="typeName">Type name of the current class property.</param>
            <param name="fieldName">Name of the class field.</param>
            <param name="isOverride">Indicate whether it is needed to override the current class property.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessPropertyGenerator.Generate">
            <summary>
            Generates class property item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessQueueElement">
            <summary>
            Represents process queue element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessQueueElement.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessQueueElement"/> type.
            </summary>
            <param name="senderName">Name of the sender.</param>
            <param name="previousElementName">Name of the previous element.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessQueueElement.PreviousElementName">
            <summary>
            Gets or sets name of the previous element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessQueueElement.SenderName">
            <summary>
            Gets or sets name of the sender.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchema">
            <summary>
            Represents class for the business process diagram.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchema"/> class.
            </summary>
            <param name="source">The source schema to copy state from.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.DependencyFactory">
            <summary>
            Gets the dependency factory.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.BaseElements">
            <summary>
            Gets the base elements list.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.UseBackgroundMode">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.IsInterpretableExtraPropertyName">
            <summary>
            Gets the name of the "Is Interpretable" extra property.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.UseForceCompileExtraPropertyName">
            <summary>
            Gets the name of the "Use Force Compile" extra property.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessSchema._parentSchemaUId">
            <summary>
            Parent schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.IsInterpretable">
            <summary>
            Gets or sets flag that indicates whether the process is interpretable.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.Enabled">
            <summary>
            Gets whether the process is enabled.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessSchema._compressor">
            <summary>
            Provides methods for compression and unpacking data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.CultureName">
            <summary>
            Culture name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.ChangedMethods">
            <summary>
            Changed methods.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.UseForceCompile">
            <summary>
            Symptom forced compilation process scheme.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.ZipMethodsBody">
            <summary>
            Zipped source of process methods designed by user.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.ZipCompiledMethodsBody">
            <summary>
            Zipped source of process methods in obsolete format for compiled processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.MethodsBody">
            <summary>
            Source of process methods designed by user.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchema.CompiledMethodsBody">
            <summary>
            Source of process methods in obsolete format for compiled processes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.LoadResources">
            <summary>
            Loads schema resources.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetIsEnabled">
            <summary>
            Returns the enabled state.
            </summary>
            <returns>
            <c>true</c> if current schema is enabled; otherwise <c>false</c>
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetStartSignalsMetaInfo">
            <summary>
            Gets the collection of meta information items for each start signal.
            </summary>
            <returns>
            The collection of meta information items for each start signal.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetInvalidElementNames(System.String,System.Collections.Generic.List{System.Guid})">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.Verify">
            <summary>
            Verifies the current schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetBaseSchemaElements">
            <summary>
            Gets the base schema elements.
            </summary>
            <returns>The base elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.RemoveParametersMappingInfo(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Provides bindings delete data parameter values to other business process parameters.
            </summary>
            <param name="parameters">The parameters of the process scheme.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetMethodNames">
            <summary>
            Returns list of methods or scripts names in process schema.
            </summary>
            <returns>List of methods or scripts names in process schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetNeedSourceCodeGeneration">
            <summary>
            Checks if schema needs source code generation.
            </summary>
            <returns><c>true</c> if current schema needs source code generation; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.CheckSchemaContainsScriptTasks">
            <summary>
            Checks if current schema contains script tasks.
            </summary>
            <returns><c>true</c> if current schema contains script tasks or other elements with executable code;
            otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.ActualizeElementsParametersFormat">
            <summary>
            Executes <see cref="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.ActualizeFormatData"/> for each parameter of each flow
            element with <see cref="T:Terrasoft.Core.Process.ProcessSchemaActivity"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
            <returns>A new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchema"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.SynchronizeParameters">
            <summary>
            Synchronizes elements parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.CreateProcess(Terrasoft.Core.UserConnection)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetBaseElements">
            <summary>
            Gets the base elements.
            </summary>
            <value>
            The base elements.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.FindBaseElementByUId(System.Guid)">
            <summary>
            Finds the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetBaseElementByUId(System.Guid,System.Boolean)">
            <summary>
            Gets the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <param name="shoulGetFromParent">Indicates whether to should find in parent elements.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetBaseElementByUId(System.Guid)">
            <summary>
            Gets the element by identifier.
            </summary>
            <param name="uid">The identifier of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.FindBaseElementByName(System.String)">
            <summary>
            Finds the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.GetBaseElementByName(System.String)">
            <summary>
            Gets the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.AssignParentSchema(Terrasoft.Core.Process.ProcessSchema)">
            <Summary>
            For the current scheme built process sets the target schema as a parent.
            </Summary>
            <Param name = "parentSchema"> The circuit built process is set as a parent for the current
            Scheme.</Param>
            <Returns>
            <C> true </C>, if the built-in process of the current scheme as set parental scheme
            <Paramref name = "parentSchema" />; otherwise - <C> false </C>.
            </Returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.ActualizeFormatData">
            <summary>
            Actualizes the schema with the current format of the data.
            <remarks>When format of the schema data changes, it's required to modify this method or
            <see cref="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.ActualizeFormatData"/>.</remarks>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchema.ActualizeFormatData(System.Boolean)">
            <summary>
            Actualizes the schema with the current format of the data.
            <remarks>When format of the schema data changes, it's required to modify this method or
            <see cref="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.ActualizeFormatData"/>.</remarks>
            </summary>
            <param name="convertLocalizableStringToParameter">Flags that indicates convert localilzable
            strings to parameters</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaActivity.Parameters">
            <summary>
            The process schema parameter collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaActivity.ClearParameters">
            <summary>
            Clears values for all parameters of the process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaActivity.RemoveSchemaParameters(System.Collections.Generic.ICollection{Terrasoft.Core.Process.ProcessSchemaParameter})">
            <summary>Removes the schema parameters.</summary>
            <param name="parametersToRemove">The parameters to remove.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaActivity.SynchronizeParameter(Terrasoft.Core.Process.ProcessSchemaParameter,Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>Synchronizes the parameter properties.</summary>
            <param name="target">The target parameter.</param>
            <param name="source">The source parameter.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaActivity.SynchronizeParameters">
            <summary>
            Synchronizes element parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaActivity.ForceGetParameters">
            <summary>
            Forcibly obtains process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaArtifact">
            <summary>
            Represents class for the BPMN artifact element.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElement" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaArtifact.AddToProcessSchema">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaArtifactCollection.#ctor(Terrasoft.Core.Process.IProcessSchemaFlowElementsContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaArtifactCollection"/> class.
            </summary>
            <param name="container">The schema container for all items of this artifact collection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaArtifactCollection.Container">
            <summary>
            Gets the schema container for all items of this artifact collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaArtifactCollection.InsertItem(System.Int32,Terrasoft.Core.Process.ProcessSchemaArtifact)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaBaseElement">
            <summary>
            Represents base class for the BPMN process elements.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElement"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElement" /> type.
            </summary>
            <param name="processSchema">The process schema of the element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.#ctor(Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElement" /> type.
            </summary>
            <param name="baseProcessSchema">The parent process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.#ctor(Terrasoft.Core.Process.ProcessSchemaBaseElement)">
            <summary>
            Creates a cloned instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElement" />.
            </summary>
            <param name="source">The source element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.InitializeProperties">
            <summary>
            Initializes properties of the current instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <summary>
            Creates instance of the process flow element.
            </summary>
            <returns>The process flow element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaBaseElements">
            <summary>
            The class for the base elements of the <see cref="T:Terrasoft.Core.Process.ProcessSchema"/>.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessSchemaElements`1" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElements.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaBaseElements"/> class.
            </summary>
            <param name="schema">The schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElements.FindByUId(System.Guid)">
            <summary>
            Finds the element by identifier.
            </summary>
            <param name="uid">The uid of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaBaseElements.FindByName(System.String)">
            <summary>
            Finds the element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>Found element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaConditionalFlow.CreateSequenceFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            ####### ######### ########## ##### ########## c ########.
            </summary>
            <param name="flowSchema">##### ########.</param>
            <returns>######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> ########## ##### ########## ######-########.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaContentGenerator">
            <summary>
            Provides methods for creating default content in the process schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaContentGenerator.GenerateDefaultEventHandlerSchema(Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.DesignModeEventDescriptor,Terrasoft.Core.UserConnection)">
            <summary>
            Generates the default event handler elements in the process schema.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaContentGenerator.GenerateEventHandler(Terrasoft.Core.Process.ProcessSchema,System.String,System.Boolean)">
            <summary>
            Generates the event handler.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="eventName">Name of the event.</param>
            <param name="isOverride"><c>true</c> if the handler is inherrited and the event should be throwed to the
            base element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaDataObject.ForceGetParameters">
            <summary>
            Forcibly obtains process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaDependencyFactory">
            <summary>
            The class for the <see cref="T:Terrasoft.Core.Process.ProcessSchema"/> dependency factory.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessSchemaDependencyFactory`1" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaDependencyFactory.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaDependencyFactory"/> class.
            </summary>
            <param name="processSchema">The process schema.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaDependencyFactory.FlowSchemaGenerator">
            <summary>
            Gets the flow schema generator.
            </summary>
            <value>
            The flow schema generator.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaDependencyFactory.CreateProcessElementFactory(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Creates the process element factory.
            </summary>
            <param name="process">The process instance.</param>
            <returns>
            The process element factory.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaElementManager">
            <summary>
            The manager of the process schema elements.
            </summary>
            <seealso cref="T:Terrasoft.Core.Manager`2" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaElementManager"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.SequenceFlowUId">
            <summary>
            Gets the sequence flow unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ConditionalFlowUId">
            <summary>
            Gets the conditional flow unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.DefFlowUId">
            <summary>
            Gets the default flow unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.DataAssociationUId">
            <summary>
            Gets the data association unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.MessageFlowUId">
            <summary>
            Gets the message flow unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.StartEventUId">
            <summary>
            Gets the untyped start event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.StartMessageEventUId">
            <summary>
            Gets the start message event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.StartSignalEventUId">
            <summary>
            Gets the start signal event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.StartMessageNonInterruptingEventUId">
            <summary>
            Gets the non-interrupting start message event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.EndEventUId">
            <summary>
            Gets the end event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.TerminateEventUId">
            <summary>
            Gets the terminate event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.StartSignalNonInterruptingEventUId">
            <summary>
            Gets the non-interrupting start signal event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateCatchMessageEventUId">
            <summary>
            Gets the intermediate catch message event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateCatchMessageNonInterruptingEventUId">
            <summary>
            Gets the non-interrupting intermediate catch message event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateThrowMessageEventUId">
            <summary>
            Gets the intermediate throw message event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateThrowSignalEventUId">
            <summary>
            Gets the intermediate throw signal event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateCatchSignalEventUId">
            <summary>
            Gets the intermediate catch signal event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateCatchSignalNonInterruptingEventUId">
            <summary>
            Gets the non-interrupting intermediate catch signal event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateCatchTimerEventUId">
            <summary>
            Gets the intermediate catch timer event unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.TextAnnotationUId">
            <summary>
            Gets the text annotation unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.AssociationUId">
            <summary>
            Gets the association unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.GroupUId">
            <summary>
            Gets the group unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.LaneSetUId">
            <summary>
            Gets the lane set unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.LaneUId">
            <summary>
            Gets the lane unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ParallelGatewayUId">
            <summary>
            Gets the parallel gateway unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.InclusiveGatewayUId">
            <summary>
            Gets the inclusive gateway unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ExclusiveGatewayUId">
            <summary>
            Gets the exclusive gateway unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.EventBasedGatewayUId">
            <summary>
            Gets the event-based gateway unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ParallelEventBasedGatewayUId">
            <summary>
            Gets the parallel event-based gateway unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ExclusiveEventBasedGatewayUId">
            <summary>
            Gets the exclusive event-based gateway unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.SubProcessUId">
            <summary>
            Gets the subprocess unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.EventSubProcessUId">
            <summary>
            Gets the event subprocess unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.UserTaskUId">
            <summary>
            Gets the user task unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ScriptTaskUId">
            <summary>
            Gets the script task unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.FormulaTaskUId">
            <summary>
            Gets the formula task unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.FormulaTaskParametersEditPageUId">
            <summary>
            Gets the formula task parameters edit page unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ConditionExpressionEditPageUId">
            <summary>
            Gets the condition expression edit page unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.LaneUserContextEditPageUId">
            <summary>
            Gets the lane user context edit page unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.ServiceTaskUId">
            <summary>
            Gets the service task unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.WebServiceTaskUId">
            <summary>
            Gets the web service task unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.DataObjectUId">
            <summary>
            Gets the data object unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementManager.IntermediateCatchSignalParametersEditPageSchemaUId">
            <summary>
            Gets the intermediate catch signal parameters edit page schema unique identifier.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.CreateItemCollection">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.InitializeInstance(Terrasoft.Core.Process.ProcessSchemaElementManagerItem)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.InitializeSafeInstance(Terrasoft.Core.Process.ProcessSchemaElementManagerItem)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.Initialize(Terrasoft.Core.ManagerProvider,Terrasoft.Core.ManagerProviderConfigurationElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.GetItems">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.CreateInstanceByUId``1(Terrasoft.Core.Process.ProcessSchema,System.Guid)">
            <summary>
            Creates the instance of the process schema element by its unique identifier.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="processSchema">The process schema.</param>
            <param name="uid">The unique identifier of the process schema element.</param>
            <returns>The instance of the process schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementManager.CreateInstanceByName``1(Terrasoft.Core.Process.ProcessSchema,System.String)">
            <summary>
            Creates the instance of the process schema element by its name.
            </summary>
            <typeparam name="TInstance">The type of the instance.</typeparam>
            <param name="processSchema">The process schema.</param>
            <param name="name">The name of the process schema element.</param>
            <returns>The instance of the process schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementSynchronizer.#ctor(Terrasoft.Core.DB.IQueryExecutor)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaElementSynchronizer.EntitySchemaName">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementSynchronizer.SaveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaElementSynchronizer.RemoveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.InitializeSchemaParameters(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Initializes process parameters of the schema element.
            </summary>
            <param name="parameters">The list of the process element parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.FillParameters(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Fills out the list of the process element parameters.
            </summary>
            <param name="parameters">List of forcibly generated parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.AssignParameterValue(System.String,System.String)">
            <summary>
            Assigns the value of the process parameter.
            </summary>
            <param name="parameterName">Parameter name.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.AssignParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter,System.String)">
            <summary>
            Assigns the value of the process parameter.
            </summary>
            <param name="parameter">Process parameter.</param>
            <param name="value">Parameter value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.CreateParameter(System.Guid,System.String,System.Guid)">
            <summary>
            Creates an instance of the process parameter.
            </summary>
            <param name="uId">Parameter Id.</param>
            <param name="name">Parameter name.</param>
            <param name="dataValueTypeUId">Data value type Id.</param>
            <returns>Returns instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.AddParameterIfNotExists(Terrasoft.Core.Process.ProcessSchemaParameterCollection,System.Guid,System.String,System.Guid)">
            <summary>
            Adds process parameter if it does not exist in the list.
            </summary>
            <param name="parameters">The list of the process parameters.</param>
            <param name="uId">Parameter Id.</param>
            <param name="name">Parameter name.</param>
            <param name="dataValueTypeUId">Data value type Id.</param>
            <returns>Returns instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.GetCaptionRecordIdParameter">
            <summary>
            Returns caption of the RecordId process parameter.
            </summary>
            <returns>Returns instance of the <see cref="T:Terrasoft.Common.LocalizableString"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaEvent.ForceGetParameters">
            <summary>
            Forcibly obtains process parameters.
            </summary>
            <returns>
            Collection of process parameters.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowElementCollection.InsertItem(System.Int32,Terrasoft.Core.Process.ProcessSchemaFlowElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowElementCollection.RemoveItem(System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaFlowElementTypesProvider">
            <summary>
            Represents type provider for mixed item types.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowElementTypesProvider.GetMixedCollectionItemTypes(Terrasoft.Core.Configuration.SysWorkspace,System.Collections.Generic.ICollection{System.Type})">
            <summary>
            Fills collection with items of the <see cref="T:System.Type"/> references.
            </summary>
            <param name="workspace">Not uses.</param>
            <param name="itemTypes">Collection of items with the <see cref="T:System.Type"/> references.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaFlowNode"/> type./>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.#ctor(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaFlowNode"/> class.
            </summary>
            <param name="source">The source node to clone properties.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc cref="M:Terrasoft.Core.Process.ProcessSchemaBaseElement.WriteMetaData(Terrasoft.Common.DataWriter)"/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.Clone">
            <inheritdoc cref="M:Terrasoft.Core.Process.BaseProcessSchemaItem.Clone"/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.GetOutgoingsConditionalFlows(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Returns outgoing conditional sequence flows for the specified element.
            </summary>
            <param name="flowNode">Process element.</param>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.GetOutgoingsConditionalFlows">
            <summary>
            Returns outgoing conditional sequence flows for the current element.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.GetOutgoingsDefaultFlows(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Returns outgoing default sequence flows for the specified element.
            </summary>
            <param name="flowNode">Process element.</param>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFlowNode.GetOutgoingsDefaultFlows">
            <summary>
            Returns outgoing default sequence flows for the current element.
            </summary>
            <remarks>Not implemented.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaFormulaTask"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.#ctor(Terrasoft.Core.Process.ProcessSchemaFormulaTask)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance that inherites the <see cref="T:Terrasoft.Core.Process.ProcessSchemaScriptTask"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaFormulaTask"/> type.
            </summary>
            <param name="processSchema">Schema of the process.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaFormulaTask.ResultParameterMetaPath">
            <summary>
            Gets or sets meta path of the result parameter.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.InitializeProperties">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.InitializeParameters">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.SynchronizeParameters">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaFormulaTask.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaGenerator.WriteProcessProperties(Terrasoft.Core.CodeGeneration.GeneratorContext,Terrasoft.Core.Process.ProcessSchema,System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyCollectionItem})">
            <summary>
            Writes process properties.
            </summary>
            <param name="context">Generator context.</param>
            <param name="processSchema">Process schema.</param>
            <param name="publicProperties">Public properties.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaGeneratorNew.GenerateSchemaSource(Terrasoft.Core.CodeGeneration.SchemaCodeGeneratorResource{Terrasoft.Core.Process.ProcessSchema},Terrasoft.Core.Entities.EntityCollection,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaGeneratorNew.AddSchemaMethods(Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.Process.ProcessSchema,System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.MethodCollectionItem},System.Collections.ObjectModel.Collection{Terrasoft.Core.CodeGeneration.CodeGenerator.MethodCollectionItem})">
            <summary>
            Fills public methods collection with user defined functions.
            </summary>
            <param name="schema">Target schema with methods.</param>
            <param name="parentSchema">Parent schema for target.</param>
            <param name="protectedMethodCollection">Collection with prefilled protected methods.</param>
            <param name="publicMethodCollection">Collection with prefilled public methods.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaGeneratorNew.GenerateProcessMethodBody(Terrasoft.Core.UserConnection,Terrasoft.Core.SchemaMethod,Terrasoft.Core.CodeGeneration.GeneratorTokenVisibility)">
            <summary>
            Generates string representation of process schema method.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="method">Target process schema method.</param>
            <param name="methodVisibility">Visibility of target method.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaGeneratorNew.WriteProcessMethodsWrapper(Terrasoft.Core.CodeGeneration.GeneratorContext,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Generates source code of the "Script task" process element.
            </summary>
            <param name="context">Context of source code generator.</param>
            <param name="processSchema">Process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchMessageEvent.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent">
            <summary>
            Represents class for the "intermediate catch signal event" element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.#ctor(Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Creates a new instance with specified process schema.
            </summary>
            <param name="processSchema">Schema of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.#ctor(Terrasoft.Core.Process.ProcessSchema,System.Boolean)">
            <summary>
            Creates a new instance with specified process schema.
            </summary>
            <param name="processSchema">Schema of the process.</param>
            /// <param name="isNonInterrupting">Flag indicates whether it can be interrupted.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.InitializeSchemaParameters(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Initializes process parameters of the schema element.
            </summary>
            <param name="parameters">The list of the process element parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.FillParameters(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Fills out the list of the process element parameters.
            </summary>
            <param name="parameters">List of forcibly generated parameters.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.InitializeProperties">
            <summary>
            Initializes properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes meta data values.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchSignalEvent.Clone">
            <summary>
            Creates a new instance that is a copy of the current instance.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent">
            <summary>
            Represents process schema intermediate catch timer event element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent"/> class.
            <param name="source">Process intermediate catch timer event source.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent"/> class.
            <param name="processSchema">Process schema instance.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchema,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent"/> class.
            <param name="processSchema">Process schema instance.</param>
            <param name="isNonInterrupting">Non-interupting attribute.</param>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaIntermediateCatchTimerEvent.UseBackgroundMode">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaIntermediateThrowMessageEvent.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <summary>
            Creates flow element.
            </summary>
            <param name="flowSchema">Instance of the <see cref="T:Terrasoft.Core.Process.FlowSchema"/> type.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaManager">
            <summary>
            The schema manager, that works with <see cref="T:Terrasoft.Core.Process.ProcessSchema" /> items.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessSchemaManager`1" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaManager"/> class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManager.ItemTypeName">
            <summary>
            Gets the name of the item type.
            </summary>
            <value>
            The name of the item type.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManager.CanUseUserProperties">
            <summary>
            Gets a value indicating whether this instance can use user properties.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManager.SysSchemaUserPropertyRightsOperations">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManager.ItemCaption">
            <summary>
            The caption for the schema manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManager.ResourceManagerName">
            <summary>
            The name of the resource manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManager.DefEmbeddedProcessSchema">
            <summary>
            Gets or sets the default embedded process schema.
            </summary>
            <value>
            The default embedded process schema.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.CreateInterpretationValidator(Terrasoft.Core.UserConnection)">
            <summary>
            Gets the interpretation validator for process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>
            Interpretation validator instance.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.InitializeDefSchema">
            <summary>
            Initializes the default schema.
            </summary>
            <returns>
            The default schema.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.InternalCreateSchema(System.String,Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Internally creates new manager item.
            </summary>
            <param name="name">The item name.</param>
            <param name="baseSchema">The base schema.</param>
            <param name="userConnection">The user connection.</param>
            <param name="uid">The unique identifier.</param>
            <param name="fromMetaData"><c>true</c> if can use metadata, otherwise - <e>false</e>.</param>
            <returns>
            The new manager item.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.SaveFlowSchema(Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.UserConnection)">
            <summary>
            Saves the flow schema for the given process schema.
            </summary>
            <param name="schema">The process schema.</param>
            <param name="connection">The user connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.CreateItem">
            <summary>
            Creates the item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCopiedSchemaInstance(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>Returns the copied schema instance.</summary>
            <param name="designItem">The design item.</param>
            <returns>Instance of the copied schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetProcessFullTypeName(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Returns process FullTypeName in Assembly.
            </summary>
            <param name="schema">Process schema instance.</param>
            <returns>Process FullTypeName in Assembly.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.ActualizeSchemaMetaData(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            Actualizes the schema meta data.
            </summary>
            <param name="schemas">The schemas.</param>
            <returns>
            The actualized metadata.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.CheckOperationUserRights(Terrasoft.Core.UserConnection)">
            <summary>
            Checks whether the current user can modify the manager elements.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns><c>True</c> if the user can modify the manager elements.</returns>
            <exception cref="T:System.Security.SecurityException">The user doesn't have right to modify the process
            schema manager elements.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCanUseFlowEngine(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Gets a value indicating whether the process can be executed in the interpreted environment according to
            the given process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="processSchema">The process schema.</param>
            <returns><c>true</c> if the process can be executed in the interpreted environment.
            Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCanUseFlowEngine(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Gets a value indicating whether the process can be executed in the interpreted environment according to
            the given base process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The base process schema.</param>
            <returns><c>true</c> if the process can be executed in the interpreted environment.
            Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetCanUseFlowEngine(Terrasoft.Core.UserConnection,Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Gets a value indicating whether the process can be executed in the interpreted environment according to
            the schema manager element.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="item">The item of the process schema manager.</param>
            <returns><c>true</c> if the process can be executed in the interpreted environment.
            Otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Returns the source code generator for the manager schemas.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>
            The source code generator.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <summary>
            Performs manager initialization, using the specified schema manager provider and information from
            application configuration.
            </summary>
            <param name="provider">Schema manager provider.</param>
            <param name="configuration">Configuration information.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetProcessValidationResult(Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.UserConnection)">
            <summary>
            Validates schema for ability to interpretation.
            </summary>
            <param name="process">Process schema.</param>
            <param name="userConnection">User connection.</param>
            <returns>Results of analyzes for ability to interpretation.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetIsProcessExistsInAssembly(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Returns flag that indicates if process compiled at least once and exists in assembly.
            </summary>
            <returns>Flag that indicates if process compiled at least once and exists in assembly.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.CreateDefEventHandlerSchema(Terrasoft.Core.Process.ProcessBasedSchema,Terrasoft.Core.DesignModeEventDescriptor)">
            <summary>
            Creates the default event handler embedded process schema.
            </summary>
            <param name="ownerSchema">The owner schema.</param>
            <param name="eventDescriptor">The event descriptor.</param>
            <returns>The embedded process schema with the default event handler.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetItemsFromMetaDataByParentId(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Gets the items from meta data by the parent schema identifier.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="parentSchemaId">The parent schema identifier.</param>
            <returns>The manager item instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.AddEventHandler(Terrasoft.Core.Process.ProcessSchema,System.String)">
            <summary>
            Adds the event handler for the given event in the given process schema.
            Event never be throw to the base element.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.AddEventHandler(Terrasoft.Core.Process.ProcessSchema,System.String,System.Boolean)">
            <summary>
            Adds the event handler for the given event in the given process schema.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="eventName">Name of the event.</param>
            <param name="isOverride"><c>true</c> if the handler is inherited and the event should be throw to the
            base element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.BuildDefEventHandlerSchemaProperties(Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.DesignModeEventDescriptor)">
            <summary>
            Prepares the default event handler schema properties.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="eventDescriptor">The event descriptor.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.SaveDesignedSchema(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Saves the designed process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="processSchema">The process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.Save(Terrasoft.Core.UserConnection,Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema},System.Boolean)">
            <summary>
            Saves the process schema instance of the specified item.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="managerItem">The manager item.</param>
            <param name="isNewSchema"><c>true</c> if it is a new schema, otherwise - <c>false</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.LoadDesignedSchema(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            Loads the designed process schema from the database.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schemaUId">The schema unique identifier.</param>
            <returns>The instance of the process schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetMaxVersionByParentUId(System.Guid)">
            <summary>
            Gets the maximum version by parent schema unique identifier.
            </summary>
            <param name="parentUId">The parent schema unique identifier.</param>
            <returns>The version number.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetVersion(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Gets the version of the given manager item.
            </summary>
            <param name="schemaManagerItem">The schema manager item.</param>
            <returns>The version number.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.GetMaxVersionSchemaManagerItemByParentUId(System.Guid)">
            <summary>
            Gets the maximum version schema manager item by parent schema unique identifier.
            </summary>
            <param name="parentUId">The parent schema unique identifier.</param>
            <returns>The manager item, that has the maximum version number.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.ConvertProcessSchema(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Converts the old format process schema item to the new format.
            </summary>
            <param name="designedItem">The process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.ConvertPolylinePointPositions(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Performs convert for the process flow elements coordinates.
            </summary>
            <param name="designedItem">The process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManager.CopyProcessSchema(Terrasoft.Core.UserConnection,System.Guid,System.String,System.String,System.Guid)">
            <summary>
            Copies the process schema.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="sourceSchemaUId">The unique identifier of the source schema.</param>
            <param name="name">The name of the new schema.</param>
            <param name="caption">The caption of the new schema.</param>
            <param name="packageUId">The package identifier of the new schema.</param>
            <returns>The new process schema instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaManagerItem">
            <summary>
            Process schema manager item.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.BaseProcessSchemaManagerItem`1" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManagerItem.#ctor(Terrasoft.Core.SchemaManager{Terrasoft.Core.Process.ProcessSchema})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="manager">Schema manager in which this instance is created
            <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManagerItem.#ctor(Terrasoft.Core.ISchemaManagerItem{Terrasoft.Core.Process.ProcessSchema},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
            <param name="isShallowClone">
            Flag that indicates whether the item's instance will not be cloned too.
            </param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManagerItem.ForceUseInstanceFromMetaData">
            <summary>
            Gets or sets a value indicating whether schema instance should be loaded from meta data.
            </summary>
            <value>
            <c>true</c> if schema instance should be loaded from meta data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaManagerItem.UseInstanceFromMetaData">
            <summary>
            Returns a value indicating whether the instance should be initialized from meta data.
            </summary>
            <value>
            <c>true</c> if instance should be initialized from meta data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManagerItem.Verify">
            <summary>
            Verifies this item.
            </summary>
            <exception cref="T:Terrasoft.Core.ProcessSchemaNotValidException"></exception>
            <exception cref="T:Terrasoft.Core.ProcessSchemaIsNotPublishedException"></exception>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManagerItem.GetIsEnabled">
            <summary>
            Returns <c>true</c> if current instance is enabled, otherwise <c>false</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManagerItem.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>Cloned instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaManagerItem.CloneShallow">
            <summary>
            Performs the shallow clone of this instance.
            </summary>
            <returns>Shallow clone of this instance.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection">
            <summary>
            Represent collection on nested parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection.#ctor">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection.#ctor(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection"/>.
            </summary>
            <param name="collection">Source collection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection.InsertItem(System.Int32,Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> 
            at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">
            The object to insert. The value can be <see langword="null" /> for reference types.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaNestedParameterCollection.SetItem(System.Int32,Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>Replaces the element at the specified index.</summary>
            <param name="index">The zero-based index of the element to replace.</param>
            <param name="item">
            The new value for the element at the specified index. 
            The value can be <see langword="null" /> for reference types.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameter.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/>.
            </summary>
            <param name="dataValueTypeUId">UId of the data value type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameter.#ctor(Terrasoft.Core.DataValueType)">
            <summary>
            Initializes a new instance of the class <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/>.
            </summary>
            <param name="dataValueType">An instance of <see cref="P:Terrasoft.Core.Process.ProcessSchemaParameter.DataValueType"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameter.#ctor(Terrasoft.Core.SchemaLocalizableString)">
            <summary>
            Initializes a new instance of the localizable <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameter"/> class
            using the specified localizable string.
            </summary>
            <param name="source">Localizable string.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameter.IsDynamic">
            <summary>
            Gets flag that indicates whether the parameter is dynamic.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameter.PropertyName">
            <summary>
            Gets or sets string that represents a name of the property.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameter.IsNested">
            <summary>
            Gets or sets flag than indicates whether the parameter is nested.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameter.ParentMetaSchema">
            <summary>
            Gets or sets parent meta schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameter.Tag">
            <summary>
            Gets or sets some user-specific text data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameter.ItemProperties">
            <summary>
            Gets or sets nested parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameter.GetIsFormulaValue">
            <summary>
            Indicates that <see cref="P:Terrasoft.Core.Process.ProcessSchemaParameter.SourceValue"/> represents formula expression.
            </summary>
            <returns><c>True</c>, if <see cref="P:Terrasoft.Core.Process.ProcessSchemaParameter.SourceValue"/> is formula expression. Otherwise - false.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameter.GetIsLocalizableValueType">
            <summary>
            Indicates the value has localizable type.
            </summary>
            <returns>If true, the value should be localized. Otherwise - false.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameter.TryGetLocalizableCaption(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Tries to add the caption to collection. Adds caption if parameter is inherited and caption has value.
            </summary>
            <param name="values">Localizable values list.</param>
            <param name="includeInherited">Flag that indicates include inherited resources or not.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameterCollection.GetParametersWithNested">
            <summary>
            Returns parameters with theirs nested.
            </summary>
            <returns>Collection with all parameters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.#ctor(Terrasoft.Core.Process.ProcessSchemaParameterValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaParameterValue"/> class by the given source
            instance.
            </summary>
            <param name="source">The source instance.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameterValue.MetaDataValue">
            <summary>
            The parameter value that is stored in the metadata.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameterValue.IsFormula">
            <summary>
            Gets a value indicating whether this instance is formula.
            </summary>
            <value>
            <c>true</c> if this instance is formula; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameterValue.DefValue">
            <summary>
            Gets or sets the value by default.
            </summary>
            <value>
            The default value.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParameterValue.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessSchemaParameterValue._localizableCollectionValue">
            <summary>Gets or sets collection of localizable values.</summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.GetRestoredComplexLocalizableValue">
            <summary>
            Returns the restored complex localizable value.
            </summary>
            <returns>Restored complex localizable value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.GetDataValueTypeManager">
            <summary>
            Gets the <see cref="T:Terrasoft.Core.DataValueTypeManager"/> instance.
            </summary>
            <returns>The instance of <see cref="T:Terrasoft.Core.DataValueTypeManager"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParameterValue.ActualizeFormatData">
            <summary>
            Actualizes parameter value with the current format of the data.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode">
            <summary>
            Represents process schema parametrized flow node class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.#ctor">
            <summary>
            Initializes the new instance of ProcessSchemaParametrizedFlowNode class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.#ctor(Terrasoft.Core.Process.ProcessSchemaFlowNode)">
            <summary>
            Initializes the new instance of ProcessSchemaParametrizedFlowNode class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes the new instance of ProcessSchemaParametrizedFlowNode class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.Parameters">
            <summary>
            The process schema parameter collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.InitializeLocalizableValues(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>
            Initializes resources from the specified storage from the specified manager and resorce group name.
            </summary>
            <param name="storage">Resource storage.</param>
            <param name="resourceManagerName">Resource manager name.</param>
            <param name="resourceGroupName">Resource group name.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            Returns localizable values list.
            </summary>
            <param name="values">Localizable values list.</param>
            <param name="includeInherited">Flag that indicates include inherited resources or not.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaParametrizedFlowNode.LoadLocalizableValues">
            <summary>
            Loads localizable value.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessSchemaScriptTask.BodyParameterName">
            <summary>
            The constant value that indicates the "Body" parameter name.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaScriptTask"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.#ctor(Terrasoft.Core.Process.ProcessSchemaScriptTask)">
            <summary>
            Creates a new instance that is a copy of another instance.
            </summary>
            <param name="source">Instance that inherits the <see cref="T:Terrasoft.Core.Process.ProcessSchemaTask"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaScriptTask"/> type.
            </summary>
            <param name="processSchema">Schema of the process.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaScriptTask.BodyParameter">
            <summary>
            Gets the script task body parameter.
            </summary>
            <value>
            The script task body parameter.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaScriptTask.ZipBody">
            <summary>
            Sets the compressed body of the script.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaScriptTask.Body">
            <summary>
            Gets or sets body of the script.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.InitializeParameters">
            <summary>
            Initializes parameters.
            </summary>
            <returns>Parameters of the current schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.WriteUIData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaScriptTask.ForceGetParameters">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaSequenceFlow">
            <summary>
            Represents class for the BPMN sequence flow.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.SourceRef">
            <summary>
            Gets or sets the source node of the flow.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.SourceRefUId">
            <summary>
            Gets or sets the unique identifier of the flow's source node.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.TargetRef">
            <summary>
            Gets or sets the target node of the flow.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.TargetRefUId">
            <summary>
            Gets or sets the unique identifier of the flow's target node.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.GetContainerType">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.ApplyUIDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.CreateSequenceFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.AddToProcessSchema">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.AddToProcessSchema(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.WriteUIData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.WriteUIPropertyData(Terrasoft.Common.DataWriter,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlow.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSequenceFlowCollection.InsertItem(System.Int32,Terrasoft.Core.Process.ProcessSchemaSequenceFlow)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartMessageEvent.CreateFlowElement(Terrasoft.Core.Process.FlowSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaStartSignalEvent">
            <summary>
            Represents class for the "start signal event" element.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessSchemaStartSignalEvent.EntitySignalMetaPropertyName">
            <summary>
            Meta name of the EntitySignal property.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartSignalEvent.InitializeSchemaParameters(Terrasoft.Core.Process.ProcessSchemaParameterCollection)">
            <summary>
            Initializes process parameters of the schema element.
            </summary>
            <param name="parameters">The list of the process element parameters.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.StartTimerEventExpresionType">
            <summary>
            Type of expression.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TimerMisfireInstructionType">
            <summary>
            Type of misfire instruction.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent">
            <summary>
            Represents process schema start timer event element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchemaStartTimerEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent"/> class.
            <param name="source">Process start timer event source.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent"/> class.
            <param name="processSchema">Process schema instance.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchema,System.Boolean,System.String,Terrasoft.Core.Process.TimerMisfireInstructionType,Terrasoft.Core.Process.StartTimerEventExpresionType,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent"/> class.
            <param name="processSchema">Process schema instance.</param>
            <param name="isInterrupting">Interupting attribute.</param>
            <param name="cronExpression">Cron expression.</param>
            <param name="misfireInstruction">Type of misfire instruction.</param>
            <param name="expressionType">Type of expression.</param>
            <param name="startDateTime">The start date of the job scheduling</param>
            <param name="endDateTime">The end date of the the job scheduling</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.#ctor(Terrasoft.Core.Process.ProcessSchema,Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent"/> class.
            <param name="processSchema">Process schema instance.</param>
            <param name="parameters">Parameters of timer.</param>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.CronExpression">
            <summary>
            Cron expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.MisfireInstruction">
            <summary>
            Type of misfire instruction
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.ExpressionType">
            <summary>
            Type of expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.StartDateTime">
            <summary>
            The start date of the job scheduling.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.EndDateTime">
            <summary>
            The end date of the the job scheduling.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.TimeZoneOffset">
            <summary>
            The time zone offset of the the job scheduling.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.GetStartDateTime">
            <summary>
            The start date of the job scheduling .
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.GetEndDateTime">
            <summary>
            The end date of the the job scheduling.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            Apply meta data value.
            </summary>
            <param name="reader">DataReader item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            Write meta data values.
            </summary>
            <param name="writer">DataWriter item.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaStartTimerEvent.Clone">
            <summary>
            Returns copy of ProcessSchemaStartTimerEvent.
            </summary>
            <returns>ProcessSchemaStartTimerEvent copy.</returns>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.CronExpression">
            <summary>
            Cron expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.MisfireInstruction">
            <summary>
            Type of misfire instruction.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.ExpressionType">
            <summary>
            Type of expression.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.StartDateTime">
            <summary>
            The start date of the job scheduling.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.EndDateTime">
            <summary>
            The end date of the the job scheduling.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.TimeZoneOffset">
            <summary>
            The time zone offset of the the job scheduling.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaStartTimerEventParameters.IsInterrupting">
            <summary>
            Interrupting attribute.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaSubProcess.SynchronizeParameters">
            <summary>
            Synchronizes elements parameters.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaUserTask">
            <summary>
            Represents class for the user task in the business process diagram.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.#ctor(Terrasoft.Core.Process.ProcessSchemaUserTask)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask"/> class.
            </summary>
            <param name="source">The source schema to copy state from.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.#ctor(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask"/> class.
            </summary>
            <param name="processSchema">The process schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.#ctor(Terrasoft.Core.Process.ProcessSchema,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaUserTask"/> class.
            </summary>
            <param name="processSchema">The process schema.</param>
            <param name="taskSchemaUId">The user task schema unique identifier.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.ProcessUserTaskSchemaManagerName">
            <summary>
            Gets the name of the process task schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.SchemaUId">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.EntitySchemaUId">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.ImageUri">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.TaskSchemaManagerName">
            <summary>
            Gets or sets the name of the process task schema manager. Gets \"ProcessUserTaskSchemaManager\" by default.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.ZipAfterActivitySaveScript">
            <summary>
            Gets or sets byte array that contains compressed program code of the \"After activity save\" script.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaUserTask.AfterActivitySaveScript">
            <summary>
            Gets or sets program code of the \"After activity save\" script.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.FindSchemaParameterByUId(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.GetSchemaParameters">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.InitializeProperties">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.SynchronizeParameters">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.WriteUIData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaUserTask.WriteUIPropertyData(Terrasoft.Common.DataWriter,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessSchemaWebService">
            <summary>
            Represents class for the web service element of the business process diagram.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.ProcessSchemaActivity" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaWebService"/> type.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.#ctor(Terrasoft.Core.Process.ProcessSchemaWebService)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessSchemaWebService"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaWebService.ServiceSchemaUId">
            <summary>
            Gets or sets the web service schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaWebService.MethodName">
            <summary>
            Gets or sets the name of the web service method.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessSchemaWebService.Timeout">
            <summary>
            Gets or sets service request timeout in milliseconds.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.FindSchemaParameterByUId(System.Guid)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.GetSchemaParameters">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.CreateProcessFlowElement(Terrasoft.Core.UserConnection)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.SynchronizeParameters">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.Clone">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessSchemaWebService.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc/>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessScriptTask">
            <summary>
            A Script Task is a process element. When a process execution arrives at the Script Task,
            the corresponding script is executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessScriptTask.Script">
            <summary>
            Gets or sets function to execute.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessScriptTask.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessScriptTask.GetCanRegisterElementData">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessScriptTask.Execute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessScriptTask.Execute(Terrasoft.Core.Process.ProcessExecutingContext,System.Func{Terrasoft.Core.Process.ProcessExecutingContext,System.Boolean})">
            <summary>
            Executes Script Task element.
            </summary>
            <param name="context">The execution context.</param>
            <param name="internalExecute">The function to execute.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessServiceProvider">
            <summary>
            Represents a class that is responsible for initializing components that are needed to execute processes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessServiceProvider.TaskQueueManager">
            <summary>
            Gets the task queue manager for the process elements executing.
            </summary>
            <value>
            The task queue manager.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessServiceProvider.InternalFlowEngineStateService">
            <summary>
            The flow engine state service.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessServiceProvider.Terrasoft#Core#Process#IProcessServiceProvider#InternalFlowEngineStateService">
            <summary>
            The flow engine state service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.Execute(Terrasoft.Core.UserConnection,System.Action)">
            <summary>
            Start service, executes process action and after stop service <see cref="T:Terrasoft.Core.Process.ProcessServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.Subscribe(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            Subscribes to an event of the execution for the process to send the the message queue.
            </summary>
            <returns>The process component set.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.StartServices``1(``0,Terrasoft.Core.Process.IMessageQueueManager)">
            <summary>
            Starts the services.
            </summary>
            <param name="stateService">The state service.</param>
            <param name="queueManager">The queue manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.GetInstance">
            <summary>
            Initializes a single instance of the <see cref="T:Terrasoft.Core.Process.ProcessServiceProvider"/> type for the application.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.StartServices(System.Func{System.String,Terrasoft.Core.UserConnection})">
            <summary>
            Starts all the necessary services for the execution of processes.
            </summary>
            <param name="userConnectionFactory">The user connection factory method.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.StopServices">
            <summary>
            Stops running services and frees up resources.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.CreateProcessComponentSet(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema)">
            <summary>
            Creates component set base on the process schema. Prepares it for work with messages queue.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The process schema.</param>
            <returns>The process component set.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessServiceProvider.CreateProcessComponentSet(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.BaseProcessSchema,Terrasoft.Core.Process.IProcessParameterStore)">
            <summary>
            Creates component set base on the process schema. Prepares it for work with messages queue.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="schema">The process schema.</param>
            <param name="parameterStore">The store of process paramater values.</param>
            <returns>The process component set.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessStartSignalEvent.ApplyPropertiesDataValues(Terrasoft.Common.DataReader)">
            <summary>
            Applies meta data values.
            </summary>
            <param name="reader">Instance of the <see cref="T:Terrasoft.Common.DataReader"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessStartSignalEvent.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessStartSignalEvent.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessStartSignalEvent.WritePropertiesDataToOwner(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessStartSignalEvent.WritePropertiesDataToDB(Terrasoft.Core.UserConnection)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessThrowSignalEvent.Execute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current flow element.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied. Otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessTracer">
            <summary>
            Represents fake process tracer class, that do not trace process executing.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessTracer.Empty">
            <summary>
            Empty process tracer instance, that do not trace process executing.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessUserTask">
            <summary>
            A User Task is a process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessUserTask"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTask.SchemaManagerName">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTask.SchemaManager">
            <inheritdoc />
        </member>
        <member name="E:Terrasoft.Core.Process.ProcessUserTask.AfterActivitySave">
            <summary>
            Occurs after Activity saving.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.AfterInternalExecute">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.OnExecuted(Terrasoft.Core.Process.ProcessActivityAfterEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.OnCanceled">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.AfterActivitySaveScriptExecute(Terrasoft.Core.Entities.Entity)">
            <summary>
            Gets or sets function to execute after Activity saving.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.Get``1(System.String)">
            <summary>
            Gets the property value by specified path.
            </summary>
            <typeparam name="T">Type of the property value.</typeparam>
            <param name="propertyPath">The property path.</param>
            <returns>The property value</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.Set``1(System.String,``0)">
            <summary>
            Sets the property value by specified path.
            </summary>
            <typeparam name="T">Type of the property value.</typeparam>
            <param name="propertyPath">The property path.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.InternalInteractWithUser(Terrasoft.Core.Process.ProcessExecutingContext,System.Boolean,System.Boolean)">
            <summary>
            Executes user interaction for current user task.
            </summary>
            <param name="context">Process executing context.</param>
            <param name="skipPerformerCheck">Flag indicates that forces interaction for any performer.</param>
            <param name="showExecutionPage">Flag indicates that execution page should be displayed.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.GetPropertiesData(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.GetParameterValue(System.String)">
            <summary>
            Gets the parameter value.
            </summary>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.GetRuntimeCaption">
            <summary>
            Returns runtime caption value for current user task.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTask.InteractWithUser(Terrasoft.Core.Process.ProcessExecutingContext,System.Boolean,System.Boolean)">
            <summary>
            Executes user interaction for current user task.
            </summary>
            <param name="context">Process executing context.</param>
            <param name="skipPerformerCheck">Flag indicates that forces interaction for any performer.</param>
            <param name="showExecutionPage">Flag indicates that execution page should be displayed.</param>
        </member>
        <member name="F:Terrasoft.Core.Process.ProcessUserTaskSchema.DesignSchemaMethods">
            <summary>
            List of design schema methods names.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.#ctor(Terrasoft.Core.Process.ProcessUserTaskSchemaManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessUserTaskSchema"/> class.
            </summary>
            <param name="processUserTaskSchemaManager">The process User Task schema manager.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.#ctor(Terrasoft.Core.Process.ProcessUserTaskSchema)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessUserTaskSchema"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.BaseSchemaUId">
            <summary>
            The base schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.Manager">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.ProcessUserTaskSchemaManager">
            <summary>
            Gets the process User Task schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.ParentSchemaUId">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.ParentSchema">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessUserTaskSchema.IsPartial">
            <summary>
            Flag that indicates if user task is partial class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.InitializeProperties">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.InitializeLocalizableValues(System.String,System.String)">
            <inheritdoc cref="T:Terrasoft.Core.Process.BaseProcessUserTaskSchema" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <inheritdoc cref="T:Terrasoft.Core.Process.BaseProcessUserTaskSchema" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.LoadLocalizableValues">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.Clone">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.InitializeCreatedInSchemaUId">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.InitializeModifiedInSchemaUId">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.InitializePrimaryInfo">
            <inheritdoc cref="T:Terrasoft.Core.Process.BaseProcessUserTaskSchema" />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.AssignParentSchema(Terrasoft.Core.Process.ProcessUserTaskSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.SynchronizeDynamicParameters(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessUserTaskSchema)">
            <summary>
            Synchronizes dynamic parameters.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="target">Target user task schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchema.SynchronizeParameters(Terrasoft.Core.Process.ProcessSchemaUserTask)">
            <summary>
            Synchronizes entity columns parameters.
            </summary>
            <param name="schemaElement">Schema element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchemaManager.OnItemSaved(Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs)">
            <summary>
            Handles after item is saved.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchemaManager.Clear">
            <summary>
            ####### ### ######## ## ######### ######### #########, ##### #### ####### ###
            <see cref="P:Terrasoft.Core.Process.ProcessUserTaskSchemaManager.MetaDataContractCacheGroupName"/>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchemaManager.AddDefaultMethods(Terrasoft.Core.Process.ProcessUserTaskSchema)">
            <summary>
            Adds default methods to the spicified schema.
            </summary>
            <param name="schema">User task schema.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchemaManagerExtension.RemoveContractMetaDataFromCache(Terrasoft.Core.Process.ProcessUserTaskSchemaManager,Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            Removes process user task contract from cache.
            </summary>
            <param name="source">User task schema.</param>
            <param name="userConnection">User connection.</param>
            <param name="packageUId">Package identifier.</param>
            <param name="schemaUId">Schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessUserTaskSchemaManagerExtension.ClearContractMetaDataCache(Terrasoft.Core.Process.ProcessUserTaskSchemaManager,Terrasoft.Core.UserConnection)">
            <summary>
            Clears process user task contracts cache.
            </summary>
            <param name="source">User task schema.</param>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.ExecutionMode">
            <summary>
            ###### ########## ##### ######-########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionMode.Compile">
            <summary>
            ##### ##########, ####### ####### ######### # ########## ######### ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionMode.Interpretable">
            <summary>
            ##### ##########, ####### ## ####### ######### # ########## ######### ####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ExecutionMode.CompileInterpretable">
            <summary>
            ##### ##########, ####### ####### ######### # ########## ######### #### ###### ### ####### ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessValidationResult">
            <summary>
            Represents the results of the analysis on the possibility of interpreting the process diagram.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.HasErrors">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.HasErrors"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.IsInterpretable">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.IsInterpretable"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.ErrorMessages">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.ErrorMessages"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.ValidatorInfo">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.ValidatorInfo"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.Message">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.Message"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.MessageType">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.MessageType"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.ExecutionMode">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.ExecutionMode"/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessValidationResult.Results">
            <inheritdoc cref="P:Terrasoft.Core.Process.IProcessValidationResult.Results"/>
        </member>
        <member name="T:Terrasoft.Core.Process.ProcessWebService">
            <summary>
            Represents a process web service.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessWebService.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.IWebServiceUserTask)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessWebService"/> type.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="webServiceUserTask">The web service user task.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessWebService.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessWebService"/> type.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessWebService.Schema">
            <inheritdoc/>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessWebService.ServiceSchemaUId">
            <summary>
            Gets or sets the web service schema unique identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessWebService.MethodName">
            <summary>
            Gets or sets the name of the web service method.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ProcessWebService.Timeout">
            <summary>
            Gets or sets service request timeout.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ProcessWebService.InternalExecute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Provides main execution method of the web service user task.
            </summary>
            <param name="context">The execution context.</param>
            <returns></returns>
        </member>
        <member name="T:Terrasoft.Core.Process.QueueEmulator">
            <summary>
            ############ #####, ####### ######### ###### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.QueueEmulator.FlowEngineInstance">
            <summary>
            ############## # ########## ######### <see cref="T:Terrasoft.Core.Process.QueueEmulatorItem"/>
            ### ####### # ######## ## ####### ########## ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.QueueEmulator.TaskExecutorInstance">
            <summary>
            ############## # ########## ######### <see cref="T:Terrasoft.Core.Process.QueueEmulatorItem"/>
            ### ####### # ######## ## ####### ########## ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.QueueEmulator.IsExternalQueue">
            <summary>
            ####### ####, ### ####### ###### ### ########### ###### ######### ######-#########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulator.Dispose">
            <summary>
            ########### #######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.QueueEmulatorItem">
            <summary>
            ############ #####, ####### ######### ########### ####### # ########### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.#ctor(System.Action{Terrasoft.Core.Process.TaskServiceQueueItem})">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/> # ######## ########## ######## #########.
            </summary>
            <param name="sendMessageDel">########, ########### ######## #########.</param>
        </member>
        <member name="E:Terrasoft.Core.Process.QueueEmulatorItem.Error">
            <summary>
            ####### ############ # ########## ############# ###### ### ######## ### ######### #########.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.Process.QueueEmulatorItem.ReceiveMessage">
            <summary>
            #######, ########### ### ######### ###### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.InvokeMessage(Terrasoft.Core.Process.TaskServiceQueueItem)">
            <summary>
            ######### ########## ######### ## #######.
            </summary>
            <param name="message">######### <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/></param>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.Dispose">
            <summary>
            ########### #######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.QueueEmulatorItem.Send(Terrasoft.Core.Process.TaskServiceQueueItem,System.Byte)">
            <summary>
            ######### ######## #########.
            </summary>
            <param name="message">######### <see cref="T:Terrasoft.Core.Process.TaskServiceQueueItem"/>.</param>
            <param name="priority">
            ######### ######## #########. ######## ## ######### - 0 (######### ## ############).
            </param>
        </member>
        <member name="T:Terrasoft.Core.Process.ScriptEngine">
            <summary>
            #####, ########### ######## ###### ### ########## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.ScriptEngine.ReplaceCreateSessionDelegate">
            <summary>
            ######## ########## ######## ###### ########## ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.ScriptEngine.CreateSession">
            <summary>
            ########## ######### ###### ### ########## #########.
            </summary>
            <returns>######### ###### ### ########## #########.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            #### <see cref="T:Terrasoft.Core.Factories.ClassFactory"/> ## #### ########
            ######### ###### ## ########## <see cref="T:Terrasoft.Core.Process.IScriptSession"/>.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.Process.SequenceFlow">
            <summary>
            ############ ########## ######### ######-########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.#ctor">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SequenceFlow.TargetFlowElementUId">
            <summary>
            ############# ########, # ####### ######## ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SequenceFlow.SourceFlowElementUId">
            <summary>
            ############# ########, ## ######## ####### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SequenceFlow.ExpressionText">
            <summary>
            ##### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.WriteProperties(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataWriter">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ###### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.ReadProperties(Terrasoft.Common.DataReader)">
            <summary>
            ######### ###### #######.
            </summary>
            <param name="dataReader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ####### #######.
            </param>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.Equals(System.Object)">
            <summary>
            ##########, ##### ## ###### ######### <see cref="T:Terrasoft.Core.Process.SequenceFlow"/> # ######## ######### 
            <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">######### <see cref="T:System.Object"/>, ####### ############ # ####### ########### 
            <see cref="T:Terrasoft.Core.Process.SequenceFlow"/>.</param>
            <returns><c>true</c>, #### ############ ####### #########; ##### — <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.GetHashCode">
            <summary>
            ########## ###-### #######.
            </summary>
            <returns>###-### #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SequenceFlow.CheckCondition(System.Guid)">
            <summary>
            ##### ## ##########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.StartElementOptions">
            <summary>
            Represents start element options.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.StartElementOptions.#ctor(System.Guid,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.StartElementOptions"/> type.
            </summary>
            <param name="elementUId">Unique identifier of the schema element.</param>
            <param name="showExecutionPage">Determines whether the current process can show execution pages</param>
        </member>
        <member name="P:Terrasoft.Core.Process.StartElementOptions.SchemaElementUId">
            <summary>
            Gets unique identifier of the schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.StartElementOptions.ShowExecutionPage">
            <summary>
            Gets value that determines whether the current process can show execution pages.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.StartProcessData">
            <summary>
            Represents the data needed to start the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.StartProcessData.ProcessComponentSet">
            <summary>
            Instance of <see cref="P:Terrasoft.Core.Process.StartProcessData.ProcessComponentSet"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.StartProcessData.FlowSchema">
            <summary>
            Instance of <see cref="P:Terrasoft.Core.Process.StartProcessData.FlowSchema"/>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.StartProcessOptions">
            <summary>
            Represents start process options.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.StartProcessOptions.#ctor(System.Boolean,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.StartProcessOptions"/> type.
            </summary>
            <param name="showExecutionPage">Determines whether the process can show execution pages.</param>
            <param name="parameterValues">Initial parameter values, where key is process parameter name and value is
            serialized parameter value.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.StartProcessOptions.ShowExecutionPage">
            <summary>
            Gets value that determines whether the current process could shows execution pages.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.StartProcessOptions.ParameterValues">
            <summary>
            Gets initial parameter values, where key is process parameter name and value is
            serialized parameter value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.StartSignalOptions">
            <summary>
            Defines options used to run process from specified start signal.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.StartElementOptions" />
        </member>
        <member name="M:Terrasoft.Core.Process.StartSignalOptions.#ctor(System.Guid,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.StartSignalOptions"/> class with displaying execution page by 
            default.
            </summary>
            <param name="elementUId">The signal schema element identifier.</param>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.StartSignalOptions.#ctor(System.Guid,System.Guid,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.StartSignalOptions"/> class.
            </summary>
            <param name="elementUId">The signal schema element identifier.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="showExecutionPage">if set to <c>true</c> execution pages will be displayed.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.StartSignalOptions.EntityId">
            <summary>Returns the entity identifier.</summary>
        </member>
        <member name="M:Terrasoft.Core.Process.StartTimerInProcessMetaDataSynchronizer.#ctor(Terrasoft.Core.DB.IQueryExecutor)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.StartTimerInProcessMetaDataSynchronizer.EntitySchemaName">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.StartTimerInProcessMetaDataSynchronizer.SaveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.StartTimerInProcessMetaDataSynchronizer.RemoveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.StartTimerScheduleSynchronizer">
            <summary>
            Represents methods to manage startTimerEvent scheduler jobs.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.StartTimerScheduleSynchronizer.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.StartTimerScheduleSynchronizer"/> class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.StartTimerScheduleSynchronizer.GetTimerEventsInfo(Terrasoft.Core.Process.ProcessSchema)">
            <summary>
            Returns collection of timer event info.
            </summary>
            <param name="schema">Instance of <see cref="T:Terrasoft.Core.Process.ProcessSchema"/>.</param>
            <returns>Collection of timer event info.</returns>
        </member>
        <member name="T:Terrasoft.Core.Process.SubProcessClassGenerator">
            <summary>
            Class provides methods for generating class of the subprocess.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessClassGenerator.#ctor(Terrasoft.Core.CodeGeneration.GeneratorContext,Terrasoft.Core.Process.ProcessSchemaSubProcess,System.Collections.ObjectModel.Collection{System.Tuple{System.String,System.String,Terrasoft.Core.CodeGeneration.CodeGenerator.PropertyCollectionItem}})">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.SubProcessClassGenerator"/> class.
            </summary>
            <param name="context">Generator context.</param>
            <param name="subProcessElement">Subprocess schema element.</param>
            <param name="initialData">Initial data.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessClassGenerator.ClassName">
            <summary>
            Gets name of the class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessClassGenerator.WriteClass">
            <summary>
            Writes class of the subprocess.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.SubProcessInProcessMetaDataSynchronizer">
            <summary>
            Synchronizer for sub processes in processes meta data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessInProcessMetaDataSynchronizer.#ctor(Terrasoft.Core.DB.IQueryExecutor)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessInProcessMetaDataSynchronizer.EntitySchemaName">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessInProcessMetaDataSynchronizer.SaveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessInProcessMetaDataSynchronizer.RemoveData(Terrasoft.Core.Process.ProcessSchema)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Process.SubProcessProxy">
            <summary>
            Base class for sub process elements in compiled process.
            </summary>
            <seealso cref="T:Terrasoft.Core.Process.Process" />
        </member>
        <member name="F:Terrasoft.Core.Process.SubProcessProxy.ActiveSchemaUIdPropertyName">
            <summary>
            The property name of UId of current process instance schema in serialized data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.#ctor(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.Process)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.Process.Process"/> class.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="ownerProcess">Parent process.</param>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.InitialSchemaUId">
            <summary>
            Gets or sets unique identifier of the schema as initial value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.DataStorage">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsTracing">
            <summary>
            Gets is element tracing.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ProcessParametersDataWriterSettings">
            <summary>
            Gets process parameters data writer settings.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsRegisteredElementInLog">
            <summary>
            Gets or sets value that indicates whether the current process element is registered in Log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.BaseProcessSchema">
            <summary>
            Gets or sets the base process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ActiveSchemaUId">
            <summary>
            Gets the schema UId of current proxied process instance.
            </summary>
            <value>
            The active schema UId of current proxied process instance.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.UId">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Caption">
            <summary>
            Gets or sets the caption.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Type">
            <summary>
            Gets or sets the name of the current member type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.SerializeToDB">
            <summary>
            Gets or sets value that indicates whether the current process element is needed to serialize in DB.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsLogging">
            <summary>
            Gets or sets value that indicates whether the current process element is needed to write in Log.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Owner">
            <summary>
            Gets or sets owner process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.SchemaElementUId">
            <summary>
            Gets or sets unique identifier of the schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Status">
            <summary>
            Gets or sets the execution state.
            </summary>
            <value>
            The execution state.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsExecuted">
            <summary>
            Gets or sets value that indicates whether the current process element is executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ExecutionResult">
            <summary>
            Gets or sets value that represents execution result of the current process element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.LoopCounter">
            <summary>
            Gets or sets number of process element repetitions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.SchemaUId">
            <summary>
            Gets or sets unique identifier of the schema element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.CreatedInSchemaUId">
            <summary>
            Gets or sets unique identifier of the owner process schema where the current element has been created.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.PreviousFlowElements">
            <summary>
            Gets or sets a set of previous elements of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ExecutedEventHandler">
            <summary>
            Gets or sets event handler. It is triggered when current process element has been executed.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.StartDate">
            <summary>
            Gets or sets date and time of the day when the current process has been started.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.SchemaManager">
            <summary>
            Gets instance that implements the <see cref="T:Terrasoft.Core.ISchemaManager"/> interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.OwnerUId">
            <summary>
            Gets or sets the unique identifier of owner process instance.
            </summary>
            <value>
            The unique identifier of owner process instance.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.UserConnection">
            <summary>
            Gets or sets the user connection.
            </summary>
            <value>
            The user connection.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.SchemaManagerName">
            <summary>
            Gets or sets name of schema manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Schema">
            <summary>
            Gets or sets the schema.
            </summary>
            <value>
            The schema.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Storage">
            <summary>
            Gets or sets instance that provides functionality for storing and retrieving resource managers.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsShownExecutionPage">
            <summary>
            Gets or sets value that determines whether it can show execution page.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ProcessLane">
            <summary>
            Gets or sets lane of the process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.Result">
            <summary>
            Gets or sets result of the current process execution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.SerializeToMemory">
            <summary>
            Gets or sets value that determines whether it is required to serialize the current process in memory.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.InstanceUId">
            <summary>
            Gets string value that represents unique identifier of the current process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ActivatedEventElements">
            <summary>
            Gets a collection of the activated events.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ThrowEvents">
            <summary>
            Gets a set of events that are required to trigger.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.FlowElements">
            <summary>
            Gets a set of the process elements that were executed or are required to execute.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.WaitingUserTasks">
            <summary>
            Gets a set of the process elements that are going to show execution page.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.MetaPathParameterValues">
            <summary>
            Gets a collection of keys and values, where key is the metapath and value is delegate.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.InternalContext">
            <summary>
            Gets or sets instance of the <see cref="T:Terrasoft.Core.Process.ProcessExecutingContext"/> type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsEmbedded">
            <summary>
            Gets value that determines whether it is embedded process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsSaved">
            <summary>
            Gets or sets value that determines whether it is embedded process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.MaxLoopCount">
            <summary>
            Gets maximum number of process repetitions.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsProcessExecutedBySignal">
            <summary>
            Gets or sets value that determines whether the current process is started by signal.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.IsProcessExecutedByService">
            <summary>
            Gets or sets value that determines whether the current process is started by service.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ProcessType">
            <summary>
            Gets or sets the class type of the current process.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ProcessSchema">
            <summary>
            Gets the process schema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.SubProcessProxy.ParameterValueProvider">
            <summary>
            Gets the family of algorithms that are used to obtain the values of the process parameters.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.InitializeOwnProperties(Terrasoft.Core.Process.Process)">
            <summary>
            Initializes property values of the owner process.
            </summary>
            <param name="owner">Owner process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.InitializeParameterValues">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.RegisterInDB(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Performs registration of the process data in DB.
            <param name="userConnection">The user connection.</param>
            <param name="status">The process status.</param>
            <param name="errorDescription">The description of the error.</param>
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.UpdateStatusInLog(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Updates status of the process in DB.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="newStatus">Status of the process.</param>
            <param name="errorDescription">Description of the error.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.UpdateOwnerStatus(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.Process,Terrasoft.Core.Process.ProcessStatus,System.String)">
            <summary>
            Updates status of the owner process.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="owner">Owner process.</param>
            <param name="status">Status of the process.</param>
            <param name="description">Description of the error.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WriteErrorToProcessLog(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Changes the state of the element and its owner process to error. Writes the error message to process log.
            </summary>
            <param name="userConnection">The user connection.</param>
            <param name="errorMessage">The error message.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.SetParameterValue(Terrasoft.Core.Process.IProcessParametersMetaInfo,Terrasoft.Core.Process.ProcessSchemaParameter,System.Object,System.Object)">
            <summary>
            Sets parameter value.
            </summary>
            <param name="source">Process element.</param>
            <param name="parameter">Process schema parameter.</param>
            <param name="value">Value.</param>
            <param name="defValue">Default value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ForceGetProcessFlowElement(System.String)">
            <summary>
            Forcibly obtains process element.
            </summary>
            <param name="schemaElementName">Name of the schema element.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ReadSubProcessParameters(Terrasoft.Core.Process.IProcessElementMetaInfo,Terrasoft.Core.Process.Process)">
            <summary>
            Reads the parameter values of sub process to the parameter values of current instance.
            </summary>
            <param name="subProcessElementSchema">The sub process element schema.</param>
            <param name="subProcessElementInstance">The sub process element instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ActualizeProcessElement(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Actualizes instance of the process into the private field of the class.
            </summary>
            <param name="element">Element of the process.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ClearProcessData">
            <summary>
            Clears the process data.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.Run(Terrasoft.Core.Process.StartElementOptions)">
            <summary>
            Run process.
            </summary>
            <param name="options">The executing options.</param>
            <returns>Process descriptor.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetParameterValue``1(System.String)">
            <summary>
            Gets parameter value by it's name.
            </summary>
            <typeparam name="T">The type of parameter.</typeparam>
            <param name="parameterName">The name of parameter.</param>
            <returns>Returns the value of the property by name.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.SetParameterValue``1(System.String,``0)">
            <summary>
            Sets protected parameter value by it's name.
            </summary>
            <typeparam name="T">The type of parameter.</typeparam>
            <param name="parameterName">The parameter name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.SetPrivateFieldValue(System.String,System.Object,System.Object)">
            <summary>
            Sets the value of private field of a process instance.
            </summary>
            <param name="fieldName">Field name that is declared in the "source" argument.</param>
            <param name="source">Instance of the <see cref="T:Terrasoft.Core.Process.Process"/> type.</param>
            <param name="value">The new field value.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.Assign(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Assigns the property values of the current process element to the properties of the specified element.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.CreateFlowElementInstanceByType(System.Type,Terrasoft.Core.Process.Process)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> class by the specified type info.
            </summary>
            <param name="processElementType"></param>
            <param name="process">Instance of the <see cref="T:Terrasoft.Core.Process.Process"/> type.</param>
            <returns>Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ProcessQueue(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Processes a queue consisting of process elements.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if queue is successfully processed; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.FillWaitingUserTaskCollection(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Fills collection with items of the process elements that can interact with user.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ShouldWriteFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Returns value that determines whether the current process should write state of the specified process
            element.
            </summary>
            <param name="processElement">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessFlowElement"/> type.</param>
            <returns><c>true</c>, if the current process should write state of the specified element;
            otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WriteFlowElementsProperty(Terrasoft.Common.DataWriter)">
            <summary>
            Writes state of the process elements.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetParameterValues">
            <summary>
            Returns element parameters.
            </summary>
            <returns>Element parameters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ReadPropertiesData">
            <summary>
            Reads state of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ReadPropertiesData(Terrasoft.Common.DataReader)">
            <summary>
            Reads state of the current process.
            </summary>
            <param name="reader">Instance that provides sequential reading of data.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WritePropertiesData">
            <summary>
            Writes state of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WritePropertiesData(Terrasoft.Common.DataWriter,System.Boolean)">
            <summary>
            Writes state of the current process.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
            <param name="shouldWriteElements">Indicates whether to write process elements.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.CloneShallow">
            <summary>
            Creates a shallow copy of the current process.
            </summary>
            <returns>Instance that is a copy of the current process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WritePropertiesData(Terrasoft.Common.DataWriter)">
            <summary>
            Writes state of the current process element.
            </summary>
            <param name="writer">Instance of the <see cref="T:Terrasoft.Common.DataWriter"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.Execute(Terrasoft.Core.Process.ProcessExecutingContext)">
            <summary>
            Executes current process.
            </summary>
            <param name="context">The execution context.</param>
            <returns><c>true</c>, if element was successfully executed and conditions for moving to the next step were
            satisfied; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.TryGetPerformer(System.Guid@)">
            <summary>
            Attempts to get performer user.
            </summary>
            <param name="performerUId">Unique identifier of the performer user.</param>
            <returns><c>true</c> if current performer is defined; otherwise<c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ReadPropertiesDataFromDB(Terrasoft.Core.UserConnection)">
            <summary>
            Reads state of the current process from DB.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ReadPropertiesDataFromMemory">
            <summary>
            Reads state of the current process from memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WritePropertiesDataToDB(Terrasoft.Core.UserConnection)">
            <summary>
            Writes state of the current process to DB.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WritePropertiesDataToMemory">
            <summary>
            Writes state of the current process to memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.CompleteExecuting(System.Object[])">
            <summary>
            Completes executing the current process.
            </summary>
            <param name="parameters">Array of the parameter values.</param>
            <returns><c>true</c>, if process was successfully executed and conditions for moving to the next step were
            satisfied; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.CancelExecuting(System.Object[])">
            <summary>
            Cancels the executing.
            </summary>
            <param name="parameters">Array of the parameter values.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetResultParameterAllValues(Terrasoft.Core.UserConnection,Terrasoft.Core.Process.ProcessSchemaUserTask)">
            <summary>
            Returns values of the result parameters.
            </summary>
            <returns>Allowed values of the result parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetExecutionData">
            <summary>
            Returns the data required to display the execution page.
            </summary>
            <returns>String that represents the data needed for showing execution page.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetResultParameterAllowedValues">
            <summary>
            Returns allowed values of the result parameter.
            </summary>
            <returns>Allowed values of the result parameter.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetResultAllowedValues">
            <summary>
            Gets the result allowed values.
            </summary>
            <returns>The result allowed values.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetPropertiesData(System.Boolean)">
            <summary>
            Returns serialized state of the current process.
            </summary>
            <param name="shouldWriteElements">Indicates whether to write other process elements.</param>
            <returns>String that represents serialized state of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetPropertiesData">
            <summary>
            Returns serialized state of the current process.
            </summary>
            <returns>String that represents serialized state of the current process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ExternalExecute(Terrasoft.Core.Process.ProcessActivityAfterEventArgs)">
            <summary>
            Executes external process.
            </summary>
            <param name="e">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivityAfterEventArgs"/> type.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.SerializeToString(System.Object)">
            <summary>
            Serializes the specified value.
            </summary>
            <param name="value">The specified value.</param>
            <returns>String that represents the serialized value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.DeserializeFromString``1(System.String)">
            <summary>
            Converts the specified string to an object of the specified type.
            </summary>
            <param name="value">The string to be deserialized.</param>
            <typeparam name="T">The type of the resulting object.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetLocalizableString(System.String,System.String)">
            <summary>
            Returns string value that depends on the current culture info.
            </summary>
            <param name="managerName">Name of the resource manager.</param>
            <param name="resourceItemName">Name of the resource item.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ConvertToProcessDataSourceFilters(System.Guid,System.String)">
            <summary>
            Converts a set of filters to a process format.
            </summary>
            <param name="entitySchemaUId">Unique identifier of the entity schema.</param>
            <param name="dataSourceFilters">Set of the filter values.</param>
            <returns>Converted value of the set of filters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetSchemaElement">
            <summary>
            Returns owner schema element.
            </summary>
            <returns>Found schema element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetIsReexecution">
            <summary>
            Returns flag that idicates if element has been executed one or more times.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetParameterValue(Terrasoft.Core.Process.ProcessSchemaParameter)">
            <summary>
            Returns parameter value.
            </summary>
            <param name="parameter">Process schema parameter.</param>
            <returns>Parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.InitializeFlowElementProperties(Terrasoft.Core.Process.ProcessFlowElement)">
            <summary>
            Method must be implemented in derived classes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.Execute(Terrasoft.Core.Process.ProcessFlowElement,System.Object[])">
            <summary>
            Reexecutes process element.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ConvertToProcessDataSourceFilters(Terrasoft.Core.Process.ProcessActivity,System.Guid,System.String)">
            <summary>
            Converts a set of filters to a process format.
            </summary>
            <param name="processActivity">Instance of the <see cref="T:Terrasoft.Core.Process.ProcessActivity"/> class.</param>
            <param name="entitySchemaUId">Unique identifier of the entity schema.</param>
            <param name="dataSourceFilters">Set of the filter values.</param>
            <returns>Converted value of the set of filters.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ThrowEvent(Terrasoft.Core.Process.ProcessExecutingContext,System.String)">
            <summary>
            Throws event.
            </summary>
            <param name="context">Execution context.</param>
            <param name="eventHandler">Name of the event handler.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.Execute(Terrasoft.Core.UserConnection)">
            <summary>
            Executes the current process.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetParameterValueByMetaPath(System.String)">
            <summary>
            Gets the process parameter value by meta path.
            </summary>
            <param name="metaPath">The process parameter meta path.</param>
            <returns>The process parameter value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.Execute(Terrasoft.Core.UserConnection,System.String)">
            <summary>
            Executes the current process.
            </summary>
            <param name="userConnection">User connection.</param>
            /// <param name="startQueueTasksItem">The name of the process element in the queue.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.FindFlowElementByUId(System.Guid)">
            <summary>
            Finds process element by its unique identifier.
            </summary>
            <param name="elementUId">Unique identifier of the process element.</param>
            <returns>Found process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.FindFlowElementByName(System.String)">
            <summary>
            Finds process element by its name.
            </summary>
            <param name="name">Name of the process element.</param>
            <returns>Found process element.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.FindFlowElementBySchemaElementUId(System.Guid)">
            <summary>
            Finds the flow element by schema element UId.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetFlowElementBySchemaElementUId(System.Guid)">
            <summary>
            Gets the flow element by schema element UId
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <returns>The process flow element</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when process flow element is not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetFlowElementsBySchemaElementUId(System.Guid)">
            <summary>
            Gets the enumerator of the flow elements founded by their schema element UId.
            </summary>
            <param name="schemaElementUId">The schema element identifier.</param>
            <returns>The enumerator of the flow elements.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.CancelExecution">
            <summary>
            Cancels execution of the current process.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.GetParentProcess">
            <summary>
            Returns instance of the main process.
            </summary>
            <returns>Process.</returns>
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.WritePropertiesDataToOwner(Terrasoft.Common.DataWriter)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Process.SubProcessProxy.ReadPropertiesDataFromOwner(Terrasoft.Common.DataReader)">
            <summary>
            Reads the properties data from owner process data stream.
            </summary>
            <param name="ownerReader">The data reader.</param>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskService">
            <summary>
            ############ ###### ### ########## ########### ########, ####### ####### ####### # ###### # ############## #
            #############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskService.#ctor(Terrasoft.Core.Process.IMessageQueueManagerItem,Terrasoft.Core.Process.TaskServiceSettings)">
            <summary>
            ############## ######### <see cref="T:Terrasoft.Core.Process.TaskService"/> # ######## ######### ######### ######## ######### #
            ###########.
            </summary>
            <param name="messageQueueManagerItem">####### ######### ######## #########.</param>
            <param name="taskServiceSettings">######### #######.</param>
        </member>
        <member name="M:Terrasoft.Core.Process.TaskService.Subscribe(Terrasoft.Core.Process.ProcessComponentSet)">
            <summary>
            ############# ## ####### ########## ######## ######-######## ### ######## ########## # ####### #########.
            </summary>
            <param name="processComponentSet">
            ##### ########### ########### ########, ####### ######## ##### ########.
            </param>
        </member>
        <member name="T:Terrasoft.Core.Process.ConditionEvalStrategy">
            <summary>
            ######### ########## ###### ######## ####### ### Gateway #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ConditionEvalStrategy.Exclusive">
            <summary>###### ###### # ###### ######## ####### ######### ## ####### ############## ##########.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.ConditionEvalStrategy.Inclusive">
            <summary>######### ### ####### # ###### ######## #######.</summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskServiceQueueItem">
            <summary>
            ############ ####### ####### ### ####### # ######## ########## ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.Result">
            <summary>
            ######### ########## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.UId">
            <summary>
            ############# ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.SchemaId">
            <summary>
            ############# ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.FlowElementUId">
            <summary>
            ############# ######## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.PreviousFlowElementUId">
            <summary>
            ############# ########### ######## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.FlowElementName">
            <summary>
            ############ ######## ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.GatewayConditions">
            <summary>
            ###### ######### ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.EvalStrategy">
            <summary>
            A strategy for computing the set of conditional flows for Gateway elements.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.Type">
            <summary>
            ### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.Body">
            <summary>
            ##########, ########## ################# ###### ##### ######-########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.ErrorMessage">
            <summary>
            ######## ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceQueueItem.FlowSchema">
            <summary>
            ##### ######-########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskServiceQueueItemType">
            <summary>
            Message types for the <see cref="T:Terrasoft.Core.Process.TaskService"/>.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Start">
            <summary>Start element.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Terminate">
            <summary>Finish element.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Execute">
            <summary>Executing element.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Completed">
            <summary>Completed element.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Failed">
            <summary>Failed element.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.CheckGatewayConditions">
            <summary>Condition flow expressions checking.</summary>
        </member>
        <member name="F:Terrasoft.Core.Process.TaskServiceQueueItemType.Cancel">
            <summary>Cancel element.</summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TaskServiceSettings">
            <summary>
            ############ #########, ####### ########## ### ######## ########## <see cref="T:Terrasoft.Core.Process.TaskService"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TaskServiceSettings.FlowEngineStateService">
            <summary>
            ###### #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Process.TimerEventInfo">
            <summary>
            Describes timer event info.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TimerEventInfo.Caption">
            <summary>
            Caption of timer element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TimerEventInfo.UId">
            <summary>
            UId of timer element.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TimerEventInfo.PreviousFireTime">
            <summary>
            Previous time when trigger fired. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TimerEventInfo.NextFireTime">
            <summary>
            Previous time when trigger is going to be fire. 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Process.TimerEventInfo.State">
            <summary>
            Current state of trigger.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ReferenceAssemblyExtension">
            <summary>
            A static class contains extension methods for convenient handling of reference assembly attributes.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ReferenceAssemblyExtension.GetMarkedBy(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},Terrasoft.Core.Attributes.RefAssemblyMarker)">
            <summary>
            Gets the marked assemblies.
            </summary>
            <param name="source">The assemblies.</param>
            <param name="marker">The marker.</param>
            <returns>Filtered enumeration of assemblies.</returns>
        </member>
        <member name="M:Terrasoft.Core.ReferenceAssemblyExtension.GetServiceRoutedOnly(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Returns enumeration of assemblies where each assembly marked 
            by <see cref="F:Terrasoft.Core.Attributes.RefAssemblyMarker.ServiceRoutes"/> attribute.
            </summary>
            <param name="source">Source enumeration of assemblies.</param>
            <returns>Filtered enumeration of assemblies.</returns>
        </member>
        <member name="M:Terrasoft.Core.ReferenceAssemblyExtension.GetEntityEventedOnly(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Returns enumeration of assemblies where each assembly marked 
            by <see cref="F:Terrasoft.Core.Attributes.RefAssemblyMarker.EntityEvents"/> attribute.
            </summary>
            <param name="source">Source enumeration of assemblies.</param>
            <returns>Filtered enumeration of assemblies.</returns>
        </member>
        <member name="M:Terrasoft.Core.ReferenceAssemblyExtension.GetDIBoundOnly(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Returns enumeration of assemblies where each assembly marked 
            by <see cref="F:Terrasoft.Core.Attributes.RefAssemblyMarker.DIBindings"/> attribute.
            </summary>
            <param name="source">Source enumeration of assemblies.</param>
            <returns>Filtered enumeration of assemblies.</returns>
        </member>
        <member name="M:Terrasoft.Core.ReferenceAssemblyExtension.GetAllMarked(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Returns enumeration of assemblies where each assembly marked 
            by <see cref="F:Terrasoft.Core.Attributes.RefAssemblyMarker.All"/> attributes.
            </summary>
            <param name="source">Source enumeration of assemblies.</param>
            <returns>Filtered enumeration of assemblies.</returns>
        </member>
        <member name="T:Terrasoft.Core.ResourceProviders.IHierarchySchemaResourceReader">
            <summary>
            Provides methods for reading schema resources with hierarchy.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ResourceProviders.IHierarchySchemaResourceReader.ReadHierarchycalResources(Terrasoft.Core.ResourceProviders.ResourceFilters,System.Action{Terrasoft.Core.ResourceProviders.ResourceData})">
            <summary>
            Reads resources and passes <see cref="T:Terrasoft.Core.ResourceProviders.ResourceData"/> to <paramref name="resourceDataAction"/>.
            </summary>
            <param name="resourceFilters">Resource filters.</param>
            <param name="resourceDataAction">Action which executes on <see cref="T:Terrasoft.Core.ResourceProviders.ResourceData"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.ResourceProviders.IHierarchySchemaResourceReader.ReadPlainResources(System.Collections.Generic.IEnumerable{System.Guid},System.Guid,System.Action{Terrasoft.Core.ResourceProviders.ResourceData})">
            <summary>
            Reads resources and passes <see cref="T:Terrasoft.Core.ResourceProviders.ResourceData"/> to <paramref name="resourceDataAction"/>.
            </summary>
            <param name="schemaHierarchyIds">Full schema hierarchy.</param>
            <param name="includeResourcesFromPackageId">Package identifier.</param>
            <param name="resourceDataAction">Action which executes on <see cref="T:Terrasoft.Core.ResourceProviders.ResourceData"/>.</param>
            <remarks>
            In case if <paramref name="includeResourcesFromPackageId"/> is empty it will be ignored.
            </remarks>
        </member>
        <member name="T:Terrasoft.Core.ResourceProviders.ResourceData">
            <summary>
            Provides properties of the resource data.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.PackageName">
            <summary>
            Package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.PackageId">
            <summary>
            Package Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.SchemaName">
            <summary>
            Base schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.SchemaId">
            <summary>
            Base schema Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.SchemaUId">
            <summary>
            Base schema UId.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.ResourceName">
            <summary>
            Resource name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.CultureId">
            <summary>
            Culture Id.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.ModifiedOn">
            <summary>
            Modification date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.Value">
            <summary>
            Resource value.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.ResourceType">
            <summary>
            Resource type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceData.ImageData">
            <summary>
            Image data.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ResourceProviders.ResourceFilters">
            <summary>
            Provides properties of the resource filter.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceFilters.SchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceFilters.ResourceName">
            <summary>
            Resource name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceFilters.ModifiedFrom">
            <summary>
            Modified from date.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceFilters.ResourceType">
            <summary>
            Type of resource.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ResourceProviders.ResourceFilters.SchemaIds">
            <summary>
            Identifiers of schemas.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.RuntimeEntitySchema.IEntitySchemaRuntimeContentReader">
            <summary>
            Provides methods to read schemas runtime configuration server content.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.RuntimeEntitySchema.IEntitySchemaRuntimeContentReader.Read(System.String)">
            <summary>
            Reads schema runtime configuration server content.
            </summary>
            <param name="schemaName">Schema name which content should be read.</param>
        </member>
        <member name="M:Terrasoft.Core.RuntimeEntitySchema.IEntitySchemaRuntimeContentReader.Read(System.Guid)">
            <summary>
            Reads schema runtime configuration server content.
            </summary>
            <param name="schemaUId">Schema UId which content should be read.</param>
        </member>
        <member name="T:Terrasoft.Core.RuntimeEntitySchema.IRuntimeEntitySchemaCreator">
            <summary>
            Provides methods to create runtime entity schema.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.RuntimeEntitySchema.IRuntimeEntitySchemaCreator.Create(System.IO.Stream,Terrasoft.Core.Entities.EntitySchemaManager)">
            <summary>
            Creates runtime entity schema from stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="entitySchemaManager">Entity schema manager.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaLocalizablePropertyChangeAction">
            <summary>
            ######## # ################# ########## #####.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SchemaLocalizablePropertyChangeAction.Edit">
            <summary>
            ##############.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SchemaLocalizablePropertyChangeAction.Delete">
            <summary>
            ########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SchemaLocalizablePropertyChangeAction.Rename">
            <summary>
            ##############.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Schema">
            <summary>
            ####### ##### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.#ctor(Terrasoft.Core.ISchemaManager)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Schema"/> # ######## ########## ####.
            </summary>
            <param name="schemaManager">######## ####.</param>
            <exception cref="T:System.ArgumentNullException">#### # ######## ######### <paramref name="schemaManager"/> ########
            ######## <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Schema.#ctor(Terrasoft.Core.Schema)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Schema"/>, ########## ###### ######## #####
            <paramref name="source"/>.
            </summary>
            <param name="source">#####, #### ####### #########.</param>
        </member>
        <member name="P:Terrasoft.Core.Schema.ItemsSequentiallyNumbered">
            <summary>
            ####### ######### ### ##### ################# #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SystemUserConnection">
            <summary>
            ######### ################ ###########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaManager">
            <summary>
            ######## ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.ManagerItem">
            <summary>
            ############# #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaManagerItem">
            <summary>
            ############# #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.IsCoreSchema">
            <summary>
            #######, ######## ## ##### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.ResourceManager">
            <summary>
            ######## ######## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Storage">
            <summary>
            ######### ######## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.PackageUId">
            <summary>
            ########## ############# ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.ReferenceSchemaUIds">
            <summary>
            ######### ############### ####, ## ####### ######### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Caption">
            <summary>
            ######### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Methods">
            <summary>
            ######### ####### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.HasMethods">
            <summary>
            ####### ####### # ##### #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Usings">
            <summary>
            ######### ########### ####, ############ ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.LocalizableStrings">
            <summary>
            ######### ############ ##### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.IsInitialized">
            <summary>
            ##########, ######## ## ##### ##################.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.Description">
            <summary>
            ######## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.AppManagerProvider">
            <summary>
            ######### ######### #### ###### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaManagerProvider">
            <summary>
            ######### ######### #### ###### ############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.SchemaNamePrefix">
            <summary>
            ####### ######## #######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.CreatedInVersion">
            <summary>
            Created in the product version.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Schema.DenyExtending">
            <summary>
            ######### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.ApplyMetaDataValue(Terrasoft.Common.DataReader)">
            <summary>
            ####### ######## ####### ##### ## ########## # ####### #########
            <see cref="T:Terrasoft.Common.DataReader"/>.
            </summary>
            <param name="reader">######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ##############
            ####### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeMethods">
            <summary>
            ############# ####### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableStrings">
            <summary>
            ############# ############ ##### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeUsings">
            <summary>
            ############# ######### ########### ####, ############ ######.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetLocalizableStringsDefInheritance">
            <summary>
            ### ############ ##### ##### ############# ######## ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.GenerateItemNamePrefix(Terrasoft.Core.IDesignItem,Terrasoft.Core.DesignModeClassDescriptor)">
            <summary>
            ### ######### ######## ####### ########## ########## #######, ######### ######## ######## ######
            ####### ####### ##########.
            </summary>
            <param name="item">####### ####### ##########.</param>
            <param name="classDescriptor">######## ###### ####### ####### ##########.</param>
            <returns>############### ####### ### <paramref name="item"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Schema.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ############ ###### ########## ##### # ####### ######### ##########
            <see cref="T:Terrasoft.Common.DataWriter"/>.
            </summary>
            <param name="writer">######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############
            ########## #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.HandleNameChanging(System.String)">
            <summary>
            ############# ##### #### ############ ####### ##### ### ## ##############.
            </summary>
            <param name="oldName">###### ### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetDefInheritance">
            <summary>
            ### #### ######### #####, # ####### ## ########## ############# ############ #####, #############
            ############# ####### ##### ### ############.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableValues(System.String,System.String)">
            <summary>
            ######### ############# ############ ######## ##### ## ######## ###### ######### ######### ########.
            </summary>
            <param name="resourceManagerName">### ######### ########.</param>
            <param name="resourceGroupName">### ###### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableValues(System.String)">
            <summary>
            Initializes schema localizable values.
            </summary>
            <param name="resourceManagerName">Resource manager name.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.ReInitializeLocalizableValues(System.String,System.String)">
            <summary>
            ######### ################# ############ ######## ##### ## ######## ###### ######### ######### ########.
            </summary>
            <param name="resourceManagerName">### ######### ########.</param>
            <param name="resourceGroupName">### ###### ########.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue})">
            <summary>
            ######### ############ ######## ##### # ######## #########.
            </summary>
            <param name="values">######### ############ ############ ######## #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>
            ######### ############ ######## ##### # ######## #########.
            </summary>
            <param name="values">######### ############ ############ ######## #####.</param>
            <param name="includeInherited">######## ## # ######### ############ ############ ######## ##############
            ######## (## ######### - ###).</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.LoadLocalizableValues">
            <summary>
            ######### ######## ### ############ ######### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializeLocalizableValues">
            <summary>
            ######### ############# ############ ######## #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.RenameLocalizedProperty(System.String,Terrasoft.Core.IMetaItem)">
            <summary>
            ############# ### ######### ############# ######## ##### ### ############## #####.
            </summary>
            <param name="oldName">###### ### #####.</param>
            <param name="childProperty">############ ######## #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.InitializePrimaryInfo">
            <summary>
            ############ ############# ######## ####### #####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetSchemaReferences">
            <summary>
            ########## ######### ###### ## ######, ####### ########## ### ########## #####.
            </summary>
            <returns>######### ###### ## ######, ####### ########## ### ########## #####. </returns>
        </member>
        <member name="M:Terrasoft.Core.Schema.GenerateItemCaption(Terrasoft.Core.DesignModeClassDescriptor,System.Int32)">
            <summary>
            ########## ################ ######### #####, ######### ######## ###### # ######## ######
            ####### ####### ##########.
            </summary>
            <param name="classDescriptor">######## ###### ####### ####### ##########.</param>
            <param name="index">###### #####.</param>
            <returns>############ ###### ######### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetUniqueNameAndCaptionForItem(Terrasoft.Core.IDesignItem,Terrasoft.Core.DesignModeClassDescriptor,System.Int32)">
            <summary>
            ### ######### ######## ####### ########## ############# ########## ### # #########, ######### ########
            ###### # ######## ###### ####### ####### ##########.
            </summary>
            <param name="item">####### ####### ##########, ######## ############### ### # #########.</param>
            <param name="classDescriptor">######## ###### ####### ####### ##########</param>
            <param name="index">###### ########.</param>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetUniqueNameAndCaptionForItem(Terrasoft.Core.IDesignItem)">
            <summary>
            ### ######### ######## ####### ########## ############# ########## ### # #########.
            </summary>
            <param name="item">####### ####### ##########, ######## ############### ### # #########.</param>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.SetUniqueNameAndCaptionForItem``1(``0,Terrasoft.Core.MetaItemCollection{``0})">
            <summary>
            ### ######## ####### ########## ######### #### ## ########## ######### ############# ########## ### #
            #########.</summary>
            <typeparam name="TItemType">### ######## ####### ##########.</typeparam>
            <param name="item">####### ####### ##########, ### ######## ############### ###
            # #########.</param>
            <param name="items">######### ######### ####### ##########, ####### ########### <paramref name="item"/>.
            </param>
            <remarks>############# #####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.GenerateItemUniqueIndex(System.String)">
            <summary>
            ########## ########## ###### ######## ### ######### ########.
            </summary>
            <param name="prefix">#######.</param>
            <returns>########## ###### ######## ### ######## <paramref name="prefix"/>.</returns>
            <remarks>##### ## ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetMetaItems(System.Collections.Generic.ICollection{Terrasoft.Core.IMetaItem})">
            <summary>
            ######### ########## ######### ##### ############## ####### #####.
            </summary>
            <param name="metaItems">#########, ####### ########### ############## ####### #####.</param>
        </member>
        <member name="M:Terrasoft.Core.Schema.GetIsNamePrefixValid(System.String)">
            <summary>
            #########, ######### ## ####### ##### ####### # #########, ######### # ######### #########
            "####### ######## #######".
            </summary>
            <param name="name">### #######.</param>
            <returns><c>true</c>, #### ####### ##### ####### <paramref name="name"/> ######### # #########, #########
            # ######### ######### "####### ######## #######".</returns>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.Culture">
            <summary>
            ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.SourceUId">
            <summary>
            ########## #############.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.Name">
            <summary>
            ###.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.PropertyName">
            <summary>
            ### ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.ActionValue">
            <summary>
            ######## ########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaLocalizablePropertyChange.Action">
            <summary>
            ########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaColumnsInfoDataReader">
            <summary>
            Provides methods for getting information about entity schema columns.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaColumnsInfoDataReader.#ctor(System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the SchemaColumnsInfoDataReader class using the specified IDataReader value.
            </summary>
            <param name="dataReader">Data reader.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaColumnsInfoDataReader.GetDataTypeValue">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SchemaColumnsInfoDataReader.GetCharacterMaxLengthValue">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SchemaColumnsInfoDataReader.GetPrecisionValue">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SchemaColumnsInfoDataReader.GetSizeValue">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SchemaColumnsInfoDataReader.GetIsNullableValue">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.SchemaImporter.SchemaDataDescriptor.JsContent">
            <summary>
            JS content property of schema
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaImporter.SchemaDataDescriptor.LessContent">
            <summary>
            Less content property of schema
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaImporter.SchemaDataDescriptor.CsharpContent">
            <summary>
            C# content property of schema
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaImporter.ExportSchema(System.Guid,Terrasoft.Core.SystemUserConnection)">
            <summary>
            Exports metadata of the schema.
            </summary>
            <param name="schemaId">Identifier of the schema.</param>
            <param name="systemUserConnection">System user connection.</param>
            <returns>String that represents metadata of the schema.</returns>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemActionEventArgs">
            <summary>
            Base class for classes that contain state data for the schema manager events.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemActionEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItemActionEventArgs"/> in
            derived constructors only.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemActionEventArgs.Item">
            <summary>
            Gets or sets the item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs">
            <summary>
            Provides data about status for event before adding a manager item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Initializes a new <see cref="T:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs" />
            instance using the specified manager item.
            </summary>
            <param name="item">The manager item that is being added.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs.IsCanceled">
            <summary>
            Determines whether adding a manager item was cancelled.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemAfterAddEventArgs">
            <summary>
            Provides data about the status for the event after adding a manager item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemAfterAddEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Initializes a new <see cref="T:Terrasoft.Core.SchemaManagerItemAfterAddEventArgs" />
            instance using the specified manager item.
            </summary>
            <param name="item">The manager item that was added.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs">
            <summary>
            Provides data about the status for the event before deleting of a manager item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Initializes a new <see cref="T:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs" />
            instance using the specified manager item.
            </summary>
            <param name="item">The manager item that is being deleted.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs.IsCanceled">
            <summary>
            Determines whether deleting a manager item was cancelled.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs">
            <summary>
            Provides data about the status for the event after deleting a manager item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Initializes a new <see cref="T:Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs" />
            instance using the specified manager item.
            </summary>
            <param name="item">Deleted manager item.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs">
            <summary>
            Provides data about the status for the event before saving of a manager item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs"/>, using specified item
            of manager.
            </summary>
            <param name="item">Saving item of manager.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs.IsCanceled">
            <summary>
            Determines if canceled saving of a manager item.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs">
            <summary>
            Provides data about the status for the event after saving a manager item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs.#ctor(Terrasoft.Core.ISchemaManagerItem,System.Boolean,Terrasoft.Core.UserConnection)">
            <summary>
            Creates instance of <see cref="T:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs"/>, using specified item.
            </summary>
            <param name="item">Saving item of manager.</param>
            <param name="isNew">Determines if <paramref name="item"/> is new.</param>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs.IsNew">
            <summary>
            Determines if saving item is new.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs.UserConnection">
            <summary>
            User connection.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManager`1">
            <summary>
            Base class of schema manager.
            </summary>
            <typeparam name="TSchemaManagerSchema">Class, inherits from <see cref="T:Terrasoft.Core.Schema"/>, implements interface
            <see cref="T:Terrasoft.Core.ISchemaManagerSchema`1"/>, <see cref="T:Terrasoft.Core.IManagerItemInstance"/>,
            <see cref="T:System.ICloneable"/>.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.SchemaManager`1"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ItemTypeName">
            <summary>
            Gets the name of the item type.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.SysSchemaUserPropertyRightsOperations">
            <summary>
            List of operations to access for modify SysSchemaUserProperty.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ItemCaption">
            <summary>
            The caption for the schema manager item.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ResourceManagerName">
            <summary>
            The name of the resource manager.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ItemName">
            <summary>
            ### ######## ######### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.SchemaManagerProvider">
            <summary>
            ######### ######### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.AppConnection">
            <summary>
            ######### ##########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.Namespace">
            <summary>
            ############ ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.ProcessSchemaManager">
            <summary>
            ######## #### #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.DefSchema">
            <summary>
            ####### #####.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemAdding">
            <summary>
            #######, ########### ##### ########### ##### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemAdding">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.SchemaManager`1.ItemAdding"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemAdding(Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs)">
            <summary>
            ########## #######, ############ ##### ########### ##### #####.
            </summary>
            <param name="e">######### #######, ############ ##### ########### ##### #####.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemAdded">
            <summary>
            #######, ########### ##### ########## ##### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemAdded">
            <summary>
            ##########, ############ ## ####### <see cref="E:Terrasoft.Core.SchemaManager`1.ItemAdded"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemAdded(Terrasoft.Core.SchemaManagerItemAfterAddEventArgs)">
            <summary>
            ########## #######, ############ ##### ########## ##### #####.
            </summary>
            <param name="e">######### #######, ############ ##### ########## ##### #####.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemRemoving">
            <summary>
            #######, ########### ##### ######### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemRemoving">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.SchemaManager`1.ItemRemoving"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemRemoving(Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs)">
            <summary>
            ########## #######, ############ ##### ######### #####.
            </summary>
            <param name="e">######### #######, ############ ##### ######### #####.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemRemoved">
            <summary>
            #######, ########### ##### ######## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemRemoved">
            <summary>
            ##########, ############ ## ####### <see cref="E:Terrasoft.Core.SchemaManager`1.ItemRemoved"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemRemoved(Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs)">
            <summary>
            ########## #######, ############ ##### ######## #####.
            </summary>
            <param name="e">######### #######, ############ ##### ######## #####.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemSaving">
            <summary>
            #######, ########### ##### ########### #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemSaving">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.SchemaManager`1.ItemSaving"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemSaving(Terrasoft.Core.SchemaManagerItemBeforeSaveEventArgs)">
            <summary>
            ########## #######, ############ ##### ########### #####.
            </summary>
            <param name="e">######### #######, ############ ##### ########### #####.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManager`1.ItemSaved">
            <summary>
            #######, ########### ##### ########## #####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManager`1.IsInItemSaved">
            <summary>
            ##########, ########### ## ######### ####### <see cref="E:Terrasoft.Core.SchemaManager`1.ItemSaved"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.OnItemSaved(Terrasoft.Core.SchemaManagerItemAfterSaveEventArgs)">
            <summary>
            ########## #######, ############ ##### ########## #####.
            </summary>
            <param name="e">######### #######, ############ ##### ########## #####.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SchemaWithSameNameAndManagerNameExistsInWorkspace(Terrasoft.Core.UserConnection,System.String,System.String,System.Guid)">
            <summary>
            Checks if schema with same name and manager name already exists in workspace.
            </summary>
            <param name="userConnection">User connection.</param>
            <param name="schemaName">Schema name.</param>
            <param name="managerName">Manager name.</param>
            <param name="schemaUId">Schema UId.</param>
            <returns>Returns true if such schema exists. Otherwise returns false.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeDefSchema">
            <summary>
            Initializes the default schema.
            </summary>
            <returns>The default schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveMetaDataDifferencePackage(`0,Terrasoft.Core.Configuration.SysSchema,System.String,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Saves the metadata difference package.
            </summary>
            <param name="schema">The schema.</param>
            <param name="sysSchema">The schema entity.</param>
            <param name="schemaMetaData">The schema metadata.</param>
            <param name="userConnection">The user connection.</param>
            <param name="isNew"><c>true</c> if is a new schema, otherwise - <c>false</c>.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InternalCreateSchema(System.String,`0,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            Internally creates new manager item.
            </summary>
            <param name="name">The item name.</param>
            <param name="baseSchema">The base schema.</param>
            <param name="userConnection">The user connection.</param>
            <param name="uid">The unique identifier.</param>
            <param name="fromMetaData"><c>true</c> if can use metadata, otherwise - <e>false</e>.</param>
            <returns>The new manager item.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchemaInstance(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            Creates the schema instance.
            </summary>
            <param name="schemaManagerItem">The schema manager item.</param>
            <param name="assembly">Assembly contains instance type.</param>
            <returns>Created instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaSources(`0,System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Gets the schema sources.
            </summary>
            <param name="schema">The schema.</param>
            <param name="schemaId">The schema identifier.</param>
            <param name="userConnection">The user connection.</param>
            <returns>The schema sources.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetParentSchemaLocalizableValues(`0)">
            <summary>
            Gets the parent schema localizable values.
            </summary>
            <param name="schema">The schema.</param>
            <returns>The localizable data.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeSchemaUserProperties(`0,Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Initializes schema user properties from manager item.
            </summary>
            <param name="schemaManagerItemSchema">Schema.</param>
            <param name="schemaManagerItem">Manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetFullItemHierarchy(System.Guid)">
            <summary>
            ########## ######## ######### ######### #### ## ######## ########### ##############.
            </summary>
            <param name="realUId">########## ############# ########, ## ######## ######## ########.</param>
            <returns>######## ######### ######### #### ## ######## ########### ##############.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateRuntimeSchemaFromMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ####### ##### ## ########## # ###### ###### ######## #########, ####### ########## ##### # ############
            #######.
            </summary>
            <param name="schemaUId">############# #####.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>##### # ###### ###### ######## #########, ####### ############ #####.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">
            ########## ############, #### <paramref name="schemaUId"/> - ############# ########## #####.
            </exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindInstanceFromMetaData(System.Guid)">
            <summary>
            ############ ##### ########## ##### # ######## ########## ############### ## ######### ##########.
            </summary>
            <param name="schemaUId">############# #####.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetInstanceFromMetaData(System.Guid)">
            <summary>
            ########## ######### ##### # ######## ########## ############### ## ######### ##########.
            </summary>
            <param name="schemaUId">########## ############# ########## ######## #########.</param>
            <returns>######### ######## ######### # ########## ############### <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetParentSchemas(System.Guid,Terrasoft.Core.UserConnection,System.Boolean,System.Guid,System.Nullable{System.Guid})">
            <summary>
            Gets the parent schemas for the given one.
            </summary>
            <param name="schemaUId">The schema unique identifier.</param>
            <param name="userConnection">The user connection.</param>
            <param name="usePackageHierarchy"><c>true</c> if package hierarchy should be used. Otherwise - <c>false</c>.
            </param>
            <param name="sysPackageId">The system package identifier.</param>
            <param name="workspaceId">The workspace identifier.</param>
            <returns>The collection of schemas, which are parent for the given one.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Invalidate">
            <summary>
            Fires event that state of the manager has been changed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaCodeGeneratorResource(`0,System.Guid)">
            <summary>
            Returns the schema code generator resource used to generate source code for specified
            <paramref name="schema"/>.
            </summary>
            <param name="schema">The schema.</param>
            <param name="schemaId">The schema identifier.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.ActualizeSchemaMetaData(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            Actualizes the schema meta data.
            </summary>
            <param name="schemas">The schemas.</param>
            <returns>The actualized metadata.</returns>
            <exception cref="T:Terrasoft.Core.InstanceActivationException">Error, while parsing the schema metadata.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CheckOperationUserRights(Terrasoft.Core.UserConnection)">
            <summary>
            Checks whether the current user can modify the manager elements.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns><c>True</c> if the user can modify the manager elements, otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveSchemaFromMetaDataCache(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Removes the schema from meta data cache.
            </summary>
            <param name="designItem">The design item.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Returns the source code generator for the manager schemas.
            </summary>
            <param name="userConnection">The user connection.</param>
            <returns>The source code generator.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetItems">
            <summary>
            Returns elements of current manager elements.
            </summary>
            <returns>Items of current manager.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Clear">
            <summary>
            Removes all items from manager items collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveItemByUId(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Removes item with given UId from manager items collection.
            </summary>
            <param name="uid">Item UId.</param>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindInstanceFromMetaDataByPackageUId(System.Guid,System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Finds item with given UId with changes in elements hierarchy for package.
            </summary>
            <param name="schemaUId">Schema UId.</param>
            <param name="packageUId">Package UId.</param>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetProcessSchemaGenerator(Terrasoft.Core.UserConnection)">
            <summary>
            Returns process schema generator instance.
            </summary>
            <param name="userConnection">User connection.</param>
            <returns>Process schema generator.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Initialize(Terrasoft.Core.SchemaManagerProvider,Terrasoft.Core.SchemaManagerProviderConfigurationElement)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetMetaDataSerializer(Terrasoft.Core.UserConnection)">
            <summary>
            ########## ############ #### #########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>############ #### #########.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.ActualizeItemDescriptor(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            ############# ########## ######## ######### ####.
            </summary>
            <param name="item">####### #########, # ####### ########## ############### ##########.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.DesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ########## ######### ######## ####### ##########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# #####.</param>
            <returns>######### ######## ####### ##########.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetItemFromMetaData(System.Guid,Terrasoft.Core.UserConnection,System.Nullable{System.Guid})">
            <summary>
            ########## ####### #########, ########## ##### # ######## ###############, ######### ########
            ################ ###########.
            </summary>
            <param name="schemaUId">############# #####.</param>
            <param name="userConnection">################ ###########.</param>
            <param name="workspaceId">########## ############# ######## ############.</param>
            <returns>####### #########, ########## ##### # ############### <paramref name="schemaUId"/> ###
            ################# ########### <paramref name="userConnection"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeItem(System.Guid)">
            <summary>
            ######### ############# ######## ######### # ######## ###############.
            </summary>
            <param name="itemUId">############# ######## #########, ####### ##### ###################.</param>
            <returns><c>true</c>, #### ####### ######### # ############### <paramref name="itemUId"/>
            ################## #######; ##### - <c>false</c>.</returns>
            <exception cref="T:Terrasoft.Common.ArgumentEmptyException">#### # ######## ######### <paramref name="itemUId"/> ########
            ###### ########.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            ####### ######### ##### ## ####, ########## # ########## ######## #########. #### ### ##### ########
            ######### ## ###### # ######, ############ ##########.
            </summary>
            <param name="schemaManagerItem">####### #########, # ####### ###### #### ################### #####.</param>
            <param name="assembly">######, ####### ######## ### ########### #####.</param>
            <returns>#################### ######### #####.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.InitializeSafeSchema(Terrasoft.Core.ISchemaManagerItem,System.Reflection.Assembly)">
            <summary>
            ####### ######### ##### ## ####, ########## # ########## ######## #########. #### ### ##### ## ###### #
            ######, ############ <c>null</c>.
            </summary>
            <param name="schemaManagerItem">####### #########, # ####### ###### #### ################### #####.</param>
            <param name="assembly">######, ####### ######## ### ########### #####.</param>
            <returns>#################### ######### ##### #### <c>null</c>, ####
            ### ##### <paramref name="schemaManagerItem"/> ## ###### # ###### <paramref name="assembly"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FillSourceCollection(System.Collections.ObjectModel.Collection{Terrasoft.Core.ISchemaManagerItem},Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Loads code of schema to target collection.
            </summary>
            <param name="compileCollection">Collection, to which loads code of schema.</param>
            <param name="item">Item of manager, which contains schema with code.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FillSourceCollection(System.Collections.ObjectModel.Collection{Terrasoft.Core.ISchemaManagerItem},System.Guid)">
            <summary>
            ######### # ########## ######### ######## #### ######## #####.
            </summary>
            <param name="compileCollection">#########, # ####### ########### ######## #### #####.</param>
            <param name="uid">############# #####, ######## #### ####### ###########.</param>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.AddCoreSchema(System.Guid,System.String)">
            <summary>
            ######### # ######## #### ######### ##### # ######### ############### # ######.
            </summary>
            <param name="uid">############# ########### ######### #####.</param>
            <param name="name">### ########### ######### #####.</param>
            <returns>####### #########, ########## ########### ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.AddCoreSchema(System.Guid,System.String,System.Guid,System.Guid[])">
            <summary>
            ######### # ######## #### ######### ##### # ######### ############### # ###### # ######### ############
            ##### # ###### ####, ## ####### ######### ########### ######### #####.
            </summary>
            <param name="uid">############# ########### ######### #####.</param>
            <param name="name">### ########### ######### #####.</param>
            <param name="parentSchemaUId">############# ############ #####.</param>
            <param name="referenceSchemaUIds">###### ############### ####, ## ####### ######### ########### #####.
            </param>
            <returns>####### #########, ########## ########### ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.AddSchema(System.Guid,System.String,Terrasoft.Common.LocalizableString,Terrasoft.Common.LocalizableString,System.Guid)">
            <summary>
            ######### ##### # ######### ########### # ######## ####.
            </summary>
            <param name="uid">############# #####.</param>
            <param name="name">### #####.</param>
            <param name="caption">######### #####.</param>
            <param name="description">######## #####.</param>
            <param name="parentUId">############# ############ #####.</param>
            <returns>####### #########, ########## ########### ##### # ######### ###########.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveSchema(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ####### ## #### ###### ##### # ######## ###############.
            </summary>
            <param name="id">############# ######### #####.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>############# ###### # SysSchemaInSolution, # ####### ##### #### #######.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######## ## ######## ##### # ###############
            <paramref name="id"/>.</exception>
            <exception cref="T:System.Security.SecurityException">#### # ############ ############ #### ### ######## #######.</exception>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Terrasoft#Core#ISchemaManager#CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            ####### ##### ##### # ######### ###### # ############ ###### # ######### ########
            ######## ##### ## ##########.
            </summary>
            <param name="name">### #####.</param>
            <param name="baseSchema">####### #########, ########## ####### #####.</param>
            <param name="userConnection">################ ###########.</param>
            <param name="fromMetaData">####### ######## ##### ## ##########.</param>
            <returns>####### #########, ########## ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.Terrasoft#Core#ISchemaManager#CreateSchema(System.String,Terrasoft.Core.ISchemaManagerItem,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            ####### ##### ##### # ######### ######, ############ ###### # ######### ######## ########## ##### # ######
            ############# ####.
            </summary>
            <param name="name">### #####.</param>
            <param name="baseSchema">#######, ########## ############ #####.</param>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# #####.</param>
            <param name="addToDesignItems">####### ########## ##### # ###### ############# ####.</param>
            <returns>####### #########, ########## ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchema(System.String,`0,Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            ####### ##### ##### # ######### ###### # ############ ###### # ######### ######## ########## ##### # ######
            ############# ####.
            </summary>
            <param name="name">### #####.</param>
            <param name="baseSchema">######### ############ #####.</param>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# #####.</param>
            <param name="addToDesignItems">####### ########## ##### # ###### ############# ####.</param>
            <returns>####### #########, ########## ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchema(Terrasoft.Core.UserConnection,System.Guid,System.Boolean)">
            <summary>
            ####### ##### ##### # ######## ############### # ######### ######## ########## ##### # ###### #############
            ####.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# #####.</param>
            <param name="addToDesignItems">####### ########## ##### # ###### ############# ####.</param>
            <returns>####### #########, ########## ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CreateSchema(Terrasoft.Core.UserConnection)">
            <summary>
            ####### ##### #####.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <returns>####### #########, ########## ######### #####.</returns>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,System.Boolean,Terrasoft.Core.UserConnection,System.Boolean,System.Boolean)">
            <summary>
            Saves schema.
            </summary>
            <param name="uid">Specified designed schema UId.</param>
            <param name="removeDesignItem">Determines if the schema should be deleted from designed schemas
            collection in manager after save.</param>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="generateBundles">Determines if schema bundles should be generated after save.</param>
            <param name="lockSchemaInSourceControlStorage">Determines if schema bundles should be generated after save.
            </param>
            <returns><c>true</c> if schema is successfully saved; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.Security.SecurityException">If user have no rights to modify schema.</exception>
            <remarks>The method is overloaded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchema(Terrasoft.Core.ISchemaManagerItem{`0},Terrasoft.Core.UserConnection,System.Boolean,System.Boolean)">
            <summary>
            Saves schema.
            </summary>
            <param name="designItem">Specified instance of
            <see cref="T:Terrasoft.Core.ISchemaManagerItem`1"/>.</param>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="generateBundles">Determines if schema bundles should be generated after save.</param>
            <param name="lockSchemaInSourceControlStorage">Determines if schema bundles should be generated after save.
            </param>
            <returns><c>true</c> if schema is successfully saved; otherwise, <c>false</c>.</returns>
            <exception cref="T:System.Security.SecurityException">If user have no rights to modify schema.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,Terrasoft.Core.UserConnection,System.Boolean,System.Boolean)">
            <summary>
            Saves schema.
            </summary>
            <param name="uid">Specified designed schema UId.</param>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="generateBundles">Determines if schema bundles should be generated after save.</param>
            <param name="lockSchemaInSourceControlStorage">Determines if schema bundles should be generated after save.
            </param>
            <returns><c>true</c> if schema is successfully saved; otherwise, <c>false</c>.</returns>
            <remarks>
            The method is overloaded.
            The method calls method <see cref="M:Terrasoft.Core.SchemaManager`1.SaveSchema(System.Guid,System.Boolean,Terrasoft.Core.UserConnection,System.Boolean,System.Boolean)"/>, with second
            argument value - <c>false</c>.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchemaInCustomPackage(System.Guid,System.Boolean,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Saves schema in custom package.
            </summary>
            <param name="uid">Specified designed schema UId.</param>
            <param name="removeDesignItem">Determines if the schema should be deleted from designed schemas collection
            in manager after save.</param>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="generateBundles">Determines if schema bundles should be generated after save.</param>
            <returns><c>true</c> if schema is successfully saved; otherwise, <c>false</c>.</returns>
            <remarks>The method is overloaded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchemaInCustomPackage(System.Guid,Terrasoft.Core.UserConnection,System.Boolean)">
            <summary>
            Saves schema in custom package.
            </summary>
            <param name="uid">Specified designed schema UId.</param>
            <param name="userConnection">Specified instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="generateBundles">Determines if schema bundles should be generated after save.</param>
            <returns><c>true</c> if schema is successfully saved; otherwise, <c>false</c>.</returns>
            <remarks>
            The method is overloaded.
            The method calls method <see cref="M:Terrasoft.Core.SchemaManager`1.SaveSchemaInCustomPackage(System.Guid,System.Boolean,Terrasoft.Core.UserConnection,System.Boolean)"/>,
            with second argument value - <c>false</c>.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaSource(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ########## ######## ### ##### # ######## ###############.
            </summary>
            <param name="schemaUId">############# #####, ######## ### ####### ##### ##########.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ######## ### ##### # ############### <paramref name="schemaUId"/> ####
            <c>null</c>, #### ######## ### ######## ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaMetaDataDifferencePackage(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ########## ##### ####### ##### ###### # ######## ############### # ## ############ ######.
            </summary>
            <param name="schemaUId">############# #####, ##### ####### ### ####### ##### ##########.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ##### ####### ##### ####### ###### # ###### # ###############
            <paramref name="schemaUId"/> #### <c>null</c>, #### ##### ####### ############ ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            Gets metadata with target identifier.
            </summary>
            <param name="schemaUId">Identifier of schema.</param>
            <param name="userConnection">Users connection.</param>
            <returns>Stream with metadata of schema with target id <paramref name="schemaUId"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDefSchemaUId">
            <summary>
            ########## ############# #####, ## ####### ########### ### ####### ##### ######### ####.
            </summary>
            <returns>############# #####, ## ####### ########### ### ####### ##### ######### ####.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GenerateItemUniqueName(System.String)">
            <summary>
            ########## ########## ### ######## ######### # ############## ######### ########.
            </summary>
            <param name="prefix">#######.</param>
            <returns>########## ### ######## ######### # ######### <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GenerateItemUniqueCaption(System.String)">
            <summary>
            ########## ########## ######### ######## ######### # ############## ######### ########.
            </summary>
            <param name="prefix">#######.</param>
            <returns>########## ######### ######## ######### # ######### <paramref name="prefix"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaData(System.Guid,Terrasoft.Core.UserConnection)">
            <summary>
            ######## ########## ##### # ######## ############### # #######, ####### ### ######.
            </summary>
            <param name="schemaUId">############# #####, ########## ####### ##### ########.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ########## ##### # ############### <paramref name="schemaUId"/> # #######,
            ####### ### ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaDataText(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection,System.Boolean,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetReadableSchemaMetaData(Terrasoft.Core.MetaSchema,Terrasoft.Core.UserConnection)">
            <summary>
            ######## ########## ######## ##### # #######, ####### ### ######.
            </summary>
            <param name="schema">#####, ########## ####### ##### ########.</param>
            <param name="userConnection">################ ###########.</param>
            <returns>#####, ########## ########## ##### <paramref name="schema"/> # #######, ####### ### ######.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveSchemaSources(Terrasoft.Core.Entities.EntityCollection)">
            <summary>
            ######### ######## #### ## ########## #########.
            </summary>
            <param name="sources">######### ######## #####, ####### ##### #########.</param>
            <returns>
            <c>true</c>, #### ### ######## #### ## ######### <paramref name="sources"/> ######### #######;
            <c>false</c> - #### #### ## #### ####### ######### ## ### ########.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaSources(System.Guid,System.Guid,Terrasoft.Core.UserConnection,System.String@)">
            <summary>
            ######### ######### ########, ########## ######## #### ##### # ######## ###############.
            </summary>
            <param name="schemaUId">############# #####, ######## #### ####### ##### ########.</param>
            <param name="schemaId">############# ###### # ####### SysSchema.</param>
            <param name="userConnection">################ ###########.</param>
            <param name="errorMessage">######### ## ###### ### ######### ######## ##### #####.</param>
            <returns>######### ######## # ######### ###### ##### # ############### <paramref name="schemaUId"/>.
            #### ### ######### ######## ##### ######### ######, ##### ######### <c>null</c>, # #
            ######### <paramref name="errorMessage"/> ##### ########## ######### ## ######.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.DropInstances">
            <summary>
            ####### ########## #### #### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ############ ##### ############## ######## # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ####### #####.</param>
            <returns>############# ####### # ############### <paramref name="uid"/> ####
            <c>null</c>, #### ##### ##### ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ########## ############# ####### # ######## ###############. #### ##### ####### ## ######, ############
            ##########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ############# ########.</param>
            <returns>############# ####### # ############### <paramref name="uid"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ############# ####### # ############### <paramref name="uid"/>
            ## #######.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetSchemaDesignItem(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ########## ############## ############# ####### # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# #####.</param>
            <returns>############## ############# ####### # ###############
            <paramref name="uid"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.FindDesignInstance(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ############ ##### ########## ############# ##### # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ########## ############# #####.</param>
            <returns>######### ############# ##### # ############### <paramref name="uid"/>. #### ######### ## ######,
            ############ <c>null</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDesignInstance(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ########## ######### ############# ##### # ######## ###############. #### ##### ##### ## #######,
            ############ ##########.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ########## ############# #####.</param>
            <returns>######### ############# ##### # ############### <paramref name="uid"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">#### ######### ############# ##### # ###############
            <paramref name="uid"/> ## ###### # ######## ######### ####.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemInSessionData(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            ########### # ######### # ###### ###### ######### ######## ############# #####.
            </summary>
            <param name="designItem">####### #########, ########## ############# #####, ######### ####### ########### #
            ###### ######.</param>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemInSessionData(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            ########### # ######### # ###### ###### ######### ######## ############## ############# #####.
            </summary>
            <param name="designItem">####### #########, ########## ############## ############# #####, #########
            ####### ########### # ###### ######.</param>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemInSessionData(Terrasoft.Core.UserConnection,Terrasoft.Core.MetaSchema,System.Guid)">
            <summary>
            ########### # ######### # ###### ###### ######### ############# ##### # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="designedItem">######### ############## ######## #########.</param>
            <param name="designedItemId">############# ########### ############# #####.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.SaveDesignedItemFolderIdInSessionData(Terrasoft.Core.UserConnection,System.Guid,System.Guid)">
            <summary>
            ######### # ###### ###### ########## ############# ########, # ####### ######## ############# #####
            ######## # ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="designedItemId">############# ############## ########.
            </param>
            <param name="designedItemFolderId">############# ########, # ####### ######## ############# ##### ########
            # ############### <paramref name="designedItemId"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetDesignedItemFolderIdFromSessionData(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ########## ## ###### ###### ############# ########, # ####### ######## ############# ##### ######## #
            ######## ###############.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="designedItemId">############# ########, ####### ######## ######## ############# #####.
            </param>
            <returns>############# ########, # ####### ######## ############# ##### <paramref name="designedItemId"/>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveDesignedItemFromSessionData(Terrasoft.Core.UserConnection,System.Guid)">
            <summary>
            ####### ############# ####### # ######## ############### ## ###### ######.
            </summary>
            <param name="userConnection">################ ###########.</param>
            <param name="uid">############# ############## ########.</param>
            <remarks>##### ##########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.RemoveDesignedItemFromSessionData(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            ####### ######## ############# ####### ## ###### ######.
            </summary>
            <param name="designItem">############# ####### #########, ####### ###### #### ######.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.GetHash">
            <summary>
            Returns the hash for this item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.IsInheritedFrom(System.Guid,System.Guid)">
            <summary>
            Returns flag that indicates if schema is inherited from specified parent schema.
            </summary>
            <param name="uId">Schema identifier.</param>
            <param name="parentUId">Parent schema identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManager`1.CheckUserPropertyRights(Terrasoft.Core.UserConnection)">
            <summary>
            Check access for SysSchemaUserProperty operations.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItem`1">
            <summary>
            Schema manager item.
            </summary>
            <seealso cref="T:Terrasoft.Core.ManagerItem`1" />
            <seealso cref="T:Terrasoft.Core.ISchemaManagerItem`1" />
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.#ctor(Terrasoft.Core.SchemaManager{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="manager">Schema manager in which this instance is created
            <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.#ctor(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class
            without cloning item's instance.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.#ctor(Terrasoft.Core.ISchemaManagerItem{`0},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerItem`1"/> class.
            </summary>
            <param name="source">Manager item to initialize current item from.</param>
            <param name="isShallowClone">
            Flag that indicates whether the item's instance will not be cloned too.
            </param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.IsNetStandard">
            <summary>
            Gets or sets a value indicating whether schema is compatible with .netstandard or not.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.UserConnection">
            <summary>
            User connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.IsInstanceInitialized">
            <summary>
            Shows is this schema initialized
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Instance">
            <summary>
            Initialized schema instance 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.SafeInstance">
            <summary>
            Initialized safe schema instance If not initialized returns <c>null</c>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Name">
            <summary>
            Name of manager element
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Caption">
            <summary>
            Title of manager element
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Manager">
            <summary>
            Manager instance
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Description">
            <summary>
            Description of manager instance
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.FolderId">
            <summary>
            Manager Catalog 
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.IsCoreSchema">
            <summary>
            Is schema system
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Terrasoft#Core#IManagerItem#Manager">
            <summary>
            Schema manager
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ManagerItem">
            <summary>
            Manager element
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.UserId">
            <summary>
            Unique User Identifier
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Assembly">
            <summary>
            Schema assembly
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.AssemblyRefCount">
            <summary>
            Linked Assembly count
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ManagerName">
            <summary>
            Schema manager name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ParentUId">
            <summary>
            Parent schema identifier
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ReferenceSchemaUIds">
            <summary>
            List of Linked schemas
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.TypeName">
            <summary>
            Schema type name
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ExtraProperties">
            <summary>
            Schema additional properties
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.UserProperties">
            <summary>
            Item user properties.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.SysSchemaInSolutionId">
            <summary>
            Identifier in table SysSchemaInSolution.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Descriptor">
            <summary>
            Manager element descriptor
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.RealParentItemUId">
            <summary>
            Unique identifier parent manager element
            which contains unique Id parent schema
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.DenyExtending">
            <summary>
            Deny extending
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ModifiedOn">
            <summary>
            Item's modification time.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.ResourceModifiedOn">
            <summary>
            Resource modification date
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItem`1.Checksum">
            <summary>
            Schema manager item checksum.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.GetHashData">
            <summary>
            Prepares data for hashing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.Actualize(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Launch actualization of source item
            Used for apply actions of source item's children 
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.ForceGetInstance">
            <summary>
            Returns instance of current Schema
            if it not exists initializes it
            </summary>
            <returns>Instance of schema.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.DropInstance">
            <summary>
            Removes instance
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.Assign(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Sets properties from source manager item. 
            </summary>
            <param name="source">Manager item source.
            </param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.AssignShallow(Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Sets properties from source manager item. 
            </summary>
            <param name="source">Manager item source.
            </param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.Assign(`0)">
            <summary>
            Sets for current manager element properties of transmitted schema
            </summary>
            <param name="source">Schema which properties are translated for current manager element.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.AssignUserProperties(Terrasoft.Core.UserPropertyCollection)">
            <summary>
            Sets user properties from source collection.
            </summary>
            <param name="source">User properties source.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.GetHash">
            <summary>
            Returns the hash for this item.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.Invalidate">
            <summary>
            Invalidates manager item instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.SetPropertyValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the property value by instance expression.
            </summary>
            <typeparam name="TValue">The type of property to set.</typeparam>
            <param name="expression">Expression that locates property.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.FindPropertyValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItem`1.GetPropertyValue``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the property value by instance expression.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="propertyExpression">Expression that locates property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemCollection`1">
            <summary>
            Manager items collection.
            </summary>
            <typeparam name="TSchemaManagerSchema">Collection element type.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.#ctor(Terrasoft.Core.SchemaManager{`0})">
            <summary>
            Initializes an instance of <see cref="T:Terrasoft.Core.SchemaManagerItemCollection`1"/>
            for a specified manager item.
            </summary>
            <param name="manager">Schema manager.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.Manager">
            <summary>
            Schema manager.
            </summary>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdding">
            <summary>
            Occurs before adding an item to the collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemAdding">
            <summary>
            Indicates whether <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdding"/> event is being processed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemAdding(Terrasoft.Core.SchemaManagerItemBeforeAddEventArgs)">
            <summary>
            Raises the <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdding"/> event.
            </summary>
            <param name="e">Object containing event data.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdded">
            <summary>
            Occurs after adding an item to the collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemAdded">
            <summary>
            Indicates whether event <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdded"/> is being processed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemAdded(Terrasoft.Core.SchemaManagerItemAfterAddEventArgs)">
            <summary>
            Raises the <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemAdded"/> event.
            </summary>
            <param name="e">Object containing event data.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoving">
            <summary>
            Occurs before removing an item from the collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemRemoving">
            <summary>
            Indicates whether event <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoving"/> is being processed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemRemoving(Terrasoft.Core.SchemaManagerItemBeforeRemoveEventArgs)">
            <summary>
            Raises the <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoving"/> event.
            </summary>
            <param name="e">Object containing event data.</param>
        </member>
        <member name="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoved">
            <summary>
            Occurs after removing an item from the collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemCollection`1.IsInItemRemoved">
            <summary>
            Indicates whether event <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoved"/> is being processed.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.OnItemRemoved(Terrasoft.Core.SchemaManagerItemAfterRemoveEventArgs)">
            <summary>
            Raises the <see cref="E:Terrasoft.Core.SchemaManagerItemCollection`1.ItemRemoved"/> event.
            </summary>
            <param name="e">Object containing event data.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.InsertItem(System.Int32,Terrasoft.Core.ISchemaManagerItem{`0})">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindByUId(System.Guid,System.Guid)">
            <summary>
            Searches for an item by specified item identifier and user identifier.
            </summary>
            <param name="uid">Item identifier.</param>
            <param name="userId">User identifier.</param>
            <returns>Schema manager item that matches specified parameters values.
            Returns <c>null</c> if item is not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetByUId(System.Guid,System.Guid)">
            <summary>
            Returns an item with specified item identifier and user identifier.
            </summary>
            <param name="uid">Item identifier.</param>
            <param name="userId">User identifier.</param>
            <returns>Item with specified <paramref name="uid"/> and <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when item with <paramref name="uid"/>
            which belongs to user with <paramref name="userId"/> is not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindInstanceByUId(System.Guid,System.Guid)">
            <summary>
            Searches for an item by specified item instance identifier and user identifier.
            </summary>
            <param name="uid">Item identifier.</param>
            <param name="userId">User identifier.</param>
            <returns>Schema manager item that matches specified parameters values.
            Returns <c>null</c> if item is not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetInstanceByUId(System.Guid,System.Guid)">
            <summary>
            Returns an item with specified item identifier and user identifier if item instance is not <c>null</c>.
            </summary> 
            <param name="uid">Item identifier.</param>
            <param name="userId">User Identifier.</param>
            <returns>item with specified <paramref name="uid"/> and <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when item with <paramref name="uid"/>
            which belongs to user with <paramref name="userId"/> is not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindByName(System.String,System.Guid)">
            <summary>
            Searches for an item by specified item name and user identifier.
            </summary>
            <param name="name">Item name.</param>
            <param name="userId">User identifier.</param>
            <returns>Schema manager item that matches specified parameters values.
            Returns <c>null</c> if item is not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetByName(System.String,System.Guid)">
            <summary>
            Returns an item with specified item name and user identifier.
            </summary>
            <param name="name">Item name.</param>
            <param name="userId">User identifier.</param>
            <returns>Item with specified <paramref name="name"/> and <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when item with <paramref name="name"/>
            which belongs to user with <paramref name="userId"/> is not found.</exception>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.FindInstanceByName(System.String,System.Guid)">
            <summary>
            Searches for an item by specified item instance name and user identifier.
            </summary>
            <param name="name">Item name.</param>
            <param name="userId">User identifier.</param>
            <returns>Schema manager item that matches specified parameters values.
            Returns <c>null</c> if item is not found.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemCollection`1.GetInstanceByName(System.String,System.Guid)">
            <summary>
            Returns an item with specified item instance name and user identifier.
            </summary>
            <param name="name">Item instance name.</param>
            <param name="userId">User identifier.</param>
            <returns>Item with specified instance <paramref name="name"/> and <paramref name="userId"/>.</returns>
            <exception cref="T:Terrasoft.Common.ItemNotFoundException">Thrown when item with instance <paramref name="name"/>
            which belongs to user with <paramref name="userId"/> is not found.</exception>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemDescriptor">
            <summary>
            ########## ######## ######### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemDescriptor.IsInitialized">
            <summary>
            ####### ####, ### ########## ##################.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemDescriptor.ReadMetaData(Terrasoft.Common.DataReader)">
            <summary>
            ######### ############## ###########.
            </summary>
            <param name="reader">
            ######### <see cref="T:Terrasoft.Common.DataReader"/>, # ####### ######## ############## ##############.
            </param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerItemDescriptor.WriteMetaData(Terrasoft.Common.DataWriter)">
            <summary>
            ######### ############ ###########.
            </summary>
            <param name="writer">
            ######### <see cref="T:Terrasoft.Common.DataWriter"/>, # ####### ######## ############## ############.
            </param>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerItemInfo">
            <summary>
            Schema manager item info class.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.SchemaId">
            <summary>
            Schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.SchemaName">
            <summary>
            Schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.ParentSchemaId">
            <summary>
            Parent schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.BaseSchemaId">
            <summary>
            Base schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.PackageId">
            <summary>
            Package identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.PackageName">
            <summary>
            Package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.OldSchemaName">
            <summary>
            Old schema name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.OldParentSchemaId">
            <summary>
            Old parent schema identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.OldPackageId">
            <summary>
            Old package identifier.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.OldPackageName">
            <summary>
            Old package name.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.IsSchemaNew">
            <summary>
            Determines if schema is new.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerItemInfo.ExtendParent">
            <summary>
            Determines if schema extends parent.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaManagerProvider">
            <summary>
            Provides methods and properties to manage schema managers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerProvider.#ctor(Terrasoft.Core.AppConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Terrasoft.Core.SchemaManagerProvider"/> class.
            </summary>
            <param name="appConnection">Application connection.</param>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerProvider.Workspace">
            <summary>
            Workspace.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerProvider.AppConnection">
            <summary>
            Application connection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerProvider.ManagerNames">
            <summary>
            Manager names collection.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SchemaManagerProvider.Terrasoft#Core#ISchemaManagerProvider#ManagerNames">
            <summary>
            Manager names collection.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerProvider.GetManager(System.String)">
            <summary>
            Creates schema manager.
            </summary>
            <param name="managerName">Schema manager name.</param>
            <returns>Schema manager.</returns>
            <remarks>
            Schema manager is created only once. After creating it is cached and will be returned on next request.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerProvider.GetManager``1">
            <summary>
            Creates schema manager.
            </summary>
            <typeparam name="T">Schema manager type.</typeparam>
            <returns>Schema manager.</returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerProvider.Initialize(System.Configuration.ConfigurationSection)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.SchemaManagerProvider"/> class 
            </summary>
            <param name="schemaManagerProviderConfigurationSection">Configuration data.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaManagerProvider.RefreshManager(System.String)">
            <summary>
            Refreshes schema manager.
            </summary>
            <param name="managerName">Schema manager name.</param>
            <remarks>Refreshes only cached schema manager.</remarks>
        </member>
        <member name="M:Terrasoft.Core.ChangedSchemaMethod.#ctor">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.ChangedSchemaMethod"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ChangedSchemaMethod.#ctor(System.String,System.Boolean)">
            <summary>
            ############## ##### ######### ###### <see cref="T:Terrasoft.Core.ChangedSchemaMethod"/>.
            </summary>
            <param name="name">### ######.</param>
            <param name="isNew">#######, ##### ### ######, ## ### ## ###########.</param>
        </member>
        <member name="P:Terrasoft.Core.ChangedSchemaMethod.Name">
            <summary>
            ### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.ChangedSchemaMethod.IsNew">
            <summary>
            #######, ##### ### ######, ## ### ## ###########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaResourceStorage">
            <summary>
            Provides methods for receiving schema resource managers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaResourceStorage.#ctor(Terrasoft.Core.Configuration.SysWorkspace)">
            <summary>
            Initializes an instance of the <see cref="T:Terrasoft.Core.SchemaResourceStorage"/> class for the specified
            <paramref name="workspace" />.
            </summary>
            <param name="workspace">Workspace.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            In case if <paramref name="workspace" /> is <c>null</c>.
            </exception>
        </member>
        <member name="P:Terrasoft.Core.SchemaResourceStorage.Managers">
            <summary>
            Contains all loaded resource managers.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaResourceStorage.GetManager(System.String)">
            <summary>
            Returns resource manager from current storage.
            </summary>
            <param name="managerName">Name of resource manager.</param>
            <returns>
            Instance of <see cref="T:Terrasoft.Common.IResourceManager"/> with name <paramref name="managerName"/>.
            </returns>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">
            In case if <paramref name="managerName" /> is <c>null</c> or empty string.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.SchemaResource.ILocalizableMetaItem">
            <summary>
            Schema metadata item with localizable properties.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.ILocalizableMetaItem.InitializeLocalizableValues(Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>Initializes the localizable values.</summary>
            <param name="storage">The resource storage.</param>
            <param name="resourceManagerName">Name of the resource manager.</param>
            <param name="resourceGroupName">Name of the resource group.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.ILocalizableMetaItem.GetLocalizableValues(System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>Gets the localizable values.</summary>
            <param name="values">The values container.</param>
            <param name="shouldIncludeInherited">if set to <c>true</c> inherited values should be included.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.ILocalizableMetaItem.LoadLocalizableValues">
            <summary>Loads the localizable values.</summary>
        </member>
        <member name="T:Terrasoft.Core.SchemaResource.ISchemaResourceInvalidator">
            <summary>
            Provides methods for schema resources invalidating.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.ISchemaResourceInvalidator.Invalidate(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Invalidates resources for provided <paramref name="schemaNames"/>, reinitializes all schema managers 
            and regenerates combined schema sources.
            </summary>
            <param name="schemaNames">Schema names.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.ISchemaResourceInvalidator.InvalidateSchemaResources(Terrasoft.Core.Schema)">
            <summary>
            Invalidates resources for provided <paramref name="schema"/> so resources owned by schema can be 
            collected by GC.
            </summary>
            <param name="schema">Schema, resources of which to invalidate.</param>
        </member>
        <member name="T:Terrasoft.Core.SchemaResource.LocalizationUtilities">
            <summary>
            Provides helper methods to deal with schema items localization.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities.IsLocalizableMetaItemCollectionType(System.Type)">
            <summary>
            Determines whether <paramref name="type"/> is sequence of localizable meta items.
            </summary>
            <param name="type">The type to check.</param>
            <returns>
            <c>true</c> if <paramref name="type"/> is sequence of localizable meta items; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities.IsLocalizableMetaItemType(System.Type)">
            <summary>
            Determines whether <paramref name="type"/> is localizable meta item.
            </summary>
            <param name="type">The type.</param>
            <returns>
            <c>true</c> if <paramref name="type"/> is localizable meta item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities.IsLocalizableStringType(System.Type)">
            <summary>
            Determines whether <paramref name="type"/> is localizable string.
            </summary>
            <param name="type">The type.</param>
            <returns>
            <c>true</c> if <paramref name="type"/> is localizable string; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.SchemaResource.LocalizationUtilities`1">
            <summary>
            Provides helper methods to deal with schema items localization. It handles public properties defined in 
            <typeparamref name="TObject"/> that have type <see cref="T:Terrasoft.Common.LocalizableString"/>,
            <see cref="T:Terrasoft.Core.SchemaResource.ILocalizableMetaItem"/> or <see cref="T:System.Collections.Generic.IEnumerable`1"/> where items implements both
            <see cref="T:Terrasoft.Core.SchemaResource.ILocalizableMetaItem"/> and <see cref="T:Terrasoft.Core.IMetaItem"/>.
            </summary>
            <typeparam name="TObject">The type of the schema item.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities`1.LoadLocalizableValues(`0)">
            <summary>Loads the localizable values.</summary>
            <param name="instance">The instance which values should be loaded.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities`1.GetLocalizableValues(`0,System.Collections.Generic.ICollection{Terrasoft.Common.LocalizableValue},System.Boolean)">
            <summary>Gets the localizable values.</summary>
            <param name="instance">The instance which values should be returned.</param>
            <param name="values">The localizable values.</param>
            <param name="shouldIncludeInherited">if set to <c>true</c> inherited values should be included.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities`1.InitializeLocalizableValues(`0,Terrasoft.Common.IResourceStorage,System.String,System.String)">
            <summary>Initializes the localizable values.</summary>
            <param name="instance">The instance which values should be initialized.</param>
            <param name="storage">The resource storage.</param>
            <param name="resourceManagerName">Name of the resource manager.</param>
            <param name="resourceGroupName">Name of the resource group.</param>
        </member>
        <member name="M:Terrasoft.Core.SchemaResource.LocalizationUtilities`1.CopyLocalizableStrings(`0,`0)">
            <summary>Copies the localizable strings from <paramref name="source"/> instance to
            <paramref name="destination"/>.</summary>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="T:Terrasoft.Core.SecurityUtilities">
            <summary>
            Utility class. Provides methods for secure work with application.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SecurityUtilities.RemoveLocalPath(System.String)">
            <summary>
            Removes local path to file or directory if FileDesign mode is disabled.
            </summary>
            <param name="stringWithLocalPath">Full path to current to file or directory in filesystem.</param>
            <returns>Relative path to object if FileDesign mode is disabled, 
            or full path if FileDesign mode is enabled.</returns>
        </member>
        <member name="P:Terrasoft.Core.SourceCodeSchema.InnerBody">
            <summary>
            Cached CS content from metadata.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SourceCodeSchema.BaseSchemaUId">
            <summary>
            Unique identifier of base schema.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SourceCodeSchema._body">
            <summary>
            CS content of current ClientUnitSchema.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SourceCodeSchema.SchemaContentReader">
            <summary>
            Returns new instance of <see cref="T:Terrasoft.Core.DesignMode.ISchemaContentReader"/> implementation.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.SSPSecurityEngine.IsReadOnlyMode">
            <summary>
            Indicates whether read only mode is enabled.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SSPSecurityEngine.IsExceededAllowedSspCustomEntities">
            <summary>
            Indicates, that user has exceeded allowed custom entities for portal.
            </summary>
            <returns>True, if exceeded allowed custom entities, otherwise - false.</returns>
            <remarks>When user has 0 allowed custom entities, than count of custom entities not exceeded.</remarks>
        </member>
        <member name="M:Terrasoft.Core.SSPSecurityEngine.IsExceededAllowedSspEntitySchemaCount">
            <summary>
            Indicates, that user has exceeded allowed entity schemas for portal.
            </summary>
            <returns>True, if exceeded allowed entity schemas, otherwise - false.</returns>
        </member>
        <member name="M:Terrasoft.Core.SSPSecurityEngine.ClearCachedAllowedColumns(Terrasoft.Core.UserConnection)">
            <summary>
            Clears cached allowed portal columns.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.SSPUserConnection.GetSecurityEngineType">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Store.BaseStoreProvider`2">
            <summary>
            ####### ##### ########## #########.
            </summary>
            <typeparam name="TStore">#####, ############ ### #########.</typeparam>
            <typeparam name="TStoreLevel">#########, ######## ####### ########## ###### ####### # ###### #########.
            </typeparam>
        </member>
        <member name="P:Terrasoft.Core.Store.BaseStoreProvider`2.Item(`1)">
            <summary>
            ########## ### ####### # ######### #### <typeparamref name="TStore"/> # ######## ####### ####### # ###### 
            #########.
            </summary>
            <param name="level">####### ####### # ###### #########.</param>
            <returns>######### ######### #### <typeparamref name="TStore"/> # ####### ####### # ###### 
            <paramref name="level"/>.</returns>
            <exception cref="T:Terrasoft.Common.InvalidObjectStateException">#### ######### ## ################ ## ####### 
            <paramref name="level"/>.
            </exception>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheStoreProvider">
            <summary>
            ######### ####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreProvider.#ctor">
            <summary>
            ############# ######### <see cref="T:Terrasoft.Core.Store.CacheStoreProvider"/>.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.CacheStoreProvider.Empty">
            <summary>
            ########## ###### ###.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheStoreUtilities">
            <summary>
            Provides utility methods for working with the data store and cache.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.LocalOnly(Terrasoft.Core.Store.CacheStoreProvider,System.String)">
            <summary>
            Applies local storage of data when working with the cache.
            </summary>
            <param name="source">Cache provider.</param>
            <param name="groupName">Name of the entry cache group.</param>
            <returns>Instance that implements the <see cref="T:Terrasoft.Core.Store.ISynchronizedLocalCache"/> interface.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.WithLocalCaching(Terrasoft.Core.Store.ICacheStore,System.String)">
            <summary>######### ######### ######## ###### ### ###### # #####.</summary>
            <param name="source">###.</param>
            <param name="groupName">### ###### ######### ### ######## ############. ### ########, ####### 
            ########## # ###### ###### ##### ###### ############ ### ###### ###### <see cref="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)"/>.</param>
            <returns>###-#######, ############## ######### ######## ###### # ######## ######## ############ ###### # 
            ############## ####. ####### ############ ########### ### ###### ######### # #######.</returns>
            <remarks>############# ############ ###### # ###### ###### # ##### # ############ "#######" ######## 
            (########, ### # ######## ## ####) # ### ############ ####### ########## #########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.WithLocalCaching(Terrasoft.Core.Store.ICacheStore)">
            <summary>######### ######### ######## ###### ### ###### # #####. ###### ########## # ### ####### ##### 
            ##### #### ########### ####### ############.</summary>
            <param name="source">###.</param>
            <returns>###-#######, ############## ######### ######## ###### # ######## ######## ############ ###### # 
            ############## ####. ####### ############ ########### ### ###### ######### # #######.</returns>
            <remarks>############# ############ ###### # ###### ###### # ##### # ############ "#######" ######## 
            (########, ### # ######## ## ####) # ### ############ ####### ########## #########.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.WithLocalCachingOnly(Terrasoft.Core.Store.ICacheStore,System.String,System.Boolean)">
            <summary>############ ######### ######## ###### # ############ ############ ###### # ############## 
            ########## (###########) ####.</summary>
            <param name="source">###.</param>
            <param name="groupName">### ###### ######### ### ######## ############. ### ########, ####### 
            ########## # ###### ######, ##### ###### ############ ### ###### ###### <see cref="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)"/>.</param>
            <param name="ignoreUserIdentity">####### ####### ##### ######## ############ # ############ #####
            ####### # ####.</param>
            <returns>###-#######, ############## ######### ######## ###### # ######## ######## ############ ###### # 
            ############## ####. ####### ############ ########### ### ###### ######### # #######.</returns>
            <remarks>#### ###### # ### ## ########## - # #### ########### ###### ####### ############ ######. 
            ######## # ######### #### ###### ############ ###### ### ###### ###### <see cref="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)"/>, ## ## 
            ### ###### ###### ####### # ###.</remarks>
            <exception cref="T:System.ArgumentException">#### # ######## ######### <paramref name="groupName"/> ######## ###### 
            ###### ### <c>null</c>.</exception>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.ExpireGroup(Terrasoft.Core.Store.ICacheStore,System.String)">
            <summary>############# ####### ########### ### ######## ###### ######### ####.</summary>
            <param name="source">###.</param>
            <param name="groupName">### ###### #########.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.SetOrRemoveValue(Terrasoft.Core.Store.ICacheStore,System.String,System.Object)">
            <summary>########## ####### ###### ######## <paramref name="value"/> # ### ## ##### <paramref name="key"/>.
            # ######, #### <paramref name="value"/> == <c>null</c>, ####### #### ## ####.</summary>
            <param name="source">###.</param>
            <param name="key">####, ## ######## ######## <paramref name="value"/> ############ # ###.</param>
            <param name="value">########, ####### ############ # ### ## ##### <paramref name="key"/>.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetValue``1(Terrasoft.Core.Store.IBaseStore,System.String)">
            <summary>######## ## ######### ###### ### #### ######## ## ##### <paramref name="key"/> # ######## 
            ########## ######## # ######### ####. #### ######## ## ##### ## #######, ##### ########## <c>null</c>.
            </summary>
            <typeparam name="T">###, # ######## ########## ########, ########## ## #########/####.</typeparam>
            <param name="source">######### ###### ### ###.</param>
            <param name="key">#### ########.</param>
            <returns>######## ## ##### <paramref name="key"/>, ########## # #### <typeparamref name="T"/> #### 
            <c>null</c>, #### ######## ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetValue``1(Terrasoft.Core.Store.IBaseStore,System.String,``0)">
            <summary>######## ## ######### ###### ### #### ######## ## ##### <paramref name="key"/> # ######## 
            ########## ######## # ######### ####. #### ######## ## ##### ## #######, ##### ########## 
            ######## ######## ## #########.</summary>
            <typeparam name="T">###, # ######## ########## ########, ########## ## #########/####.</typeparam>
            <param name="source">######### ###### ### ###.</param>
            <param name="key">#### ########.</param>
            <param name="defaultValue">######## ## #########, ####### ##### ########## #######, #### ## ####### #####
            ######## # #########/#### ## #######.</param>
            <returns>######## ## ##### <paramref name="key"/>, ########### # #### <typeparamref name="T"/> ### 
            <paramref name="defaultValue"/>, #### ######## ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.Pop``1(Terrasoft.Core.Store.IDataStore,System.String)">
            <summary>######## ## ######### ###### ######## ## ##### <paramref name="key"/>, ######## 
            ########## ######## # ######### #### # ####### ###### #### ## #########.</summary>
            <typeparam name="T">###, # ######## ########## ########, ########## ## ######### ######.</typeparam>
            <param name="source">######### ######.</param>
            <param name="key">#### ########.</param>
            <returns>######## ## ##### <paramref name="key"/>, ########### # #### <typeparamref name="T"/> ### 
            <c>null</c>, #### ######## ## #######.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetValues(Terrasoft.Core.Store.ICacheStore,System.String[])">
            <summary>########## ######## ## #### ## ######### ###### ######.</summary>
            <param name="source">###.</param>
            <param name="keys">######## ######, ### ####### ######### ######## ########.</param>
            <returns>#######, ########## #### ###### ###### # ############### #### ###### ########. #### ######## ##
            ############# ##### ## #### #######, ## ###### # ####### ##### ##############, ## ## ######## ##### 
            ##### <c>null</c>.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetRootStore(Terrasoft.Core.Store.ICacheStore)">
            <summary>
            ########## ######## ###.
            </summary>
            <param name="source">###.</param>
            <returns>######## ###.</returns>
            <remarks>##### ############ ## ####### ######-########, ####### ## <paramref name="source"/>, #### ## 
            ######### ###### ####### (#########) ####.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.GetRootStore(Terrasoft.Core.Store.IDataStore)">
            <summary>
            ########## ######## ######### ######.
            </summary>
            <param name="source">######### ######.</param>
            <returns>######## ######### ######.</returns>
            <remarks>##### ############ ## ####### ######-########, ####### ## <paramref name="source"/>, #### ## 
            ######### ###### ####### (#########) ######### ######.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.CacheStoreUtilities.AdjustRawGetValuesResult(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            ######### ########## ####### ## ########## ## ########### # ### ######## # ######### #######.
            </summary>
            <param name="keys">###### ######, ####### ####### ########### # ####### 
            <paramref name="rawGetValuesResult"/>.</param>
            <param name="rawGetValuesResult">#######, # ####### ########### ####### ######## # ####### 
            <paramref name="keys"/>.</param>
            <returns>####### ## ########## ### ###### <paramref name="keys"/>. #### # ########## ####### 
            <paramref name="rawGetValuesResult"/> ########## ############# ######## # #####-#### ###### ## 
            <paramref name="keys"/>, ## # ############ ####### ########### ###### # #### ###### # ######### 
            <c>null</c>. #### # ######## ####### <paramref name="rawGetValuesResult"/> ######## ######## <c>null</c>, 
            ## ##### ######### #######, # ####### ### ####### ##### ## <paramref name="keys"/> ######### ######## 
            <c>null</c>.</returns>
        </member>
        <member name="P:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Keys">
            <summary>
            Gets a collection containing the keys.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.IsLocalCache">
            <summary>
            Gets the value that indicates whether the data is stored in local memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Method does nothing.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Clear">
            <summary>
            Removes all keys and values from the current dictionary.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Terrasoft#Core#Store#IBucketedStore#Get(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Terrasoft#Core#Store#IBucketedStore#Set(System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Terrasoft#Core#Store#IBucketedStore#Clear(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Terrasoft#Core#Store#IBucketedStore#Remove(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentDictionaryAdapter.Terrasoft#Core#Store#IBucketedCacheStore#GetValues(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.Store.ConcurrentStorage`1">
            <inheritdoc cref="T:Terrasoft.Core.Store.IConcurrentStorage`1"/>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentStorage`1.#ctor(Terrasoft.Core.Store.ISynchronizedLocalCache,Terrasoft.Core.Store.IPersistentStoreDBProvider)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Store.ConcurrentStorage`1"/> type.
            </summary>
            <param name="localCache">Synchronized local cache.</param>
            <param name="dbProvider">Database provider of the persistent storage.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentStorage`1.Remove(System.String,System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.IConcurrentStorage`1.Remove(System.String,System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentStorage`1.AddOrUpdate(System.String,System.String,`0,System.Func{`0,System.Object},System.Func{`0,`0,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentStorage`1.AddOrUpdate(System.String,System.String,`0,System.Func{`0,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentStorage`1.GetOrInit(System.String,System.String,System.Func{System.Object,System.Object})">
            <inheritdoc cref="M:Terrasoft.Core.Store.IConcurrentStorage`1.GetOrInit(System.String,System.String,System.Func{System.Object,System.Object})"/>
        </member>
        <member name="M:Terrasoft.Core.Store.ConcurrentStorage`1.TryGetOrInitValue(System.String,System.String,`0@,System.Func{System.Object,System.Object})">
            <inheritdoc cref="M:Terrasoft.Core.Store.IConcurrentStorage`1.TryGetOrInitValue(System.String,System.String,`0@,System.Func{System.Object,System.Object})"/>
        </member>
        <member name="T:Terrasoft.Core.Store.DataStoreKeyTransformerProxy">
            <summary>
            ######-#####, ############# ##### ######### ###### ##### ########## # ##### ########.
            </summary>
            <remarks>###### ##### ############# ####### # ########### ######## ########### ########### ############ ###### 
            # #########. #### ######## ##### ############## ### ########## ########### # ######### ###### ######### 
            #############.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.#ctor(System.String)">
            <summary>
            ############## ######### ######-###### <see cref="T:Terrasoft.Core.Store.DataStoreKeyTransformerProxy"/> # ######## #########, 
            ####### ########### # ###### ######### #########.
            </summary>
            <param name="keyPrefix">#######, ####### ########### # ######.</param>
            <exception cref="T:Terrasoft.Common.ArgumentNullOrEmptyException">#### # ######## ######### <paramref name="keyPrefix"/> 
            ######## ###### ###### ### <c>null</c>.</exception>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Item(System.String)">
            <summary>
            ########## ### ############# ####### ######### ###### ## ######### #####.
            </summary>
            <param name="key">#### ########.</param>
            <returns>######## ######## ### ##### <paramref name="key"/> ### <c>null</c>, #### ####### ## ######. 
            </returns>
            <remarks>########## #### <paramref name="key"/> ############## ############# ######### #######: # #### 
            ########### #######, ############ ######### <see cref="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix"/>. ##### ##### ############ ### 
            ############### ####### ######### ###### # ########## ################## ######.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.DataStore">
            <summary>
            ######### ######, # ####### ######## ######-#####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix">
            <summary>
            ####### ##### ######## #########.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Keys">
            <summary>
            ###### #################### ###### #########.
            </summary>
            <remarks>##### ## #### ######### ###### ########### ######### ########## ##, ####### ########## ######### 
            <see cref="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix"/> # ########## ## # #################### #### (## #### ### ##### ########).
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Remove(System.String)">
            <summary>
            ####### ####### ######### ###### ## ######## #####.
            </summary>
            <param name="key">#### ########## ########.</param>
            <remarks>########## #### <paramref name="key"/> ############## ############# ######### #######: # #### 
            ########### #######, ############ ######### <see cref="P:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.KeyPrefix"/>. ##### ##### ## ######### ###### 
            ######### ####### # ########## ################## ######.</remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.DataStoreKeyTransformerProxy.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            ############# ######## ######-###### ########### ###########.
            </summary>
            <param name="parameters">######### ### #############.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.DataStoreProvider">
            <summary>
            ######### ######### ######.
            </summary>
            <remarks>########## ########## ######### ###### ######### # ########### ######## ########## ######### 
            <see cref="T:Terrasoft.Core.Store.BaseStoreProvider`2"/>.</remarks>
        </member>
        <member name="T:Terrasoft.Core.Store.DisabledSynchronizedLocalCache">
            <summary>
            <see cref="T:Terrasoft.Core.Store.ISynchronizedLocalCache" /> implementation thats not caches values. Should be used only for
            testing purposes.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.DisabledSynchronizedLocalCache.Instance">
            <summary>
            Instance.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.DisabledSynchronizedLocalCache.GetOrInit``1(System.String,System.Action{Terrasoft.Core.Store.ICacheEntry})">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.DisabledSynchronizedLocalCache.TryGetValue``1(System.String,``0@)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.DisabledSynchronizedLocalCache.Update``1(System.String,``0)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.DisabledSynchronizedLocalCache.Expire">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.Store.DisabledSynchronizedLocalCache.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Terrasoft.Core.Store.EmptyCacheStoreAdapter.IsLocalCache">
            <summary>
            #######, ############, ### ###### ######## # ######### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.ICacheEntry">
            <summary>
            Contains properties of cache entry.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheEntry.Key">
            <summary>
            The key of cache entry.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheEntry.Value">
            <summary>
            Gets or sets the value of cache entry.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheEntry.AbsoluteExpiration">
            <summary>
            Gets or sets a value that indicates whether a cache entry should be evicted after a specified duration.
            </summary>
            <value>
            The absolute expiration.
            </value>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheEntry.SlidingExpiration">
            <summary>
            Gets or sets a value that indicates whether a cache entry should be evicted if it has not been accessed 
            in a given span of time. If defined both with <see cref="P:Terrasoft.Core.Store.ICacheEntry.AbsoluteExpiration"/> the value of 
            <see cref="P:Terrasoft.Core.Store.ICacheEntry.AbsoluteExpiration"/> will be ignored.
            </summary>
            <value>
            The sliding expiration.
            </value>
        </member>
        <member name="T:Terrasoft.Core.Store.IConcurrentStorage`1">
            <summary>
            Represents a thread-safe storage that can be accessed by multiple threads concurrently.
            </summary>
            <typeparam name="TItem">Type of the data entry.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Store.IConcurrentStorage`1.AddOrUpdate(System.String,System.String,`0,System.Func{`0,System.Object},System.Func{`0,`0,System.Boolean})">
            <summary>
            Adds or updates a value to the concurrent storage if the key does not already exist, or updates a value
            in the concurrent storage.
            </summary>
            <param name="key">Key of the element to add or remove.</param>
            <param name="groupKey">Grouping key.</param>
            <param name="value">Value to be added or updated.</param>
            <param name="updateValueFactory">Function used to generate a value for the key.</param>
            <param name="shouldSkip">Function determines whether to update the value.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IConcurrentStorage`1.AddOrUpdate(System.String,System.String,`0,System.Func{`0,System.Object})">
            <summary>
            Adds or updates a value to the concurrent storage if the key does not already exist, or updates a value
            in the concurrent storage.
            </summary>
            <param name="key">Key of the element to add or remove.</param>
            <param name="groupKey">Grouping key.</param>
            <param name="value">Value to be added or updated.</param>
            <param name="updateValueFactory">Function used to generate a value for the key.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IConcurrentStorage`1.GetOrInit(System.String,System.String,System.Func{System.Object,System.Object})">
            <summary>
            Gets a value by using the specified function, if the key does not already exist.
            </summary>
            <param name="key">Key of the element to get.</param>
            <param name="groupKey">Grouping key.</param>
            <param name="valueFactory">Function used to generate a value for the key.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Store.IConcurrentStorage`1.Remove(System.String,System.String)">
            <summary>
            Removes data from the storage.
            </summary>
            <param name="key">Key of the element to remove.</param>
            <param name="groupKey">Grouping key.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IConcurrentStorage`1.TryGetOrInitValue(System.String,System.String,`0@,System.Func{System.Object,System.Object})">
            <summary>
            Tries to get the value of the specified type by generated key.
            </summary>
            <param name="key">Key of the element to get.</param>
            <param name="groupKey">Grouping key.</param>
            <param name="value">The current value of the specified type.</param>
            <param name="castDbValueFunc">Function converts a data base value to the specified type.</param>
            <returns>
            <c>true</c>, if the repository contains the value on the generated key; otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.Store.IPersistentStoreDBProvider">
            <summary>
            Database provider of the persistent storage.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.Get(System.String,System.String)">
            <summary>
            Get value by the given key and group key.
            </summary>
            <param name="key">Key of the data entry.</param>
            <param name="groupKey">Grouping key.</param>
            <returns>The result value.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.Add(System.String,System.Object,System.String)">
            <summary>
            Adds a data entry to the persistent storage.
            </summary>
            <param name="key">Key of the storage entry.</param>
            <param name="value">Value to be added.</param>
            <param name="groupKey">Grouping key.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.Remove(System.String,System.String)">
            <summary>
            Removes a data entry from the persistent storage.
            </summary>
            <param name="key">Key of the storage entry.</param>
            <param name="groupKey">Grouping key.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.GetGroup(System.String)">
            <summary>
            Get key/value pairs that can be retrieved from the persistent storage.
            </summary>
            <param name="groupKey">Grouping key.</param>
            <returns>Set of the key/value pairs where key is key of the data entry and
            value - value of the data entry.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.IPersistentStoreDBProvider.RemoveGroup(System.String)">
            <summary>
            Removes all data entries which are associated with given group key.
            </summary>
            <param name="groupKey">Grouping key.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.ISynchronizedLocalCache">
            <summary>
            Represents methods for working with distributed in-memory cache.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.ISynchronizedLocalCache.GetOrInit``1(System.String,System.Action{Terrasoft.Core.Store.ICacheEntry})">
            <summary>
            Returns the current cached value or initializes it with <paramref name="initEntryAction"/> delegate.
            </summary>
            <typeparam name="T">Type of the value to be got or initialized.</typeparam>
            <param name="key">The key of the cahce entry.</param>
            <param name="initEntryAction">The initialize entry action.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.Store.ISynchronizedLocalCache.TryGetValue``1(System.String,``0@)">
            <summary>
            Tries to get the value of the specified type by generated key.
            </summary>
            <param name="key">The key of the cahce entry.</param>
            <param name="value">The current value of the specified type.</param>
            <typeparam name="T">Type of the value to be returned.</typeparam>
            <returns>
            <c>true</c>, if the cache contains the value on the generated key; otherwise - <c>false</c>.</returns>
        </member>
        <member name="M:Terrasoft.Core.Store.ISynchronizedLocalCache.Update``1(System.String,``0)">
            <summary>
            Updates value of the specified cache entry.
            </summary>
            <typeparam name="T">Type of the value to be updated.</typeparam>
            <param name="key">The key of the cache entry.</param>
            <param name="value">The value of the cache entry.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.ISynchronizedLocalCache.Remove(System.String)">
            <summary>
            Removes a cache entry from the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry to remove.</param>
            <returns>
            <c>true</c>, if cache entry is found; otherwise - <c>false</c>.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Store.KeyTransformerProxy">
            <summary>
            ####### ##### ### ######-#######, ############# ##### ####.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.KeyTransformerProxy.IsLocalCache">
            <summary>
            #######, ############, ### ###### ######## # ######### ######.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.KeyTransformerProxy.Item(System.String)">
            <summary>
            ########## ### ############# ####### #### ## ######### #####. 
            </summary>
            <param name="key">#### ########.</param>
            <returns>######## ######## ### ##### <paramref name="key"/> ### <c>null</c>, #### ####### ## ######.
            </returns>
            <remarks>########## #### <paramref name="key"/> ############## ############# # ############ # ######### 
            ############# ###### ######-######, ##### #### ############ ### ############### ####### #### ## 
            ################### #####.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.KeyTransformerProxy.CacheStore">
            <summary>
            ###, # ####### ####### ######-#####.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.KeyTransformerProxy.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ########## ####### ######## ## #### ### ######### ###### ######. 
            </summary>
            <param name="keys">###### ######.</param>
            <returns>####### ######## ## #### ### ###### <paramref name="keys"/>.</returns>
            <remarks>###### #### ## ###### ############## ############# # ############ # ######### ############# 
            ###### ######-######, ##### #### # ############## ####### ######## ########### ########, ########## ## 
            #### ## ################### #####. #### ######## # ############## ####### ### #### ######## ##########.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.KeyTransformerProxy.Remove(System.String)">
            <summary>
            ####### ####### ## #### ## ######### #####.
            </summary>
            <param name="key">#### ########## ########.</param>
            <remarks>########## #### <paramref name="key"/> ############## ############# # ############ # ######### 
            ############# ###### ######-######, ##### #### ## #### ######### ####### ## ################### #####.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.KeyTransformerProxy.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            ############## ######## ######-###### ########### ###########.
            </summary>
            <param name="parameters">######### ### #############.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.LocalCache">
            <summary>
            Represents a local cache.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.#ctor(System.String,System.String,System.Runtime.Caching.MemoryCache)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Store.LocalCache"/> type.
            </summary>
            <param name="localCachePrefix">Prefix for the local cache.</param>
            <param name="groupName">Name of the entry cache group.</param>
            <param name="memoryCache">Memory cache.</param>
        </member>
        <member name="P:Terrasoft.Core.Store.LocalCache.GroupName">
            <summary>
            Gets the name of the entry cache group.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.LocalCache.LocalCachePrefix">
            <summary>
            Gets prefix for the local cache.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.GetIsExpired(Terrasoft.Core.Store.CacheEntry)">
            <summary>
            Defines whether the specified cache entry is expired.
            </summary>
            <param name="currentEntry">Cache entry.</param>
            <returns><c>false</c></returns>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.UpdateEntry``1(Terrasoft.Core.Store.CacheEntry,``0)">
            <summary>
            Updates value of the cache entry.
            </summary>
            <typeparam name="T">Type of the value to be updated.</typeparam>
            <param name="cacheEntry">Cache entry.</param>
            <param name="value">Value of the cache entry</param>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.GetOrInit``1(System.String,System.Action{Terrasoft.Core.Store.ICacheEntry})">
            <inheritdoc cref="M:Terrasoft.Core.Store.ISynchronizedLocalCache.GetOrInit``1(System.String,System.Action{Terrasoft.Core.Store.ICacheEntry})"/>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.Update``1(System.String,``0)">
            <inheritdoc cref="M:Terrasoft.Core.Store.ISynchronizedLocalCache.Update``1(System.String,``0)"/>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.Remove(System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.ISynchronizedLocalCache.Remove(System.String)"/>
        </member>
        <member name="M:Terrasoft.Core.Store.LocalCache.TryGetValue``1(System.String,``0@)">
            <inheritdoc cref="M:Terrasoft.Core.Store.ISynchronizedLocalCache.TryGetValue``1(System.String,``0@)"/>
        </member>
        <member name="P:Terrasoft.Core.Store.LocalCachingProxyBase.IsLocalCache">
            <summary>
            #######, ############, ### ###### ######## # ######### ######.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.MemoryCacheStore">
            <summary>
            The memory cache.
            </summary>
            <remarks>
            Data is cached in local memory.
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Store.MemoryCacheStore"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.#ctor(System.String,System.TimeSpan)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Store.MemoryCacheStore"/>.
            </summary>
            <param name="name">Cache name.</param>
            <param name="slidingExpiration">Values expiration time.</param>
        </member>
        <member name="P:Terrasoft.Core.Store.MemoryCacheStore.Item(System.String)">
            <summary>
            Gets or sets the value by its key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:Terrasoft.Core.Store.MemoryCacheStore.IsLocalCache">
            <summary>
            Indicates that items are stored in local memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Gets values by list of keys.</summary>
            <param name="keys">The set of keys for which want to get the values from the cache.</param>
            <returns>
            The dictionary containing the list of keys and the values corresponding to these keys.
            When the value for a specific key was not found, then an entry with this key will be added to the dictionary
            with the <c>null</c> value.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.Remove(System.String)">
            <summary>Removes the value from the cache by its key.</summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.MemoryCacheStore.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Initializes the cache with the specified configuration parameters.</summary>
            <param name="parameters">List of the configuration parameters.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.PrefixKeyTransformerProxy">
            <summary>
            ######-#####, ############# ##### #### ##### ########## # ##### ########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.PrefixKeyTransformerProxy.#ctor">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Store.PrefixKeyTransformerProxy"/>.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.PrefixKeyTransformerProxy.#ctor(System.String,Terrasoft.Core.Store.ICacheStore)">
            <summary>
            ############## ##### ######### <see cref="T:Terrasoft.Core.Store.PrefixKeyTransformerProxy"/> # ######### ##### # #########, 
            ####### ########### # ######.
            </summary>
            <param name="prefix">#######, ####### ########### # ######.</param>
            <param name="store">###, # ####### ######## ######-#####.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.PrefixKeyTransformerProxy.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            ############## ######## ######-###### ########### ###########.
            </summary>
            <param name="parameters">######### ### #############.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.DataLevel">
            <summary>####### ########## ###### # #########.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.DataLevel.Request">
            <summary>####### #######. ######, ########### ## #### ######, ######## ###### # ####### #########
            ######## #######.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.DataLevel.Session">
            <summary>####### ######. ######, ########### ## #### ######, ######## ###### # ###### ######## 
            ############.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.DataLevel.Application">
            <summary>####### ##########. ######, ########### ## #### ######, ######## ### ##### ##########.</summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheLevel">
            <summary>####### ########## ###### # ####.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.CacheLevel.Session">
            <summary>####### ######. ######, ########### ## #### ######, ######## ###### # ###### ######## 
            ############.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.CacheLevel.Workspace">
            <summary>########## ####### ##########. ######, ########### ## #### ######, ##### ######## #### ##### 
            ###-#####. ###### ###### ####### ########### ## ############ ##### #####.</summary>
        </member>
        <member name="F:Terrasoft.Core.Store.CacheLevel.Application">
            <summary>########## ####### ##########. ######, ########### ## #### ######, ##### ######## #### ##### 
            ###-##### ### ##### ######## ############.</summary>.
            <remarks>############ #### ####### ####### ###### # ###### ####### ############# # # ###### 
            ######## ############ ###### ########## # ###-#####.</remarks> 
        </member>
        <member name="T:Terrasoft.Core.Store.IBaseStore">
            <summary>Basic interface for data and cache storages.</summary>
        </member>
        <member name="P:Terrasoft.Core.Store.IBaseStore.Item(System.String)">
            <summary>Gets or sets a storage element by the given key.</summary>
            <param name="key">Element key.</param>
            <returns>Value in the storage that correspond to the <paramref name="key"/> 
            or <c>null</c> if no corresponding value found.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.Store.IBaseStore.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes the storage using given <paramref name="parameters"/>.
            </summary>
            <param name="parameters">Parameters for storage initialization.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.IBaseStore.Remove(System.String)">
            <summary>Removes element in the storage by the <paramref name="key"/>.</summary>
            <param name="key">Element key.</param>
        </member>
        <member name="T:Terrasoft.Core.Store.ICacheStore">
            <summary>Cache storage interface.</summary>
            <remarks>
            Data in a cache store can be removed at any time without any warning.
            Therefore it only should be used for performance optimization.
            Application logic must not rely on presence of any data in a cache storage.
            Use <see cref="T:Terrasoft.Core.Store.IDataStore"> whenever data persistence is required.</see>).
            </remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheStore.IsLocalCache">
            <summary>
            Indicates that data is stored in local application memory.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.ICacheStore.GetValues(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Provides a way to obtain a key-value map of cached items by the list of keys.</summary>
            <param name="keys">Cached items keys.</param>
            <returns>A key-value map of cached data for provided set of keys. 
            Wherever values is not found, <c>null</c> is returned.
            </returns>
        </member>
        <member name="T:Terrasoft.Core.Store.ISessionStore">
            <summary>
            Basic sessions data storage interface.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.ICacheStoreProxy">
            <summary>
            Interface for <see cref="P:Terrasoft.Core.Store.ICacheStoreProxy.CacheStore"/> proxies.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.ICacheStoreProxy.CacheStore">
            <summary>
            <see cref="P:Terrasoft.Core.Store.ICacheStoreProxy.CacheStore"/> used in this proxy.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.IDataStore">
            <summary>Basic interface for data stores.</summary>
            <remarks>Stores data until explicitly deleted.</remarks>
        </member>
        <member name="P:Terrasoft.Core.Store.IDataStore.Keys">
            <summary>
            Storage keys enumeration
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.IDataStoreProxy">
            <summary>
            Interface for <see cref="P:Terrasoft.Core.Store.IDataStoreProxy.DataStore"/> proxies.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.IDataStoreProxy.DataStore">
            <summary>
            <see cref="P:Terrasoft.Core.Store.IDataStoreProxy.DataStore"/> used in this proxy.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.CacheItem">
            <summary>
            Represents a serializable item of a cache.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.CacheItem.Value">
            <summary>
            Cache item value of any type.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.Store">
            <summary>
            Encapsulates static references to singleton instances of 
            <see cref="T:Terrasoft.Core.Store.DataStoreProvider"/> and <see cref="T:Terrasoft.Core.Store.CacheStoreProvider"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.Store.Data">
            <summary>
            Singleton instance of <see cref="T:Terrasoft.Core.Store.DataStoreProvider"/> that provides acces to <see cref="T:Terrasoft.Core.Store.IDataStore"/> 
            for any <see cref="T:Terrasoft.Core.Store.DataLevel"/>
            </summary>
        </member>
        <member name="P:Terrasoft.Core.Store.Store.Cache">
            <summary>
            Singleton instance of <see cref="T:Terrasoft.Core.Store.CacheStoreProvider"/> that provides acces to <see cref="T:Terrasoft.Core.Store.ICacheStore"/> 
            for any <see cref="T:Terrasoft.Core.Store.CacheLevel"/>
            </summary>
        </member>
        <member name="T:Terrasoft.Core.Store.SynchronizedLocalCache">
            <summary>
            Represents a synchronized local cache.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Store.SynchronizedLocalCache.#ctor(System.String,System.String,System.Runtime.Caching.MemoryCache,Terrasoft.Core.Store.ICacheStore)">
            <summary>
            Creates a new instance of the <see cref="T:Terrasoft.Core.Store.SynchronizedLocalCache"/> type.
            </summary>
            <param name="localCachePrefix">Prefix for the local cache.</param>
            <param name="groupName">Name of the entry cache group.</param>
            <param name="memoryCache">Memory cache.</param>
            <param name="cacheStore">Cache storage.</param>
        </member>
        <member name="M:Terrasoft.Core.Store.SynchronizedLocalCache.GetIsExpired(Terrasoft.Core.Store.CacheEntry)">
            <inheritdoc cref="M:Terrasoft.Core.Store.LocalCache.GetIsExpired(Terrasoft.Core.Store.CacheEntry)"/>
        </member>
        <member name="M:Terrasoft.Core.Store.SynchronizedLocalCache.UpdateEntry``1(Terrasoft.Core.Store.CacheEntry,``0)">
            <inheritdoc cref="M:Terrasoft.Core.Store.LocalCache.UpdateEntry``1(Terrasoft.Core.Store.CacheEntry,``0)"/>
        </member>
        <member name="M:Terrasoft.Core.Store.SynchronizedLocalCache.Remove(System.String)">
            <inheritdoc cref="M:Terrasoft.Core.Store.LocalCache.Remove(System.String)"/>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRuleOperation">
            <summary>######## ####### ######### #########.</summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleOperation.Min">
            <summary>########### ########.</summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleOperation.Max">
            <summary>############ ########.</summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleOperation.Const">
            <summary>#########.</summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRuleType">
            <summary>
            System setting rule type.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.Int">
            <summary>
            Integer.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.String">
            <summary>
            String.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.Bool">
            <summary>
            Logical.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRuleType.Lookup">
            <summary>
            Lookup.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRule">
            <summary>
            ####### ######### #########.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRule.#ctor(System.String,System.String,Terrasoft.Core.SysSettingRuleType,Terrasoft.Core.SysSettingRuleOperation)">
            <summary>
            ####### ######### ###### <see cref="T:Terrasoft.Core.SysSettingRule"/> ### ####### # ######## ######, #########, ##### #
            #########.
            </summary>
            <param name="key">#### ######### #########.</param>
            <param name="value">######## ####### ######### #########.</param>
            <param name="valueType">### ####### ######### #########.</param>
            <param name="operation">######## ####### ######### #########.</param>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._key">
            <summary>
            ### ####### ######### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._value">
            <summary>
            ######## ####### ######### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._valueType">
            <summary>
            ### ####### ######### #########.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.SysSettingRule._operation">
            <summary>
            ######## ####### ######### #########.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.SysSettingRuleUtilities">
            <summary>Used by system settings rules.</summary>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRuleUtilities.CheckSysSettingRules(Terrasoft.Core.SysSettingRule,System.Object)">
            <summary>
            Checks system settings value for compliance with rules.
            </summary>
            <param name="sysSettingRule">System settings rule.</param>
            <param name="sysSettingValue">System settings value.</param>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRuleUtilities.TryCheckSysSettingRules(Terrasoft.Core.SysSettingRule,System.Object)">
            <summary>
            Checks system settings value for compliance with rules.
            </summary>
            <param name="sysSettingRule">System settings rule.</param>
            <param name="sysSettingValue">System settings value.</param>
            <returns>True if system settings value is equal. Otherwise returns false.</returns>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRuleUtilities.GetValidSettingValue(System.Collections.Generic.IEnumerable{Terrasoft.Core.SysSettingRule},System.String,System.Object)">
            <summary>
            Gets system setting value which is compliant with the rules.
            </summary>
            <param name="rules">Rule list <see cref="T:Terrasoft.Core.SysSettingRule"/>.</param>
            <param name="code">System setting code.</param>
            <param name="value">System setting value.</param>
            <returns><c>value</c> if system setting value is valid. Otherwise returns
            <see cref="T:Terrasoft.Core.SysSettingRule.Value"/>.</returns>
        </member>
        <member name="M:Terrasoft.Core.SysSettingRuleUtilities.CheckIfTypeIsContainsInSysSettingRuleTypes(System.String)">
            <summary>
            Checks if type is contains in system setting rule types.
            </summary>
            <param name="source">Value type name.</param>
            <returns>True if type is contains. Otherwise returns false.</returns>
        </member>
        <member name="M:Terrasoft.Core.SystemUserConnection.GetSecurityEngineType">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.SystemUserConnection.InitializeCurrentUser(System.String,System.TimeZoneInfo,System.String,System.String,System.Boolean)">
            <remarks>
            ### ######## ###### ## ######### ####### ####### ### ########## ############
            </remarks>
        </member>
        <member name="M:Terrasoft.Core.SystemUserConnection.EnsureDBConnection(Terrasoft.Common.QueryKind)">
            <summary>
            Returns session-wide <see cref="T:Terrasoft.Core.DB.DBExecutor"/> for the given <see cref="T:Terrasoft.Common.QueryKind"/>
            </summary>
            <param name="queryKind"><see cref="T:Terrasoft.Common.QueryKind"/> for which the <see cref="T:Terrasoft.Core.DB.DBExecutor"/> is ensured.</param>
            <returns>Session-wide <see cref="T:Terrasoft.Core.DB.DBExecutor"/></returns>
            <remarks>
            ### ### # ########## ######## # ############ #### ######### SystemUserConnection,
            ### ######## # #########, ##### ############ web ####### ########## #### #########
            ### ########## ######## # ##### ######. ########### ####### # ######
            http://tswiki/pages/viewpage.action?pageId=59671630
            </remarks>
        </member>
        <member name="F:Terrasoft.Core.SystemValue.CurrentTimeSystemValueName">
            <summary>
            The name for the "CurrentTime" system value.
            </summary>
        </member>
        <member name="T:Terrasoft.Core.ISysUserPropertyHelper">
            <summary>
            SysUserProperty helper interface.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.GetProperties(System.String,System.Guid)">
            <summary>
            Returns user properties by manager name and workspace.
            </summary>
            <param name="managerName">Manager name.</param>
            <param name="workspaceId">Workspace identifier.</param>
            <returns>User properties.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.GetProperties(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Returns user properties by manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <returns>User properties.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.GetProperty(Terrasoft.Core.ISchemaManagerItem,System.String)">
            <summary>
            Returns user property by manager item and property name.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">Property name.</param>
            <returns>User property.</returns>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.SetProperties(Terrasoft.Core.ISchemaManagerItem,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Sets user properties of manager item.
            </summary>
            <param name="item">Manager item.</param>
            <param name="properties">User properties.</param>
            <param name="invalidate">If true - invalidates manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.SetProperty(Terrasoft.Core.ISchemaManagerItem,System.String,System.String,System.Boolean)">
            <summary>
            Sets user property of manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">User property name.</param>
            <param name="propertyValue">User property value.</param>
            <param name="invalidate">If true - invalidates manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.SetProperty(Terrasoft.Core.ISchemaManagerItem,System.String,System.String)">
            <summary>
            Sets user property of manager item and invalidates manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">User property name.</param>
            <param name="propertyValue">User property value.</param>
        </member>
        <member name="M:Terrasoft.Core.ISysUserPropertyHelper.RemoveProperty(Terrasoft.Core.ISchemaManagerItem,System.String)">
            <summary>
            Removes user property value of manager item and invalidates manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">User property name.</param>
        </member>
        <member name="T:Terrasoft.Core.SysUserPropertyHelper">
            <summary>
            SysUserProperty helper class.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.#ctor(Terrasoft.Core.UserConnection)">
            <summary>
            Creates an instance of SysUserPropertyHelper class.
            </summary>
            <param name="userConnection">User connection.</param>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.GetProperty(Terrasoft.Core.ISchemaManagerItem,System.String)">
            <summary>
            Returns user property by manager item and property name.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">Property name.</param>
            <returns>User property.</returns>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.GetProperties(Terrasoft.Core.ISchemaManagerItem)">
            <summary>
            Returns user properties by manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <returns>User properties.</returns>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.GetProperties(System.String,System.Guid)">
            <summary>
            Returns user properties by manager name and workspace.
            </summary>
            <param name="managerName">Manager name.</param>
            <param name="workspaceId">Workspace identifier.</param>
            <returns>User properties.</returns>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.SetProperty(Terrasoft.Core.ISchemaManagerItem,System.String,System.String)">
            <summary>
            Sets user property of manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">User property name.</param>
            <param name="propertyValue">User property value.</param>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.RemoveProperty(Terrasoft.Core.ISchemaManagerItem,System.String)">
            <summary>
            Removes user property value of manager item and invalidates manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">User property name.</param>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.SetProperty(Terrasoft.Core.ISchemaManagerItem,System.String,System.String,System.Boolean)">
            <summary>
            Sets user property of manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="propertyName">User property name.</param>
            <param name="propertyValue">User property value.</param>
            <param name="invalidate">If <c>true</c> - invalidates manager item.</param>
        </member>
        <member name="M:Terrasoft.Core.SysUserPropertyHelper.SetProperties(Terrasoft.Core.ISchemaManagerItem,System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            Sets user properties of manager item.
            </summary>
            <param name="managerItem">Manager item.</param>
            <param name="properties">User properties.</param>
            <param name="invalidate">If true - invalidates manager item.</param>
        </member>
        <member name="T:Terrasoft.Core.Tasks.IBackgroundTask`1">
            <summary>
            Represents an operation that runs in background mode.
            </summary>
            <typeparam name="TParameters">The type of the parameters.</typeparam>
        </member>
        <member name="M:Terrasoft.Core.Tasks.IBackgroundTask`1.Run(`0)">
            <summary>
            Runs the operation.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="T:Terrasoft.Core.Tasks.ITaskRunner">
            <summary>
            Used to execute tasks in background mode.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Tasks.ITaskRunner.Run``2(``1)">
            <summary>
            Runs the specified task.
            </summary>
            <typeparam name="TTask">The type of the task.</typeparam>
            <typeparam name="TParameters">The type of the parameters.</typeparam>
            <param name="parameters">The parameters instance.</param>
        </member>
        <member name="M:Terrasoft.Core.Tasks.ITaskRunner.RunWithUserConnection``2(``1)">
            <summary>
            Runs the specified task that requires <see cref="T:Terrasoft.Core.UserConnection"/>.
            </summary>
            <typeparam name="TTask">The type of the task.</typeparam>
            <typeparam name="TParameters">The type of the parameters.</typeparam>
            <param name="parameters">The parameters instance.</param>
        </member>
        <member name="T:Terrasoft.Core.Tasks.Task">
            <summary>
            Represents methods to start an asynchronous operation.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.Tasks.Task.StartNew``2(``1)">
            <summary>
            Starts the new background task.
            </summary>
            <typeparam name="TTask">The type of the task.</typeparam>
            <typeparam name="TParameters">The type of the parameters.</typeparam>
            <param name="parameters">The parameters.</param>
            <seealso cref="T:Terrasoft.Core.Tasks.IBackgroundTask`1"/>
        </member>
        <member name="M:Terrasoft.Core.Tasks.Task.StartNewWithUserConnection``2(``1)">
            <summary>
            Starts the new background task that requires <see cref="T:Terrasoft.Core.UserConnection"/> instance.
            </summary>
            <typeparam name="TTask">The type of the task.</typeparam>
            <typeparam name="TParameters">The type of the parameters.</typeparam>
            <param name="parameters">The parameters.</param>
            <seealso cref="T:Terrasoft.Core.Tasks.IBackgroundTask`1"/>
            <seealso cref="T:Terrasoft.Core.IUserConnectionRequired"/>
        </member>
        <member name="M:Terrasoft.Core.TerrasoftPrincipal.Create(System.String,System.String)">
            <summary>
            Creates instance of <see cref = "T:Terrasoft.Core.TerrasoftPrincipal" /> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="sessionId">The session identifier.</param>
            <returns>Instance of <see cref = "T:Terrasoft.Core.TerrasoftPrincipal" /> class.</returns>
        </member>
        <member name="T:Terrasoft.Core.TimeZoneUtilities">
            <summary>
            Represents methods to work with time zones.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.TimeZoneUtilities.GetTimeZoneInfo(System.String)">
            <summary>
            Retrieves a <see cref="T:System.TimeZoneInfo" /> object given a valid Windows or IANA time zone identifier,
            regardless of which platform the application is running on.
            </summary>
            <param name="timeZoneId">A valid Windows or IANA time zone identifier.</param>
            <returns>A <see cref="T:System.TimeZoneInfo" /> object.</returns>
        </member>
        <member name="M:Terrasoft.Core.TimeZoneUtilities.GetIanaTimeZoneIdFromWindows(System.String)">
            <summary>
            Converts a Windows time zone ID to an equivalent IANA time zone name.
            </summary>
            <param name="windowsTimeZoneId">The Windows time zone ID to convert.</param>
            <returns>An IANA time zone name.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or
            has no equivalent IANA zone.</exception>
        </member>
        <member name="M:Terrasoft.Core.TimeZoneUtilities.GetWindowsTimeZoneIdFromIana(System.String)">
            <summary>
            Converts an IANA time zone name to the equivalent Windows time zone ID.
            </summary>
            <param name="ianaTimeZoneId">The IANA time zone name to convert.</param>
            <returns>A Windows time zone ID.</returns>
            <exception cref="T:System.InvalidTimeZoneException">Thrown if the input string was not recognized or
            has no equivalent Windows zone.</exception>
        </member>
        <member name="M:Terrasoft.Core.TimeZoneUtilities.GetUserTimeZone(Terrasoft.Core.UserConnection)">
            <summary>
            Returns instance of <see cref="T:System.TimeZoneInfo"/> for current user settings.
            </summary>
            <param name="userConnection">Current user connection.</param>
            <returns></returns>
        </member>
        <member name="M:Terrasoft.Core.TimeZoneUtilities.ConvertToUtc(Terrasoft.Core.UserConnection,System.DateTime)">
            <summary>
            Converts time from user time zone to Utc fromat.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="dateTimeLocal">Current user time zone.</param>
            <returns>Instance of <see cref="T:System.DateTime"/> which represents current time in Utc format.</returns>
        </member>
        <member name="M:Terrasoft.Core.TimeZoneUtilities.ConvertFromUtc(Terrasoft.Core.UserConnection,System.DateTime)">
            <summary>
            Converts time from Utc to user time zone fromat.
            </summary>
            <param name="userConnection">Instance of <see cref="T:Terrasoft.Core.UserConnection"/>.</param>
            <param name="dateTimeLocal">Current user time zone.</param>
            <returns>Instance of <see cref="T:System.DateTime"/> in current time zone format.</returns>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.DbExecutorFactory">
            <summary>
            Gets or sets delegate that returns the specified query executor.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.IsDataIsolationEnabled">
            <summary>
            Gets or sets a value indicating whether data isolation mode is enabled.
            </summary>
            <value>
            <c>true</c> if data isolation enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.DcmSchemaManager">
            <summary>
            Gets DCM schema manager.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.UserConnection._processUserTaskSchemaManager">
            <summary>
            Gets Process user task schema manager.
            </summary>
        </member>
        <member name="F:Terrasoft.Core.UserConnection._processEngine">
            <summary>
            Gets Process engine interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.IProcessEngine">
            <summary>
            Gets Process engine interface.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.RequestData">
            <summary>
            Request-level data storage.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.SessionData">
            <summary>
            Session-level data storage.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.ApplicationData">
            <summary>
            Application-level data storage.
            </summary>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.IsSystemOperationsRestricted">
            <summary>
            Gets or sets a value indicating whether system operations are restricted.
            </summary>
            <value>
            <c>true</c> if system operations are not allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Terrasoft.Core.UserConnection.ExternalAccessId">
            <summary>
            Gets or sets the external access identifier.
            </summary>
            <value>
            The external access identifier.
            </value>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.Dispose(System.Boolean)">
            <summary>
            Disposes managed and unmanaged resources.
            </summary>
            <param name="disposing">Value indicates whether it is needed to dispose all managed and unmanaged resources.
            </param>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.CreateSystemSecurityContext">
            <summary>
            Returns context that represents behaviour of the system security.
            </summary>
            <returns>Instance that implements behaviour to dispose.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.GetSecurityEngineType">
            <summary>
            Returns type of the security engine.
            </summary>
            <returns>Type of the security engine.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.CreateDbExecutor">
            <summary>
            Returns the specified query executor for the process engine.
            </summary>
            <returns>Instance of the <see cref="T:Terrasoft.Core.DB.DBExecutor"/> type.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.SetCurrentUserCulture">
            <summary>
            Sets date/time format using user settings.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.GetRootAdminUnitGroupId(Terrasoft.Core.UserType)">
            <summary>
            Returns root <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> group identifier for <paramref name="userType"/>.
            </summary>
            <param name="userType">User type.</param>
            <returns>Root <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> group identifier.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.GetRootAdminUnitGroupName(Terrasoft.Core.UserType)">
            <summary>
            Returns root <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> group name for <paramref name="userType"/>.
            </summary>
            <param name="userType">User type.</param>
            <returns>Root <see cref="T:Terrasoft.Core.Configuration.SysAdminUnit"/> group name.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.EnsureDBConnection">
            <summary>
            Returns a default instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/> and ensures that the connection to database
            will be available until DBExecutor is disposed.
            </summary>
            <returns>Default <see cref="T:Terrasoft.Core.DB.DBExecutor"/> instance.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.EnsureDBConnection(Terrasoft.Common.QueryKind)">
            <summary>
            Returns an instance of <see cref="T:Terrasoft.Core.DB.DBExecutor"/> associated with this <see cref="T:Terrasoft.Core.UserConnection"/>
            for the given <see cref="T:Terrasoft.Common.QueryKind"/>, and ensures that the connection to database will remain open
            until dbExecutor is disposed.
            </summary>
            <param name="queryKind">Query kind for which a DBExecutor is returned.</param>
            <returns>DbExecutor for a given QueryKind.</returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnection.Terrasoft#Core#IUserConnection#SetServiceProvider(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="M:Terrasoft.Core.UserConnection.Dispose">
            <summary>
            Performs operations associated with freeing, releasing resources.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.UserConnectionUtilities.GetIgnoreSelectRightsSchemaColumns(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Determines which schema names and column names collections are ignored for rights administration.
            </summary>
            <param name="schemaColumnPaths"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <returns>Schema names and column names collections which are ignored for rights administration.
            </returns>
        </member>
        <member name="M:Terrasoft.Core.UserConnectionUtilities.GetIgnoreSelectRightsSchemaNames(Terrasoft.Core.UserConnection)">
            <summary>
            Determines which schema names and column names collections are ignored for rights administration.
            </summary>
            <param name="source"><see cref="T:Terrasoft.Core.UserConnection"/> instance.</param>
            <returns>Schema names and column names collections which are ignored for rights administration.</returns>
            <remarks><para>Extension method for <see cref="T:Terrasoft.Core.UserConnection"/> class.</para></remarks>
        </member>
        <member name="T:Terrasoft.Core.UserProperty">
            <summary>
            The class for the user properties.
            </summary>
            <seealso cref="T:Terrasoft.Core.ExtraProperty" />
        </member>
        <member name="P:Terrasoft.Core.UserProperty.NullValue">
            <summary>
            Represents the value which will not be written to database.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.UserProperty.TrySetValue(System.String,System.Boolean@)">
            <summary>
            Sets the value.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="wasReset">Indicates that value was set to <see cref="P:Terrasoft.Core.UserProperty.NullValue"/>'s value.</param>
            <returns><c>true</c> if property was set; otherwise - <c>false</c>.</returns>
        </member>
        <member name="T:Terrasoft.Core.UserPropertyCollection">
            <summary>
            The collection of the <see cref="T:Terrasoft.Core.UserProperty"/> items.
            </summary>
            <seealso cref="T:Terrasoft.Core.BaseExtraPropertyCollection`1" />
        </member>
        <member name="M:Terrasoft.Core.UserPropertyResolver.CreateProperty(Terrasoft.Core.ExtraPropertyInfo)">
            <inheritdoc />
        </member>
        <member name="T:Terrasoft.Core.IWorkspaceAssemblyCollector">
            <summary>
            Collects all assemblies from workspace including compound configuration assembly and assemblies attached to
            packages.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.IWorkspaceAssemblyCollector.GetAssemblies(Terrasoft.Core.Configuration.SysWorkspace,Terrasoft.Core.Attributes.RefAssemblyMarker)">
            <summary>
            Gets the assemblies.
            </summary>
            <param name="workspace">The workspace.</param>
            <param name="refAssemblyMarker">The reference assembly marker.</param>
            <returns>The filtered assembly list.</returns>
        </member>
        <member name="T:Terrasoft.Core.WorkspaceAssemblyCollector">
            <summary>
            Collects all assemblies from workspace including compound configuration assembly and assemblies attached to
            packages.
            </summary>
        </member>
        <member name="M:Terrasoft.Core.WorkspaceAssemblyCollector.GetAssemblies(Terrasoft.Core.Configuration.SysWorkspace,Terrasoft.Core.Attributes.RefAssemblyMarker)">
            <summary>
            Gets the assemblies filtered by ref attribute. Returns empty collection if workspace not initialized.
            </summary>
            <param name="workspace">The target workspace.</param>
            <param name="refAssemblyMarker">The reference assembly marker.</param>
            <returns>The filtered assembly list.</returns>
        </member>
    </members>
</doc>
